{
  "basePath": {}, 
  "definitions": {
    "AddFloatingIP": {
      "properties": {
        "pool": {
          "description": "The pool to which to add the floating IP address.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "AllocateFloatingIP": {
      "properties": {
        "pool": {
          "description": "Pool to allocate IP address from. Will use default pool if not\nspecified.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "CreateFloatingIPsBulk": {
      "properties": {
        "ip_range": {
          "description": "The range of IP addresses to use for creating floating IPs.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "CreateNetwork": {
      "properties": {
        "bridge": {
          "description": "VIFs on this network are connected to this bridge.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "bridge_interface": {
          "description": "The bridge is connected to this interface.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "broadcast": {
          "description": "The broadcast address.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "cidr": {
          "description": "IPv4 subnet.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "cidr_v6": {
          "description": "IPv6 subnet.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "deleted": {
          "description": "Deleted flag.", 
          "format": "", 
          "required": false, 
          "type": "boolean"
        }, 
        "deleted_at": {
          "description": "The date and time when the server or image was deleted.\n\nThe date and time stamp format is ISO 8601 :\n\nCCYY-MM-DDThh:mm:ss\u00b1hh:mmThe ``\u00b1hh:mm`` value, if included, returns the time zone as an\noffset from UTC.\n\nFor example, ``2015-08-27T09:49:58-05:00`` .\n\nIf you omit the deleted-at date and time stamp, its value is\n``null`` .", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "dhcp_start": {
          "description": "DHCP starting address.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "dns1": {
          "description": "First DNS.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "dns2": {
          "description": "Second DNS.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "gateway": {
          "description": "IPv4 gateway.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "gateway_v6": {
          "description": "IPv6 gateway.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "host": {
          "description": "Network host.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "id": {
          "description": "The network ID.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "injected": {
          "description": "Injected flag.", 
          "format": "", 
          "required": false, 
          "type": "boolean"
        }, 
        "label": {
          "description": "Network label.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "multi_host": {
          "description": "Multi host.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "netmask": {
          "description": "The net mask.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "netmask_v6": {
          "description": "The IPv6 net mask.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "network": {
          "description": "A dictionary representation of a network.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "priority": {
          "description": "Network priority.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "project_id": {
          "description": "Project ID.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "rxtx_base": {
          "description": "RXTX base factor value for the network.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "updated_at": {
          "description": "The date and time when the server or image was updated.\n\nThe date and time stamp format is ISO 8601 :\n\nCCYY-MM-DDThh:mm:ss\u00b1hh:mmThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nFor example, ``2015-08-27T09:49:58-05:00`` .\n\nIf you omit the time zone, the UTC time zone is assumed.\n\nIf you omit the updated-at date and time stamp, its value is\n``null`` .", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "vlan": {
          "description": "VLAN ID.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "vpn_private_address": {
          "description": "VPN private address.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "vpn_public_address": {
          "description": "VPN public address.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "vpn_public_port": {
          "description": "VPN public port.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "CreateNetwork_202": {
      "properties": {
        "bridge": {
          "description": "VIFs on this network are connected to this bridge.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "bridge_interface": {
          "description": "The bridge is connected to this interface.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "broadcast": {
          "description": "The broadcast address.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "cidr": {
          "description": "IPv4 subnet.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "cidr_v6": {
          "description": "IPv6 subnet.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "created_at": {
          "description": "The date and time when the server, image, or backup was created.\n\nThe date and time stamp format is ISO 8601 :\n\nCCYY-MM-DDThh:mm:ss\u00b1hh:mmFor example, ``2015-08-27T09:49:58-05:00`` .\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nIf the updated-at date and time stamp is not set, its value is\n``null`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "deleted": {
          "description": "Deleted flag.", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "deleted_at": {
          "description": "The date and time when the server or image was deleted.\n\nThe date and time stamp format is ISO 8601 :\n\nCCYY-MM-DDThh:mm:ss\u00b1hh:mmFor example, ``2015-08-27T09:49:58-05:00`` .\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nIf the deleted-at date and time stamp is not set, its value is\n``null`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "dhcp_start": {
          "description": "DHCP starting address.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "dns1": {
          "description": "First DNS.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "dns2": {
          "description": "Second DNS.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "gateway": {
          "description": "IPv4 gateway.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "gateway_v6": {
          "description": "IPv6 gateway.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "host": {
          "description": "Network host.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The network ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "injected": {
          "description": "Injected flag.", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "label": {
          "description": "Network label.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "multi_host": {
          "description": "Multi host.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "netmask": {
          "description": "The net mask.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "netmask_v6": {
          "description": "The IPv6 net mask.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "network": {
          "description": "A dictionary representation of a network.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "priority": {
          "description": "Network priority.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "project_id": {
          "description": "Project id.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "rxtx_base": {
          "description": "RXTX base factor value for the network.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "updated_at": {
          "description": "The date and time when the server or image was updated.\n\nThe date and time stamp format is ISO 8601 :\n\nCCYY-MM-DDThh:mm:ss\u00b1hh:mmThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nFor example, ``2015-08-27T09:49:58-05:00`` .\n\nIf you omit the time zone, the UTC time zone is assumed.\n\nIf you omit the updated-at date and time stamp, its value is\n``null`` .", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "vlan": {
          "description": "VLAN ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "vpn_private_address": {
          "description": "VPN private address.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "vpn_public_address": {
          "description": "VPN public address.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "vpn_public_port": {
          "description": "VPN public port.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "DeleteFloatingIPBulk": {
      "properties": {
        "ip_range": {
          "description": "The range of IP addresses from which to bulk-delete floating IPs.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "GetNetwork_200": {
      "properties": {
        "bridge": {
          "description": "VIFs on this network are connected to this bridge.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "bridge_interface": {
          "description": "The bridge is connected to this interface.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "broadcast": {
          "description": "The broadcast address.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "cidr": {
          "description": "IPv4 subnet.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "cidr_v6": {
          "description": "IPv6 subnet.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "created_at": {
          "description": "The date and time when the server, image, or backup was created.\n\nThe date and time stamp format is ISO 8601 :\n\nCCYY-MM-DDThh:mm:ss\u00b1hh:mmFor example, ``2015-08-27T09:49:58-05:00`` .\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nIf the updated-at date and time stamp is not set, its value is\n``null`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "deleted": {
          "description": "Deleted flag.", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "deleted_at": {
          "description": "The date and time when the server or image was deleted.\n\nThe date and time stamp format is ISO 8601 :\n\nCCYY-MM-DDThh:mm:ss\u00b1hh:mmFor example, ``2015-08-27T09:49:58-05:00`` .\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nIf the deleted-at date and time stamp is not set, its value is\n``null`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "dhcp_start": {
          "description": "DHCP starting address.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "dns1": {
          "description": "First DNS.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "dns2": {
          "description": "Second DNS.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "gateway": {
          "description": "IPv4 gateway.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "gateway_v6": {
          "description": "IPv6 gateway.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "host": {
          "description": "Network host.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The network ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "injected": {
          "description": "Injected flag.", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "label": {
          "description": "Network label.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "multi_host": {
          "description": "Multi host.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "netmask": {
          "description": "The net mask.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "netmask_v6": {
          "description": "The IPv6 net mask.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "network": {
          "description": "A dictionary representation of a network.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "priority": {
          "description": "Network priority.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "project_id": {
          "description": "Project id.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "rxtx_base": {
          "description": "RXTX base factor value for the network.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "updated_at": {
          "description": "The date and time when the server or image was updated.\n\nThe date and time stamp format is ISO 8601 :\n\nCCYY-MM-DDThh:mm:ss\u00b1hh:mmThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nFor example, ``2015-08-27T09:49:58-05:00`` .\n\nIf you omit the time zone, the UTC time zone is assumed.\n\nIf you omit the updated-at date and time stamp, its value is\n``null`` .", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "vlan": {
          "description": "VLAN ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "vpn_private_address": {
          "description": "VPN private address.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "vpn_public_address": {
          "description": "VPN public address.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "vpn_public_port": {
          "description": "VPN public port.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "GetUsage": {
      "properties": {
        "detailed": {
          "description": "Whether to return detailed usage information. Defaults to false.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "end": {
          "description": "The end of the time range, in date time format.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "start": {
          "description": "The start of a time range, in date time format.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ListNetworks_200": {
      "properties": {
        "bridge": {
          "description": "VIFs on this network are connected to this bridge.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "bridge_interface": {
          "description": "The bridge is connected to this interface.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "broadcast": {
          "description": "The broadcast address.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "cidr": {
          "description": "IPv4 subnet.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "cidr_v6": {
          "description": "IPv6 subnet.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "created_at": {
          "description": "The date and time when the server, image, or backup was created.\n\nThe date and time stamp format is ISO 8601 :\n\nCCYY-MM-DDThh:mm:ss\u00b1hh:mmFor example, ``2015-08-27T09:49:58-05:00`` .\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nIf the updated-at date and time stamp is not set, its value is\n``null`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "deleted": {
          "description": "Deleted flag.", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "deleted_at": {
          "description": "The date and time when the server or image was deleted.\n\nThe date and time stamp format is ISO 8601 :\n\nCCYY-MM-DDThh:mm:ss\u00b1hh:mmFor example, ``2015-08-27T09:49:58-05:00`` .\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nIf the deleted-at date and time stamp is not set, its value is\n``null`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "dhcp_start": {
          "description": "DHCP starting address.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "dns1": {
          "description": "First DNS.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "dns2": {
          "description": "Second DNS.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "gateway": {
          "description": "IPv4 gateway.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "gateway_v6": {
          "description": "IPv6 gateway.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "host": {
          "description": "Network host.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The network ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "injected": {
          "description": "Injected flag.", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "label": {
          "description": "Network label.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "multi_host": {
          "description": "Multi host.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "netmask": {
          "description": "The net mask.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "netmask_v6": {
          "description": "The IPv6 net mask.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "network": {
          "description": "A dictionary representation of a network.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "priority": {
          "description": "Network priority.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "project_id": {
          "description": "Project id.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "rxtx_base": {
          "description": "RXTX base factor value for the network.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "updated_at": {
          "description": "The date and time when the server or image was updated.\n\nThe date and time stamp format is ISO 8601 :\n\nCCYY-MM-DDThh:mm:ss\u00b1hh:mmThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nFor example, ``2015-08-27T09:49:58-05:00`` .\n\nIf you omit the time zone, the UTC time zone is assumed.\n\nIf you omit the updated-at date and time stamp, its value is\n``null`` .", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "vlan": {
          "description": "VLAN ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "vpn_private_address": {
          "description": "VPN private address.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "vpn_public_address": {
          "description": "VPN public address.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "vpn_public_port": {
          "description": "VPN public port.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ListUsage": {
      "properties": {
        "detailed": {
          "description": "Whether to return detailed usage information. Defaults to false.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "end": {
          "description": "The end of the time range, in date time format.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "start": {
          "description": "The start of a time range, in date time format.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "RemoveFloatingIP": {
      "properties": {
        "address": {
          "description": "The floating IP address that you want to remove.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "removeFloatingIp": {
          "description": "Specify the ``removeFloatingIp`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "addFloatingIP": {
      "properties": {
        "addFloatingIp": {
          "description": "Specify the ``addFloatingIP`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "address": {
          "description": "A floating IP address to associate with the instance.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "fixed_address": {
          "description": "A fixed IP address that you want to associate with the floating IP\naddress.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "addTenantAccess": {
      "properties": {
        "addTenantAccess": {
          "description": "Specify the ``addTenantAccess`` action.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "tenant": {
          "description": "The UUID of the tenant to which to give access.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "addTenantAccess_200": {
      "properties": {
        "flavor_id": {
          "description": "The flavor ID.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "tenant_id": {
          "description": "The tenant ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "add_host": {
      "properties": {
        "host": {
          "description": "Host ID to add to an aggregate, which is a collection of multiple\ngroups of hosts that share common resources like storage and\nnetwork.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createAccess": {
      "properties": {
        "disk": {
          "description": "Integer value for the minimum disk space in GB.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "id": {
          "description": "The flavor ID.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "name": {
          "description": "The flavor name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "os-flavor-access:is_public": {
          "description": "Set to true if access is public. Set to false if access is private.", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "ram": {
          "description": "Amount of RAM.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "vcpus": {
          "description": "Number of VCPUs.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "createAccess_200": {
      "properties": {
        "disk": {
          "description": "Integer value for the minimum disk space in GB.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "id": {
          "description": "The flavor ID.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "links": {
          "description": "Flavor links.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The flavor name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "os-flavor-access:is_public": {
          "description": "Set to true if access is public. Set to false if access is private.", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "ram": {
          "description": "Amount of RAM.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "vcpus": {
          "description": "Number of VCPUs.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "createAttachInterface": {
      "properties": {
        "fixed_ips": {
          "description": "Fixed IP addresses with subnet IDs.\n\nIf you request a specific fixed IP address without a ``net_id`` ,\nthe request returns a ``400 BadRequest`` error code.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "interfaceAttachment": {
          "description": "Specify the ``interfaceAttachment`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "net_id": {
          "description": "The ID of the network for which you want to create an interface.\n\nThe ``net_id`` and ``port_id`` parameters are mutually exclusive.\n\nIf you do not specify the ``net_id`` parameter, the OpenStack\nNetworking API v2.0 uses the network information cache that is\nassociated with the instance.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "port_id": {
          "description": "The ID of the port for which you want to create an interface.\n\nThe ``net_id`` and ``port_id`` parameters are mutually exclusive.\n\nIf you do not specify the ``port_id`` parameter, the OpenStack\nNetworking API v2.0 allocates a port on the specified network.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createAttachInterface_202": {
      "properties": {
        "fixed_ips": {
          "description": "Fixed IP addresses with subnet IDs.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "mac_addr": {
          "description": "The MAC address.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "net_id": {
          "description": "The network ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "port_id": {
          "description": "The port ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "port_state": {
          "description": "The port state.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createBackup": {
      "properties": {
        "backup_type": {
          "description": "The backup type. Either 'daily' or 'weekly.'", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "createBackup": {
          "description": "Specify the ``createBackup`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "Name of the backup image.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "rotation": {
          "description": "An integer value that represents the number of backups to maintain.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "createFlavor": {
      "properties": {
        "disk": {
          "description": "The amount of disk space, in GBs.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The ID for the new flavor, which is a unique integer value.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The name for the new flavor.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "ram": {
          "description": "The amount of RAM, in MBs, for this flavor.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "vcpus": {
          "description": "The virtual CPUs, in a whole integer amount, for the new flavor.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createKeypair": {
      "properties": {
        "name": {
          "description": "The name to associate with the keypair.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "public_key": {
          "description": "The public ssh key to import. If not provided, a key is generated.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createSecGroup": {
      "properties": {
        "description": {
          "description": "Security group description.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "name": {
          "description": "The security group name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "security_group": {
          "description": "Specify the ``security_group`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createSecGroupRule": {
      "properties": {
        "cidr": {
          "description": "The CIDR for address range.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "from_port": {
          "description": "Port at start of range.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "id": {
          "description": "Security group name or ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "ip_protocol": {
          "description": "The IP protocol: ICMP, TCP, or UDP.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "to_port": {
          "description": "Port at end of range.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "createSecGroupRule_200": {
      "properties": {
        "cidr": {
          "description": "The CIDR for address range.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "from_port": {
          "description": "Port at start of range.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "id": {
          "description": "Security group ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "ip_protocol": {
          "description": "The IP protocol: ICMP, TCP, or UDP.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "ip_range": {
          "description": "An IP range object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "to_port": {
          "description": "Port at end of range.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "createSecGroup_200": {
      "properties": {
        "description": {
          "description": "Security group description.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The security group ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The security group name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "security_group": {
          "description": "A ``security_group`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "tenant_id": {
          "description": "The tenant.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createServer": {
      "properties": {
        "availability_zone": {
          "description": "The availability zone in which to launch the server.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "block_device_mapping_v2": {
          "description": "Enables booting the server from a volume when additional parameters\nare given. If specified, the volume status must be ``available`` ,\nand the volume ``attach_status`` in the OpenStack Block Storage\ndatabase must be ``detached`` .", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "boot_index": {
          "description": "The boot order of the device. Use ``-1`` for the boot volume. Use\n``0`` for an attached volume.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "config_drive": {
          "description": "Enables metadata injection in a server through a configuration\ndrive.\n\nSpecify ``true`` to enable a configuration drive. Otherwise,\nspecify ``false`` .", 
          "format": "", 
          "required": false, 
          "type": "boolean"
        }, 
        "delete_on_termination": {
          "description": "To delete the boot volume when the server stops, specify ``true`` .\nOtherwise, specify ``false`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "destination_type": {
          "description": "Defines where the volume comes from. A valid value is ``local`` or\n``volume`` .", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "device_name": {
          "description": "Describes a path to the device for the volume you want to use to\nboot the server.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "fixed_ip": {
          "description": "A fixed IPv4 address for the NIC. Valid with a ``neutron`` or\n``nova-networks`` network.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "flavorRef": {
          "description": "The flavor reference for the desired flavor for your server\ninstance.\n\nSpecify as an ID or full URL.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "guest_format": {
          "description": "Specifies the guest server disk file system format, such as\n``ephemeral`` or ``swap`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "imageRef": {
          "description": "The image reference for the desired image for your server instance.\n\nSpecify as an ID or full URL.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "key_name": {
          "description": "Key pair name.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "max_count": {
          "description": "The maximum number of servers to launch when the service provider\nenables multiple server launch.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "metadata": {
          "description": "Metadata key and value pairs. The maximum size of the metadata key\nand value is 255 bytes each.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "min_count": {
          "description": "The minimum number of servers to launch when the service provider\nenables multiple server launch.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "name": {
          "description": "The server name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "networks": {
          "description": "A ``networks`` object. By default, the server instance is\nprovisioned with all isolated networks for the tenant.\n\nOptionally, you can create one or more NICs on the server.\n\nTo provision the server instance with a NIC for a network, specify\nthe UUID of the network in the ``uuid`` attribute in a ``networks``\nobject.\n\nTo provision the server instance with a NIC for an already existing\nport, specify the port-id in the ``port`` attribute in a\n``networks`` object.\n\nYou can specify multiple NICs on the server.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "personality": {
          "description": "File path and contents (text only) to inject into the server at\nlaunch. The maximum size of the file path data is 255 bytes. The\nmaximum limit refers to the number of bytes in the decoded data and\nnot the number of characters in the encoded data.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "port": {
          "description": "To provision the server instance with a NIC for an already existing\nport, specify the port-id in the ``port`` attribute in a\n``networks`` object. The port status must be ``DOWN`` . Required if\nyou omit the ``uuid`` attribute.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "return_reservation_id": {
          "description": "Set to ``True`` to generate a reservation ID for each server. Omit\nthis attribute to create servers without a reservation ID. This\nextended attribute is enabled when the service provider enables\nmultiple server launch.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "security_groups": {
          "description": "One or more security groups. Specify the name of the security group\nin the ``name`` attribute. If you omit this attribute, the server\nis created in the ``default`` security group.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "server": {
          "description": "server.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "source_type": {
          "description": "The source type for the volume. A valid value is ``blank`` ,\n``snapshot`` , ``volume`` , or ``image`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "user_data": {
          "description": "Configuration information or scripts to use upon launch. Must be\nBase64 encoded.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "uuid": {
          "description": "To provision the server instance with a NIC for a network, specify\nthe UUID of the network in the ``uuid`` attribute in a ``networks``\nobject. Required if you omit the ``port`` attribute.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createServerGroup": {
      "properties": {
        "name": {
          "description": "The server group name. A non-empty string with no leading or\ntrailing spaces. Maximum length is 255 characters.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "policies": {
          "description": "A list of one or more policy names to associate with the server\ngroup. The list must contain at least one policy name.\n\nEach policy name must be a non-empty string with no leading or\ntrailing spaces. Maximum length is 255 characters.", 
          "format": "", 
          "required": false, 
          "type": "object"
        }
      }, 
      "type": "object"
    }, 
    "createServerGroup_200": {
      "properties": {
        "id": {
          "description": "The ID for the server group.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "members": {
          "description": "A list of members in the server group.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "metadata": {
          "description": "Associated metadata key-and-value pairs.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The name of the server group.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "policies": {
          "description": "A list of policies associated with the server group.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "server_group": {
          "description": "A ``server_group`` groups VMs based on common characteristics so\nthat you can apply policies to groups or categorize servers for\nscheduling purposes.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createServer_202": {
      "properties": {
        "availability_zone": {
          "description": "The availability zone in which to launch the server.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "block_device_mapping_v2": {
          "description": "Enables booting the server from a volume when additional parameters\nare given. If specified, the volume status must be ``available`` ,\nand the volume ``attach_status`` in the OpenStack Block Storage\ndatabase must be ``detached`` .", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "boot_index": {
          "description": "The boot order of the device. Use ``-1`` for the boot volume. Use\n``0`` for an attached volume.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "config_drive": {
          "description": "Enables metadata injection in a server through a configuration\ndrive.\n\nSpecify ``true`` to enable a configuration drive. Otherwise,\nspecify ``false`` .", 
          "format": "", 
          "required": false, 
          "type": "boolean"
        }, 
        "delete_on_termination": {
          "description": "To delete the boot volume when the server stops, specify ``true`` .\nOtherwise, specify ``false`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "destination_type": {
          "description": "Defines where the volume comes from. A valid value is ``local`` or\n``volume`` .", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "device_name": {
          "description": "Describes a path to the device for the volume you want to use to\nboot the server.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "fixed_ip": {
          "description": "A fixed IPv4 address for the NIC. Valid with a ``neutron`` or\n``nova-networks`` network.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "flavorRef": {
          "description": "The flavor reference for the desired flavor for your server\ninstance.\n\nSpecify as an ID or full URL.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "guest_format": {
          "description": "Specifies the guest server disk file system format, such as\n``ephemeral`` or ``swap`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "imageRef": {
          "description": "The image reference for the desired image for your server instance.\n\nSpecify as an ID or full URL.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "key_name": {
          "description": "Key pair name.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "metadata": {
          "description": "Metadata key and value pairs. The maximum size of the metadata key\nand value is 255 bytes each.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "name": {
          "description": "The server name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "networks": {
          "description": "A ``networks`` object. By default, the server instance is\nprovisioned with all isolated networks for the tenant.\n\nOptionally, you can create one or more NICs on the server.\n\nTo provision the server instance with a NIC for a network, specify\nthe UUID of the network in the ``uuid`` attribute in a ``networks``\nobject.\n\nTo provision the server instance with a NIC for an already existing\nport, specify the port-id in the ``port`` attribute in a\n``networks`` object.\n\nYou can specify multiple NICs on the server.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "personality": {
          "description": "File path and contents (text only) to inject into the server at\nlaunch. The maximum size of the file path data is 255 bytes. The\nmaximum limit refers to the number of bytes in the decoded data and\nnot the number of characters in the encoded data.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "port": {
          "description": "To provision the server instance with a NIC for an already existing\nport, specify the port-id in the ``port`` attribute in a\n``networks`` object. The port status must be ``DOWN`` . Required if\nyou omit the ``uuid`` attribute.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "security_groups": {
          "description": "One or more security groups. Specify the name of the security group\nin the ``name`` attribute. If you omit this attribute, the server\nis created in the ``default`` security group.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "server": {
          "description": "server.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "source_type": {
          "description": "The source type for the volume. A valid value is ``blank`` ,\n``snapshot`` , ``volume`` , or ``image`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "user_data": {
          "description": "Configuration information or scripts to use upon launch. Must be\nBase64 encoded.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "uuid": {
          "description": "To provision the server instance with a NIC for a network, specify\nthe UUID of the network in the ``uuid`` attribute in a ``networks``\nobject. Required if you omit the ``port`` attribute.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createSnapshot": {
      "properties": {
        "snapshot": {
          "description": "A partial representation of a snapshot that is used to create a\nsnapshot.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createVolume": {
      "properties": {
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "display_description": {
          "description": "The volume description.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "display_name": {
          "description": "The volume name.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs to associate with the\nvolume.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "size": {
          "description": "The size of the volume, in gigabytes (GB).", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "snapshot_id": {
          "description": "The unique identifier for a snapshot.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "volume_type": {
          "description": "The unique identifier for a volume type.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "create_aggregate": {
      "properties": {
        "availability_zone": {
          "description": "Availability zone of aggregate", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "Name of aggregate", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "detailAccess_200": {
      "properties": {
        "disk": {
          "description": "Integer value for the minimum disk space in GB.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "id": {
          "description": "The flavor ID.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "links": {
          "description": "Flavor links.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The flavor name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "os-flavor-access:is_public": {
          "description": "Set to true if access is public. Set to false if access is private.", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "ram": {
          "description": "Amount of RAM.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "vcpus": {
          "description": "Number of VCPUs.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "disableLogReason": {
      "properties": {
        "binary": {
          "description": "The service name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "disabled_reason": {
          "description": "The reason the service was disabled.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "host": {
          "description": "The host name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "evacuate": {
      "properties": {
        "adminPass": {
          "description": "Specifies a new admin password for the evacuated instance.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "evacuate": {
          "description": "Specify the ``evacuate`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "host": {
          "description": "The name or ID of the host where the server is evacuated.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "onSharedStorage": {
          "description": "If server is on shared storage, set to True. Otherwise, set to\nFalse.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "forceDelete": {
      "properties": {
        "forceDelete": {
          "description": "Specify the ``forceDelete`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "getConsole": {
      "properties": {
        "getConsole": {
          "description": "Specify the ``getConsole`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "type": {
          "description": "Valid values are ``novnc`` and ``xvpvnc`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "getConsoleOutput": {
      "properties": {
        "length": {
          "description": "Number of lines to fetch from the end of console log.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "os-getConsoleOutput": {
          "description": "Specify the ``os-getConsoleOutput`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "getCustomerLimits_200": {
      "properties": {
        "maxImageMeta": {
          "description": "The maximum number of key-value pairs per image for the project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxPersonality": {
          "description": "The maximum number of file path and content pairs that can be\nsupplied on server build and rebuild for the project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxPersonalitySize": {
          "description": "The maximum size, in bytes, for each personality file that is\nguaranteed to apply to all images in the project. Providers can set\nadditional per-image personality limits.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxSecurityGroupRules": {
          "description": "The maximum number of security group rules per security group for\nthe project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxSecurityGroups": {
          "description": "The maximum number of security groups per server for the project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxServerGroupMembers": {
          "description": "The maximum number of server group members per server group for the\nproject.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxServerGroups": {
          "description": "The maximum number of server groups per server for the project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxServerMeta": {
          "description": "The maximum number of metadata key-value pairs that can be supplied\nper server for the project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxTotalCores": {
          "description": "The maximum number of cores for the project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxTotalFloatingIps": {
          "description": "The maximum number of floating IP addresses for the project.\n\nThese IPs must be allocated from the central pool before you can\nuse them. To allocate a floating IP to a project, see Associate\nfloating IP addresses .", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxTotalInstances": {
          "description": "The maximum number of servers at any one time for the project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxTotalKeypairs": {
          "description": "The maximum number of key pairs per server for the project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxTotalRAMSize": {
          "description": "The maximum total amount of RAM, in MB, for all servers at any one\ntime for the project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "rate": {
          "description": "Current rate limits.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "totalCoresUsed": {
          "description": "Total cores used.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "totalFloatingIpsUsed": {
          "description": "Total floating IP addresses used.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "totalInstancesUsed": {
          "description": "Total instances used.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "totalRAMUsed": {
          "description": "Total RAM, in MB, used for all servers at any one time.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "totalSecurityGroupsUsed": {
          "description": "Total security groups used.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "getDefaults_200": {
      "properties": {
        "cores": {
          "description": "The number of instance cores allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of fixed IP addresses allowed for each tenant. Must be\nequal to or greater than the number of allowed instances.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of floating IP addresses allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID for the quota set.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of bytes of content allowed for each injected file.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of bytes allowed for each injected file path.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of injected files allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of instances allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of key pairs allowed for each user.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of metadata items allowed for each instance.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A quota_set object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "ram": {
          "description": "The amount of instance RAM in megabytes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of rules allowed for each security group.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of security groups allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "server_group_members": {
          "description": "The number of members allowed for each server group.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "server_groups": {
          "description": "The number of server groups allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "getImage_200": {
      "properties": {
        "OS-DCF:diskConfig": {
          "description": "Valid value is AUTO or MANUAL.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "getImagesDetailed_200": {
      "properties": {
        "OS-DCF:diskConfig": {
          "description": "Valid value is AUTO or MANUAL.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "getLimits_200": {
      "properties": {
        "maxImageMeta": {
          "description": "The maximum number of key-value pairs per image for the project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxPersonality": {
          "description": "The maximum number of file path and content pairs that can be\nsupplied on server build and rebuild for the project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxPersonalitySize": {
          "description": "The maximum size, in bytes, for each personality file that is\nguaranteed to apply to all images in the project. Providers can set\nadditional per-image personality limits.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxSecurityGroupRules": {
          "description": "The maximum number of security group rules per security group for\nthe project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxSecurityGroups": {
          "description": "The maximum number of security groups per server for the project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxServerGroupMembers": {
          "description": "The maximum number of server group members per server group for the\nproject.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxServerGroups": {
          "description": "The maximum number of server groups per server for the project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxServerMeta": {
          "description": "The maximum number of metadata key-value pairs that can be supplied\nper server for the project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxTotalCores": {
          "description": "The maximum number of cores for the project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxTotalFloatingIps": {
          "description": "The maximum number of floating IP addresses for the project.\n\nThese IPs must be allocated from the central pool before you can\nuse them. To allocate a floating IP to a project, see Associate\nfloating IP addresses .", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxTotalInstances": {
          "description": "The maximum number of servers at any one time for the project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxTotalKeypairs": {
          "description": "The maximum number of key pairs per server for the project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "maxTotalRAMSize": {
          "description": "The maximum total amount of RAM, in MB, for all servers at any one\ntime for the project.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "rate": {
          "description": "Current rate limits.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "totalCoresUsed": {
          "description": "Total cores used.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "totalFloatingIpsUsed": {
          "description": "Total floating IP addresses used.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "totalInstancesUsed": {
          "description": "Total instances used.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "totalRAMUsed": {
          "description": "Total RAM, in MB, used for all servers at any one time.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "totalSecurityGroupsUsed": {
          "description": "Total security groups used.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "getMigrations_200": {
      "properties": {
        "created_at": {
          "description": "The date and time when the server, image, or backup was created.\n\nThe date and time stamp format is ISO 8601 :\n\nCCYY-MM-DDThh:mm:ss\u00b1hh:mmFor example, ``2015-08-27T09:49:58-05:00`` .\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nIf the updated-at date and time stamp is not set, its value is\n``null`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "dest_compute": {
          "description": "The destination compute node.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "dest_host": {
          "description": "The destination host.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The migration ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "instance_uuid": {
          "description": "The ID of the instance being migrated.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "new_instance_type_id": {
          "description": "The ID of the new instance type.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "old_instance_type_id": {
          "description": "The ID of the old instance type.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "source_compute": {
          "description": "The source compute node.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "source_node": {
          "description": "The source node.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "status": {
          "description": "The migration status.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "updated_at": {
          "description": "The date and time when the server or image was updated.\n\nThe date and time stamp format is ISO 8601 :\n\nCCYY-MM-DDThh:mm:ss\u00b1hh:mmFor example, ``2015-08-27T09:49:58-05:00`` .\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nIf the updated-at date and time stamp is not set, its value is\n``null`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "getReport": {
      "properties": {
        "file": {
          "description": "The file name for the report.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "html": {
          "description": "Set to true to generate the report in HTML format.", 
          "format": "", 
          "required": false, 
          "type": "boolean"
        }, 
        "xml": {
          "description": "Set to true to generate the report in XML format.", 
          "format": "", 
          "required": false, 
          "type": "boolean"
        }
      }, 
      "type": "object"
    }, 
    "getReport_200": {
      "properties": {
        "path": {
          "description": "The path to the report file.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "getServer_200": {
      "properties": {
        "OS-DCF:diskConfig": {
          "description": "Valid value is AUTO or MANUAL.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "getServer_202": {
      "properties": {
        "availability_zone": {
          "description": "The availability zone in which to launch the server.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "block_device_mapping_v2": {
          "description": "Enables booting the server from a volume when additional parameters\nare given. If specified, the volume status must be ``available`` ,\nand the volume ``attach_status`` in the OpenStack Block Storage\ndatabase must be ``detached`` .", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "boot_index": {
          "description": "The boot order of the device. Use ``-1`` for the boot volume. Use\n``0`` for an attached volume.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "config_drive": {
          "description": "Enables metadata injection in a server through a configuration\ndrive.\n\nSpecify ``true`` to enable a configuration drive. Otherwise,\nspecify ``false`` .", 
          "format": "", 
          "required": false, 
          "type": "boolean"
        }, 
        "delete_on_termination": {
          "description": "To delete the boot volume when the server stops, specify ``true`` .\nOtherwise, specify ``false`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "destination_type": {
          "description": "Defines where the volume comes from. A valid value is ``local`` or\n``volume`` .", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "device_name": {
          "description": "Describes a path to the device for the volume you want to use to\nboot the server.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "fixed_ip": {
          "description": "A fixed IPv4 address for the NIC. Valid with a ``neutron`` or\n``nova-networks`` network.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "flavorRef": {
          "description": "The flavor reference for the desired flavor for your server\ninstance.\n\nSpecify as an ID or full URL.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "guest_format": {
          "description": "Specifies the guest server disk file system format, such as\n``ephemeral`` or ``swap`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "imageRef": {
          "description": "The image reference for the desired image for your server instance.\n\nSpecify as an ID or full URL.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "key_name": {
          "description": "Key pair name.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "metadata": {
          "description": "Metadata key and value pairs. The maximum size of the metadata key\nand value is 255 bytes each.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "name": {
          "description": "The server name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "networks": {
          "description": "A ``networks`` object. By default, the server instance is\nprovisioned with all isolated networks for the tenant.\n\nOptionally, you can create one or more NICs on the server.\n\nTo provision the server instance with a NIC for a network, specify\nthe UUID of the network in the ``uuid`` attribute in a ``networks``\nobject.\n\nTo provision the server instance with a NIC for an already existing\nport, specify the port-id in the ``port`` attribute in a\n``networks`` object.\n\nYou can specify multiple NICs on the server.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "personality": {
          "description": "File path and contents (text only) to inject into the server at\nlaunch. The maximum size of the file path data is 255 bytes. The\nmaximum limit refers to the number of bytes in the decoded data and\nnot the number of characters in the encoded data.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "port": {
          "description": "To provision the server instance with a NIC for an already existing\nport, specify the port-id in the ``port`` attribute in a\n``networks`` object. The port status must be ``DOWN`` . Required if\nyou omit the ``uuid`` attribute.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "security_groups": {
          "description": "One or more security groups. Specify the name of the security group\nin the ``name`` attribute. If you omit this attribute, the server\nis created in the ``default`` security group.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "server": {
          "description": "server.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "source_type": {
          "description": "The source type for the volume. A valid value is ``blank`` ,\n``snapshot`` , ``volume`` , or ``image`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "user_data": {
          "description": "Configuration information or scripts to use upon launch. Must be\nBase64 encoded.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "uuid": {
          "description": "To provision the server instance with a NIC for a network, specify\nthe UUID of the network in the ``uuid`` attribute in a ``networks``\nobject. Required if you omit the ``port`` attribute.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "getServersDetailed_200": {
      "properties": {
        "OS-DCF:diskConfig": {
          "description": "Valid value is AUTO or MANUAL.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "getServersDetailed_202": {
      "properties": {
        "availability_zone": {
          "description": "The availability zone in which to launch the server.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "block_device_mapping_v2": {
          "description": "Enables booting the server from a volume when additional parameters\nare given. If specified, the volume status must be ``available`` ,\nand the volume ``attach_status`` in the OpenStack Block Storage\ndatabase must be ``detached`` .", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "boot_index": {
          "description": "The boot order of the device. Use ``-1`` for the boot volume. Use\n``0`` for an attached volume.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "config_drive": {
          "description": "Enables metadata injection in a server through a configuration\ndrive.\n\nSpecify ``true`` to enable a configuration drive. Otherwise,\nspecify ``false`` .", 
          "format": "", 
          "required": false, 
          "type": "boolean"
        }, 
        "delete_on_termination": {
          "description": "To delete the boot volume when the server stops, specify ``true`` .\nOtherwise, specify ``false`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "destination_type": {
          "description": "Defines where the volume comes from. A valid value is ``local`` or\n``volume`` .", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "device_name": {
          "description": "Describes a path to the device for the volume you want to use to\nboot the server.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "fixed_ip": {
          "description": "A fixed IPv4 address for the NIC. Valid with a ``neutron`` or\n``nova-networks`` network.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "flavorRef": {
          "description": "The flavor reference for the desired flavor for your server\ninstance.\n\nSpecify as an ID or full URL.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "guest_format": {
          "description": "Specifies the guest server disk file system format, such as\n``ephemeral`` or ``swap`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "imageRef": {
          "description": "The image reference for the desired image for your server instance.\n\nSpecify as an ID or full URL.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "key_name": {
          "description": "Key pair name.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "metadata": {
          "description": "Metadata key and value pairs. The maximum size of the metadata key\nand value is 255 bytes each.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "name": {
          "description": "The server name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "networks": {
          "description": "A ``networks`` object. By default, the server instance is\nprovisioned with all isolated networks for the tenant.\n\nOptionally, you can create one or more NICs on the server.\n\nTo provision the server instance with a NIC for a network, specify\nthe UUID of the network in the ``uuid`` attribute in a ``networks``\nobject.\n\nTo provision the server instance with a NIC for an already existing\nport, specify the port-id in the ``port`` attribute in a\n``networks`` object.\n\nYou can specify multiple NICs on the server.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "personality": {
          "description": "File path and contents (text only) to inject into the server at\nlaunch. The maximum size of the file path data is 255 bytes. The\nmaximum limit refers to the number of bytes in the decoded data and\nnot the number of characters in the encoded data.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "port": {
          "description": "To provision the server instance with a NIC for an already existing\nport, specify the port-id in the ``port`` attribute in a\n``networks`` object. The port status must be ``DOWN`` . Required if\nyou omit the ``uuid`` attribute.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "security_groups": {
          "description": "One or more security groups. Specify the name of the security group\nin the ``name`` attribute. If you omit this attribute, the server\nis created in the ``default`` security group.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "server": {
          "description": "server.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "source_type": {
          "description": "The source type for the volume. A valid value is ``blank`` ,\n``snapshot`` , ``volume`` , or ``image`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "user_data": {
          "description": "Configuration information or scripts to use upon launch. Must be\nBase64 encoded.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "uuid": {
          "description": "To provision the server instance with a NIC for a network, specify\nthe UUID of the network in the ``uuid`` attribute in a ``networks``\nobject. Required if you omit the ``port`` attribute.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "injectNetworkInfo": {
      "properties": {
        "injectNetworkInfo": {
          "description": "Specify the ``injectNetworkInfo`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "listAccess_200": {
      "properties": {
        "flavor_id": {
          "description": "The flavor ID.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "tenant_id": {
          "description": "The tenant ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "listAttachedInterfaces_200": {
      "properties": {
        "fixed_ips": {
          "description": "Fixed IP addresses with subnet IDs.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "mac_addr": {
          "description": "The MAC address.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "net_id": {
          "description": "The network ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "port_id": {
          "description": "The port ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "port_state": {
          "description": "The port state.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "listHypervisors_200": {
      "properties": {
        "hypervisor_hostname": {
          "description": "Hypervisor host name, retrieved from the per-server listing.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "Hypervisor ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "listSecGroupDefaultRules_200": {
      "properties": {
        "cidr": {
          "description": "The CIDR for address range.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "from_port": {
          "description": "Port at start of range.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "id": {
          "description": "Security group ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "ip_protocol": {
          "description": "The IP protocol: ICMP, TCP, or UDP.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "ip_range": {
          "description": "An IP range object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "to_port": {
          "description": "Port at end of range.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "listSecGroupsByServer_200": {
      "properties": {
        "description": {
          "description": "Security group description.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The security group ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The security group name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "security_groups": {
          "description": "Security groups object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "tenant_id": {
          "description": "The tenant.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "listSecGroups_200": {
      "properties": {
        "description": {
          "description": "Security group description.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The security group ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The security group name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "security_groups": {
          "description": "Security groups object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "tenant_id": {
          "description": "The tenant.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "listServerGroups_200": {
      "properties": {
        "id": {
          "description": "The ID for the server group.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "members": {
          "description": "A list of members in the server group.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "metadata": {
          "description": "Associated metadata key-and-value pairs.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The name of the server group.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "policies": {
          "description": "A list of policies associated with the server group.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "server_groups": {
          "description": "A ``server_groups`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "listServers_200": {
      "properties": {
        "next": {
          "description": "Moves to the next item in the list.", 
          "format": "uri", 
          "required": false, 
          "type": "string"
        }, 
        "previous": {
          "description": "Moves to the previous item in the list.", 
          "format": "uri", 
          "required": false, 
          "type": "string"
        }, 
        "servers": {
          "description": "List of servers.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "lock": {
      "properties": {
        "lock": {
          "description": "Specify the ``lock`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "migrate": {
      "properties": {
        "migrate": {
          "description": "Specify the ``migrate`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "os-migrateLive": {
      "properties": {
        "block_migration": {
          "description": "If true, block migration is allowed.", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "disk_over_commit": {
          "description": "If true, disk over commit is allowed.", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "host": {
          "description": "Name of the new host.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "os-migrateLive": {
          "description": "Specify the ``os-migrateLive`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "os-resetState": {
      "properties": {
        "resetState": {
          "description": "Specify the ``resetState`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "state": {
          "description": "The desired state of a server.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "pause": {
      "properties": {
        "pause": {
          "description": "Specify the ``pause`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "removeTenantAccess": {
      "properties": {
        "removeTenantAccess": {
          "description": "Specify the ``removeTenantAccess`` action.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "tenant": {
          "description": "The UUID of the tenant to which to give access.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "removeTenantAccess_200": {
      "properties": {
        "flavor_id": {
          "description": "The flavor ID.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "tenant_id": {
          "description": "The tenant ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "remove_host": {
      "properties": {
        "host": {
          "description": "Host ID to add to an aggregate.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "rescue": {
      "properties": {
        "adminPass": {
          "description": "Use this password for the rescued instance. Generate a new password\nif none is provided.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "rescue": {
          "description": "Specify the ``rescue`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "rescue_image_ref": {
          "description": "The image reference to use to rescue your server instance. Specify\nthe image reference by ID or full URL.\n\nIf you omit an image reference, default is the base image\nreference.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "rescue_200": {
      "properties": {
        "adminPass": {
          "description": "The password that enables the administrator to access the rescued\ninstance.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "resetNetwork": {
      "properties": {
        "resetNetwork": {
          "description": "Specify the ``resetNetwork`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "restore": {
      "properties": {
        "restore": {
          "description": "Specify the ``restore`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "resume": {
      "properties": {
        "resume": {
          "description": "Specify the ``resume`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "set_metadata": {
      "properties": {
        "metadata": {
          "description": "Metadata value to be set.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "shelve": {
      "properties": {
        "shelve": {
          "description": "Specify the ``shelve`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "shelveOffload": {
      "properties": {
        "shelveOffload": {
          "description": "Specify the ``shelveOffload`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "showAccess_200": {
      "properties": {
        "disk": {
          "description": "Integer value for the minimum disk space in GB.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "id": {
          "description": "The flavor ID.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "links": {
          "description": "Flavor links.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The flavor name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "os-flavor-access:is_public": {
          "description": "Set to true if access is public. Set to false if access is private.", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "ram": {
          "description": "Amount of RAM.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "vcpus": {
          "description": "Number of VCPUs.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "showQuotaDetailUser_200": {
      "properties": {
        "cores": {
          "description": "A cores object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "fixed_ips": {
          "description": "A fixed_ips object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "floating_ips": {
          "description": "A floating_ips object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The ID for the quota set.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "in_use": {
          "description": "The number of items in use.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "injected_file_content_bytes": {
          "description": "An injected_file_content_bytes object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "injected_file_path_bytes": {
          "description": "An injected_file_path_bytes object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "injected_files": {
          "description": "An injected_files object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "instances": {
          "description": "An instances object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "key_pairs": {
          "description": "A key_pairs object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "limit": {
          "description": "The number of items permitted for this tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "A metadata_items object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "quota_set": {
          "description": "A quota_set object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "ram": {
          "description": "A ram object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "reserved": {
          "description": "The number of reserved items.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "A security_group_rules object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "security_groups": {
          "description": "A security_groups object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "showQuotaUser_200": {
      "properties": {
        "cores": {
          "description": "The number of instance cores allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of fixed IP addresses allowed for each tenant. Must be\nequal to or greater than the number of allowed instances.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of floating IP addresses allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID for the quota set.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of bytes of content allowed for each injected file.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of bytes allowed for each injected file path.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of injected files allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of instances allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of key pairs allowed for each user.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of metadata items allowed for each instance.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A quota_set object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "ram": {
          "description": "The amount of instance RAM in megabytes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of rules allowed for each security group.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of security groups allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "server_group_members": {
          "description": "The number of members allowed for each server group.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "server_groups": {
          "description": "The number of server groups allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "showQuota_200": {
      "properties": {
        "cores": {
          "description": "The number of instance cores allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of fixed IP addresses allowed for each tenant. Must be\nequal to or greater than the number of allowed instances.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of floating IP addresses allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID for the quota set.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of bytes of content allowed for each injected file.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of bytes allowed for each injected file path.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of injected files allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of instances allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of key pairs allowed for each user.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of metadata items allowed for each instance.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A quota_set object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "ram": {
          "description": "The amount of instance RAM in megabytes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of rules allowed for each security group.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of security groups allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "server_group_members": {
          "description": "The number of members allowed for each server group.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "server_groups": {
          "description": "The number of server groups allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "showSecGroupDefaultRule_200": {
      "properties": {
        "cidr": {
          "description": "The CIDR for address range.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "from_port": {
          "description": "Port at start of range.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "id": {
          "description": "Security group ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "ip_protocol": {
          "description": "The IP protocol: ICMP, TCP, or UDP.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "ip_range": {
          "description": "An IP range object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "to_port": {
          "description": "Port at end of range.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "showSecGroup_200": {
      "properties": {
        "description": {
          "description": "Security group description.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The security group ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The security group name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "security_group": {
          "description": "A ``security_group`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "tenant_id": {
          "description": "The tenant.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "showServerGroup_200": {
      "properties": {
        "id": {
          "description": "The ID for the server group.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "members": {
          "description": "A list of members in the server group.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "metadata": {
          "description": "Associated metadata key-and-value pairs.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The name of the server group.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "policies": {
          "description": "A list of policies associated with the server group.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "server_group": {
          "description": "A ``server_group`` places VMs in a grouping based on common\ncharacteristics, so that you can apply policies to groups or\ncategorize servers for scheduling purposes.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "start": {
      "properties": {
        "os-start": {
          "description": "Specify the ``os-start`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "startCombinedReport": {
      "properties": {
        "combine": {
          "description": "Set to true to generate a combined report for all services.", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "start": {
          "description": "Specify ``start`` in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "startReport": {
      "properties": {
        "start": {
          "description": "Specify ``start`` in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "stop": {
      "properties": {
        "os-stop": {
          "description": "Specify the ``os-stop`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "stopReport": {
      "properties": {
        "stop": {
          "description": "Specify ``stop`` in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "suspend": {
      "properties": {
        "suspend": {
          "description": "Specify the ``suspend`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "unlock": {
      "properties": {
        "unlock": {
          "description": "Specify the ``unlock`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "unpause": {
      "properties": {
        "unpause": {
          "description": "Specify the ``unpause`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "unrescue": {
      "properties": {
        "unrescue": {
          "description": "Specify the ``unrescue`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "unshelve": {
      "properties": {
        "unshelve": {
          "description": "Specify the ``unshelve`` action in the request body.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "updateHost": {
      "properties": {
        "maintenance_mode": {
          "description": "Valid values are enable or disable.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "status": {
          "description": "Valid values are enable or disable.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "updateQuota": {
      "properties": {
        "cores": {
          "description": "The number of instance cores allowed for each tenant.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of fixed IP addresses allowed for each tenant. Must be\nequal to or greater than the number of allowed instances.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of floating IP addresses allowed for each tenant.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID for the quota set.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of bytes of content allowed for each injected file.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of bytes allowed for each injected file path.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of injected files allowed for each tenant.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of instances allowed for each tenant.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of key pairs allowed for each user.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of metadata items allowed for each instance.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A quota_set object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "ram": {
          "description": "The amount of instance RAM in megabytes allowed for each tenant.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of rules allowed for each security group.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of security groups allowed for each tenant.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "server_group_members": {
          "description": "The number of members allowed for each server group.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "server_groups": {
          "description": "The number of server groups allowed for each tenant.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "updateQuotaUser": {
      "properties": {
        "cores": {
          "description": "The number of instance cores allowed for each tenant.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of fixed IP addresses allowed for each tenant. Must be\nequal to or greater than the number of allowed instances.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of floating IP addresses allowed for each tenant.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID for the quota set.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of bytes of content allowed for each injected file.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of bytes allowed for each injected file path.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of injected files allowed for each tenant.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of instances allowed for each tenant.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of key pairs allowed for each user.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of metadata items allowed for each instance.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A quota_set object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "ram": {
          "description": "The amount of instance RAM in megabytes allowed for each tenant.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of rules allowed for each security group.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of security groups allowed for each tenant.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "server_group_members": {
          "description": "The number of members allowed for each server group.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "server_groups": {
          "description": "The number of server groups allowed for each tenant.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "updateQuotaUser_200": {
      "properties": {
        "cores": {
          "description": "The number of instance cores allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of fixed IP addresses allowed for each tenant. Must be\nequal to or greater than the number of allowed instances.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of floating IP addresses allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID for the quota set.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of bytes of content allowed for each injected file.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of bytes allowed for each injected file path.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of injected files allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of instances allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of key pairs allowed for each user.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of metadata items allowed for each instance.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A quota_set object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "ram": {
          "description": "The amount of instance RAM in megabytes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of rules allowed for each security group.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of security groups allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "server_group_members": {
          "description": "The number of members allowed for each server group.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "server_groups": {
          "description": "The number of server groups allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "updateQuota_200": {
      "properties": {
        "cores": {
          "description": "The number of instance cores allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "fixed_ips": {
          "description": "The number of fixed IP addresses allowed for each tenant. Must be\nequal to or greater than the number of allowed instances.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "floating_ips": {
          "description": "The number of floating IP addresses allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "id": {
          "description": "The ID for the quota set.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "injected_file_content_bytes": {
          "description": "The number of bytes of content allowed for each injected file.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "injected_file_path_bytes": {
          "description": "The number of bytes allowed for each injected file path.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "injected_files": {
          "description": "The number of injected files allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "instances": {
          "description": "The number of instances allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "key_pairs": {
          "description": "The number of key pairs allowed for each user.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "metadata_items": {
          "description": "The number of metadata items allowed for each instance.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A quota_set object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "ram": {
          "description": "The amount of instance RAM in megabytes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "security_group_rules": {
          "description": "The number of rules allowed for each security group.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "security_groups": {
          "description": "The number of security groups allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "server_group_members": {
          "description": "The number of members allowed for each server group.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "server_groups": {
          "description": "The number of server groups allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "updateSecGroup": {
      "properties": {
        "description": {
          "description": "Security group description.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "name": {
          "description": "The security group name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "updateSecGroup_200": {
      "properties": {
        "description": {
          "description": "Security group description.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The security group ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The security group name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "security_group": {
          "description": "A ``security_group`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "tenant_id": {
          "description": "The tenant.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "update_aggregate": {
      "properties": {
        "availability_zone": {
          "description": "Availability zone of aggregate.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "Name of aggregate.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }
  }, 
  "externalDocs": {}, 
  "host": {}, 
  "info": {
    "license": {
      "name": "Apache 2.0", 
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }, 
    "service": "compute-extensions", 
    "title": "Compute API", 
    "version": "v2"
  }, 
  "paths": {
    "/v2/os-quota-class-sets/{class_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows the quota for a specified class.", 
        "examples": {}, 
        "id": "showquota", 
        "method": "get", 
        "parameters": [], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "quota_class_set": {
                  "cores": 20, 
                  "fixed_ips": -1, 
                  "floating_ips": 10, 
                  "id": "test_class", 
                  "injected_file_content_bytes": 10240, 
                  "injected_file_path_bytes": 255, 
                  "injected_files": 5, 
                  "instances": 10, 
                  "key_pairs": 100, 
                  "metadata_items": 128, 
                  "ram": 51200, 
                  "security_group_rules": 20, 
                  "security_groups": 10, 
                  "server_group_members": 10, 
                  "server_groups": 10
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show quota", 
        "tags": [
          "quota-class-sets"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Updates quota for a specified class.", 
        "examples": {
          "application/json": {
            "quota_class_set": {
              "cores": 50, 
              "floating_ips": 10, 
              "injected_file_content_bytes": 10240, 
              "injected_file_path_bytes": 255, 
              "injected_files": 5, 
              "instances": 50, 
              "key_pairs": 100, 
              "metadata_items": 128, 
              "ram": 51200, 
              "security_group_rules": 20, 
              "security_groups": 10, 
              "server_group_members": 10, 
              "server_groups": 10
            }
          }
        }, 
        "id": "updatequota", 
        "method": "put", 
        "parameters": [], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "quota_class_set": {
                  "cores": 50, 
                  "fixed_ips": -1, 
                  "floating_ips": 10, 
                  "injected_file_content_bytes": 10240, 
                  "injected_file_path_bytes": 255, 
                  "injected_files": 5, 
                  "instances": 50, 
                  "key_pairs": 100, 
                  "metadata_items": 128, 
                  "ram": 51200, 
                  "security_group_rules": 20, 
                  "security_groups": 10, 
                  "server_group_members": 10, 
                  "server_groups": 10
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Update quota", 
        "tags": [
          "quota-class-sets"
        ]
      }
    ], 
    "/v2/{tenant_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a network with extended attributes.", 
        "examples": {
          "application/json": {
            "network": {
              "allowed_end": "10.20.105.200", 
              "allowed_start": "10.20.105.10", 
              "cidr": "10.20.105.0/24", 
              "dhcp_server": "10.20.105.2", 
              "enable_dhcp": false, 
              "label": "new net 111", 
              "mtu": 9000, 
              "share_address": true
            }
          }
        }, 
        "id": "CreateNetwork", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/CreateNetwork"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The date and time when the image or server was created.\n\nThe date and time stamp format is ISO 8601 :\n\nCCYY-MM-DDThh:mm:ss\u00b1hh:mmThe ``\u00b1hh:mm`` value, if included, returns the time zone as an\noffset from UTC.\n\nFor example, ``2015-08-27T09:49:58-05:00`` .\n\nIf you omit the created-at date and time stamp, its value is\n``null`` .", 
            "format": "", 
            "in": "query", 
            "name": "created_at", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "network": {
                  "bridge": null, 
                  "bridge_interface": null, 
                  "broadcast": "10.20.105.255", 
                  "cidr": "10.20.105.0/24", 
                  "cidr_v6": null, 
                  "created_at": null, 
                  "deleted": null, 
                  "deleted_at": null, 
                  "dhcp_server": "10.20.105.2", 
                  "dhcp_start": "10.20.105.2", 
                  "dns1": null, 
                  "dns2": null, 
                  "enable_dhcp": false, 
                  "gateway": "10.20.105.1", 
                  "gateway_v6": null, 
                  "host": null, 
                  "id": "d7a17c0c-457e-4ab4-a99c-4fa1762f5359", 
                  "injected": null, 
                  "label": "new net 111", 
                  "mtu": 9000, 
                  "multi_host": null, 
                  "netmask": "255.255.255.0", 
                  "netmask_v6": null, 
                  "priority": null, 
                  "project_id": null, 
                  "rxtx_base": null, 
                  "share_address": true, 
                  "updated_at": null, 
                  "vlan": null, 
                  "vpn_private_address": null, 
                  "vpn_public_address": null, 
                  "vpn_public_port": null
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create network", 
        "tags": [
          "extended-networks"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a network.", 
        "examples": {
          "application/json": {
            "network": {
              "cidr": "10.20.105.0/24", 
              "label": "new net 111"
            }
          }
        }, 
        "id": "CreateNetwork", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/CreateNetwork"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The date and time when the image or server was created.\n\nThe date and time stamp format is ISO 8601 :\n\nCCYY-MM-DDThh:mm:ss\u00b1hh:mmThe ``\u00b1hh:mm`` value, if included, returns the time zone as an\noffset from UTC.\n\nFor example, ``2015-08-27T09:49:58-05:00`` .\n\nIf you omit the created-at date and time stamp, its value is\n``null`` .", 
            "format": "", 
            "in": "query", 
            "name": "created_at", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "network": {
                  "bridge": null, 
                  "bridge_interface": null, 
                  "broadcast": "10.20.105.255", 
                  "cidr": "10.20.105.0/24", 
                  "cidr_v6": null, 
                  "created_at": null, 
                  "deleted": null, 
                  "deleted_at": null, 
                  "dhcp_start": "10.20.105.2", 
                  "dns1": null, 
                  "dns2": null, 
                  "gateway": "10.20.105.1", 
                  "gateway_v6": null, 
                  "host": null, 
                  "id": "668687f9-d724-4976-a6f4-a6fd3ad83da3", 
                  "injected": null, 
                  "label": "new net 111", 
                  "multi_host": null, 
                  "netmask": "255.255.255.0", 
                  "netmask_v6": null, 
                  "priority": null, 
                  "project_id": null, 
                  "rxtx_base": null, 
                  "updated_at": null, 
                  "vlan": null, 
                  "vpn_private_address": null, 
                  "vpn_public_address": null, 
                  "vpn_public_port": null
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create network", 
        "tags": [
          "networks"
        ]
      }
    ], 
    "/v2/{tenant_id}/flavors": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a flavor. Includes the rxtx_factor, OS-FLV-EXT-\nDATA:ephemeral, and swap extended attributes.", 
        "examples": {
          "application/json": {
            "flavor": {
              "OS-FLV-EXT-DATA:ephemeral": 30, 
              "disk": 10, 
              "id": "666", 
              "name": "flavortest", 
              "ram": 1024, 
              "rxtx_factor": 2.0, 
              "swap": 5, 
              "vcpus": 2
            }
          }
        }, 
        "id": "createFlavor", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createFlavor"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "flavor": {
                  "OS-FLV-EXT-DATA:ephemeral": 30, 
                  "disk": 10, 
                  "id": "666", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/flavors/666", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/flavors/666", 
                      "rel": "bookmark"
                    }
                  ], 
                  "name": "flavortest", 
                  "ram": 1024, 
                  "vcpus": 2
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create flavor with extra data", 
        "tags": [
          "flavorextradata"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a flavor. Includes the rxtx_factor extended attribute.", 
        "examples": {
          "application/json": {
            "flavor": {
              "disk": 10, 
              "id": "100", 
              "name": "flavortest", 
              "ram": 1024, 
              "rxtx_factor": 2.0, 
              "vcpus": 2
            }
          }
        }, 
        "id": "createFlavor", 
        "method": "post", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "flavor": {
                  "disk": 10, 
                  "id": "100", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/flavors/100", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/flavors/100", 
                      "rel": "bookmark"
                    }
                  ], 
                  "name": "flavortest", 
                  "ram": 1024, 
                  "rxtx_factor": 2.0, 
                  "vcpus": 2
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create flavor with rxtx_factor", 
        "tags": [
          "flavor-rxtx"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists flavors and includes the access type, which is public or\nprivate.", 
        "examples": {}, 
        "id": "detailAccess", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID of the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "flavors": [
                  {
                    "disk": 1, 
                    "id": "1", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/1", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/1", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.tiny", 
                    "os-flavor-access:is_public": true, 
                    "ram": 512, 
                    "vcpus": 1
                  }, 
                  {
                    "disk": 20, 
                    "id": "2", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/2", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/2", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.small", 
                    "os-flavor-access:is_public": true, 
                    "ram": 2048, 
                    "vcpus": 1
                  }, 
                  {
                    "disk": 40, 
                    "id": "3", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/3", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/3", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.medium", 
                    "os-flavor-access:is_public": true, 
                    "ram": 4096, 
                    "vcpus": 2
                  }, 
                  {
                    "disk": 80, 
                    "id": "4", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/4", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/4", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.large", 
                    "os-flavor-access:is_public": true, 
                    "ram": 8192, 
                    "vcpus": 4
                  }, 
                  {
                    "disk": 160, 
                    "id": "5", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/5", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/5", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.xlarge", 
                    "os-flavor-access:is_public": true, 
                    "ram": 16384, 
                    "vcpus": 8
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List flavors with access type", 
        "tags": [
          "flavor-access"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a private flavor.", 
        "examples": {
          "application/json": {
            "flavor": {
              "disk": 10, 
              "id": "10", 
              "name": "test_flavor", 
              "os-flavor-access:is_public": false, 
              "ram": 1024, 
              "vcpus": 2
            }
          }
        }, 
        "id": "createAccess", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createAccess"
            }
          }, 
          {
            "description": "The ID of the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "flavor": {
                  "disk": 10, 
                  "id": "10", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/flavors/10", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/flavors/10", 
                      "rel": "bookmark"
                    }
                  ], 
                  "name": "test_flavor", 
                  "os-flavor-access:is_public": false, 
                  "ram": 1024, 
                  "vcpus": 2
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create private flavor", 
        "tags": [
          "flavor-access"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a flavor.", 
        "examples": {
          "application/json": {
            "flavor": {
              "disk": 10, 
              "id": "10", 
              "name": "test_flavor", 
              "ram": 1024, 
              "vcpus": 2
            }
          }
        }, 
        "id": "createFlavor", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createFlavor"
            }
          }, 
          {
            "description": "The unique ID of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "flavor": {
                  "disk": 10, 
                  "id": "10", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/flavors/10", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/flavors/10", 
                      "rel": "bookmark"
                    }
                  ], 
                  "name": "test_flavor", 
                  "ram": 1024, 
                  "vcpus": 2
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create flavor", 
        "tags": [
          "flavormanage"
        ]
      }
    ], 
    "/v2/{tenant_id}/flavors/detail": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists available flavors. Includes the rxtx_factor, OS-FLV-EXT-\nDATA:ephemeral, and swap extended attributes.", 
        "examples": {}, 
        "id": "getFlavorsDetails", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "flavors": [
                  {
                    "OS-FLV-EXT-DATA:ephemeral": 0, 
                    "disk": 1, 
                    "id": "1", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/1", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/1", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.tiny", 
                    "ram": 512, 
                    "vcpus": 1
                  }, 
                  {
                    "OS-FLV-EXT-DATA:ephemeral": 0, 
                    "disk": 20, 
                    "id": "2", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/2", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/2", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.small", 
                    "ram": 2048, 
                    "vcpus": 1
                  }, 
                  {
                    "OS-FLV-EXT-DATA:ephemeral": 0, 
                    "disk": 40, 
                    "id": "3", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/3", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/3", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.medium", 
                    "ram": 4096, 
                    "vcpus": 2
                  }, 
                  {
                    "OS-FLV-EXT-DATA:ephemeral": 0, 
                    "disk": 80, 
                    "id": "4", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/4", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/4", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.large", 
                    "ram": 8192, 
                    "vcpus": 4
                  }, 
                  {
                    "OS-FLV-EXT-DATA:ephemeral": 0, 
                    "disk": 160, 
                    "id": "5", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/5", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/5", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.xlarge", 
                    "ram": 16384, 
                    "vcpus": 8
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List flavors with extra data", 
        "tags": [
          "flavorextradata"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists details for available flavors and includes the rxtx_factor\nextended attribute.", 
        "examples": {}, 
        "id": "getFlavorDetails", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "flavors": [
                  {
                    "disk": 1, 
                    "id": "1", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/1", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/1", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.tiny", 
                    "ram": 512, 
                    "rxtx_factor": 1.0, 
                    "vcpus": 1
                  }, 
                  {
                    "disk": 20, 
                    "id": "2", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/2", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/2", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.small", 
                    "ram": 2048, 
                    "rxtx_factor": 1.0, 
                    "vcpus": 1
                  }, 
                  {
                    "disk": 40, 
                    "id": "3", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/3", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/3", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.medium", 
                    "ram": 4096, 
                    "rxtx_factor": 1.0, 
                    "vcpus": 2
                  }, 
                  {
                    "disk": 80, 
                    "id": "4", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/4", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/4", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.large", 
                    "ram": 8192, 
                    "rxtx_factor": 1.0, 
                    "vcpus": 4
                  }, 
                  {
                    "disk": 160, 
                    "id": "5", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/5", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/5", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.xlarge", 
                    "ram": 16384, 
                    "rxtx_factor": 1.0, 
                    "vcpus": 8
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get flavor Details with rxtx_factor", 
        "tags": [
          "flavor-rxtx"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists available flavors. Includes the OS-FLV-DISABLED:disabled\nattribute.", 
        "examples": {}, 
        "id": "getFlavorsDetails", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "flavors": [
                  {
                    "OS-FLV-DISABLED:disabled": false, 
                    "disk": 1, 
                    "id": "1", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/1", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/1", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.tiny", 
                    "ram": 512, 
                    "vcpus": 1
                  }, 
                  {
                    "OS-FLV-DISABLED:disabled": false, 
                    "disk": 20, 
                    "id": "2", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/2", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/2", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.small", 
                    "ram": 2048, 
                    "vcpus": 1
                  }, 
                  {
                    "OS-FLV-DISABLED:disabled": false, 
                    "disk": 40, 
                    "id": "3", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/3", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/3", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.medium", 
                    "ram": 4096, 
                    "vcpus": 2
                  }, 
                  {
                    "OS-FLV-DISABLED:disabled": false, 
                    "disk": 80, 
                    "id": "4", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/4", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/4", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.large", 
                    "ram": 8192, 
                    "vcpus": 4
                  }, 
                  {
                    "OS-FLV-DISABLED:disabled": false, 
                    "disk": 160, 
                    "id": "5", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/5", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/5", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.xlarge", 
                    "ram": 16384, 
                    "vcpus": 8
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List flavors with flavor disabled status", 
        "tags": [
          "flv-disabled"
        ]
      }
    ], 
    "/v2/{tenant_id}/flavors/{flavor_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Gets details for a specified flavor. Includes the rxtx_factor, OS-\nFLV-EXT-DATA:ephemeral, and swap extended attributes.", 
        "examples": {}, 
        "id": "getFlavor", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "flavor": {
                  "OS-FLV-EXT-DATA:ephemeral": 0, 
                  "disk": 1, 
                  "id": "1", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/flavors/1", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/flavors/1", 
                      "rel": "bookmark"
                    }
                  ], 
                  "name": "m1.tiny", 
                  "ram": 512, 
                  "vcpus": 1
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get flavor extra data details", 
        "tags": [
          "flavorextradata"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Gets details for a specified flavor. Includes the rxtx_factor\nextended attribute.", 
        "examples": {}, 
        "id": "getFlavor", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The flavor ID.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "flavor": {
                  "disk": 1, 
                  "id": "1", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/flavors/1", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/flavors/1", 
                      "rel": "bookmark"
                    }
                  ], 
                  "name": "m1.tiny", 
                  "ram": 512, 
                  "rxtx_factor": 1.0, 
                  "vcpus": 1
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get flavor with rxtx_factor", 
        "tags": [
          "flavor-rxtx"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Gets details for a specified flavor. Includes the OS-FLV-\nDISABLED:disabled attribute.", 
        "examples": {}, 
        "id": "getFlavor", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "flavor": {
                  "OS-FLV-DISABLED:disabled": false, 
                  "disk": 1, 
                  "id": "1", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/flavors/1", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/flavors/1", 
                      "rel": "bookmark"
                    }
                  ], 
                  "name": "m1.tiny", 
                  "ram": 512, 
                  "vcpus": 1
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get flavor disabled status details", 
        "tags": [
          "flv-disabled"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Gets the flavor access type, which is public or private.", 
        "examples": {}, 
        "id": "showAccess", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID of the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "flavor": {
                  "disk": 1, 
                  "id": "1", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/flavors/1", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/flavors/1", 
                      "rel": "bookmark"
                    }
                  ], 
                  "name": "m1.tiny", 
                  "os-flavor-access:is_public": true, 
                  "ram": 512, 
                  "vcpus": 1
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show flavor access type", 
        "tags": [
          "flavor-access"
        ]
      }, 
      {
        "consumes": [], 
        "description": "Deletes a flavor.", 
        "examples": {}, 
        "id": "deleteFlavor", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The unique ID of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The flavor ID.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "204": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Delete flavor", 
        "tags": [
          "flavormanage"
        ]
      }
    ], 
    "/v2/{tenant_id}/flavors/{flavor_id}/action": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Gives a specified tenant access to the specified private flavor.", 
        "examples": {
          "application/json": {
            "addTenantAccess": {
              "tenant": "TENANT_ID"
            }
          }
        }, 
        "id": "addTenantAccess", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/addTenantAccess"
            }
          }, 
          {
            "description": "The ID of the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "flavor_access": [
                  {
                    "flavor_id": "10", 
                    "tenant_id": "TENANT_ID"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Add access to private flavor", 
        "tags": [
          "flavor-access"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Revokes access from the specified tenant for the specified private\nflavor.", 
        "examples": {
          "application/json": {
            "removeTenantAccess": {
              "tenant": "TENANT_ID"
            }
          }
        }, 
        "id": "removeTenantAccess", 
        "method": "delete", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/removeTenantAccess"
            }
          }, 
          {
            "description": "The ID of the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "flavor_access": []
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Delete access from private flavor", 
        "tags": [
          "flavor-access"
        ]
      }
    ], 
    "/v2/{tenant_id}/flavors/{flavor_id}/os-extra_specs": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists the extra-specs or keys for the specified flavor.", 
        "examples": {}, 
        "id": "listExtra-specs", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "extra_specs": {
                  "key1": "value1", 
                  "key2": "value2"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List flavor extra specs", 
        "tags": [
          "flavor-extra-specs"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates extra-specs or keys for the specified flavor.", 
        "examples": {
          "application/json": {
            "extra_specs": {
              "key1": "value1", 
              "key2": "value2"
            }
          }
        }, 
        "id": "createExtra-specs", 
        "method": "post", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "extra_specs": {
                  "key1": "value1", 
                  "key2": "value2"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create flavor extra specs", 
        "tags": [
          "flavor-extra-specs"
        ]
      }
    ], 
    "/v2/{tenant_id}/flavors/{flavor_id}/os-extra_specs/{key_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Updates the value of the specified extra-spec or key.", 
        "examples": {
          "application/json": {
            "key1": "new_value1"
          }
        }, 
        "id": "updateDetailExtra-spec", 
        "method": "put", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "key1": "new_value1"
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Update flavor extra specs", 
        "tags": [
          "flavor-extra-specs"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Gets the value of the specified key.", 
        "examples": {}, 
        "id": "detailExtra-spec", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "key1": "value1"
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get flavor extra spec details", 
        "tags": [
          "flavor-extra-specs"
        ]
      }, 
      {
        "consumes": [], 
        "description": "Deletes a specified extra-spec by key.", 
        "examples": {}, 
        "id": "deleteDetailExtra-spec", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "200": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Delete flavor extra specs", 
        "tags": [
          "flavor-extra-specs"
        ]
      }
    ], 
    "/v2/{tenant_id}/flavors/{flavor_id}/os-flavor-access": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists tenants with access to the specified private flavor.", 
        "examples": {}, 
        "id": "listAccess", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID of the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "flavor_access": [
                  {
                    "flavor_id": "10", 
                    "tenant_id": "TENANT_ID"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List tenants with access to private flavor", 
        "tags": [
          "flavor-access"
        ]
      }
    ], 
    "/v2/{tenant_id}/flavors/{flavor_id}/os-flavor-swap": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists the flavor specs including swap value for the specified\nflavor. The swap value is the amount of swap disk space, in GBs, to\nallocate to a server.", 
        "examples": {}, 
        "id": "listFlavor-swap", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "flavors": [
                  {
                    "disk": 1, 
                    "id": "1", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/1", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/1", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.tiny", 
                    "ram": 512, 
                    "swap": "", 
                    "vcpus": 1
                  }, 
                  {
                    "disk": 20, 
                    "id": "2", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/2", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/2", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.small", 
                    "ram": 2048, 
                    "swap": "", 
                    "vcpus": 1
                  }, 
                  {
                    "disk": 40, 
                    "id": "3", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/3", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/3", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.medium", 
                    "ram": 4096, 
                    "swap": "", 
                    "vcpus": 2
                  }, 
                  {
                    "disk": 80, 
                    "id": "4", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/4", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/4", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.large", 
                    "ram": 8192, 
                    "swap": "", 
                    "vcpus": 4
                  }, 
                  {
                    "disk": 160, 
                    "id": "5", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/flavors/5", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/flavors/5", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "m1.xlarge", 
                    "ram": 16384, 
                    "swap": "", 
                    "vcpus": 8
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List flavor extra specs", 
        "tags": [
          "flavor-swap"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates flavor including swap value for the specified flavor. The\nswap value is the amount of swap disk space, in GBs, to allocate to\na server.", 
        "examples": {
          "application/json": {
            "flavor": {
              "disk": 10, 
              "id": "100", 
              "name": "flavortest", 
              "ram": 1024, 
              "swap": 5, 
              "vcpus": 2
            }
          }
        }, 
        "id": "createFlavor-swap", 
        "method": "post", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID of the flavor of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "flavor_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "flavor": {
                  "disk": 10, 
                  "id": "100", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/flavors/100", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/flavors/100", 
                      "rel": "bookmark"
                    }
                  ], 
                  "name": "flavortest", 
                  "ram": 1024, 
                  "swap": 5, 
                  "vcpus": 2
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create flavor extra specs", 
        "tags": [
          "flavor-swap"
        ]
      }
    ], 
    "/v2/{tenant_id}/images/detail": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists images.", 
        "examples": {}, 
        "id": "getImagesDetailed", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "images": [
                  {
                    "OS-DCF:diskConfig": "AUTO", 
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "architecture": "x86_64", 
                      "auto_disk_config": "True", 
                      "kernel_id": "nokernel", 
                      "ramdisk_id": "nokernel"
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage7", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }, 
                  {
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/images/155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/images/155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/openstack/images/155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "architecture": "x86_64", 
                      "kernel_id": "nokernel", 
                      "ramdisk_id": "nokernel"
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage123456", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }, 
                  {
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "a2459075-d96c-40d5-893e-577ff92e721c", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/images/a2459075-d96c-40d5-893e-577ff92e721c", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/images/a2459075-d96c-40d5-893e-577ff92e721c", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/openstack/images/a2459075-d96c-40d5-893e-577ff92e721c", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "kernel_id": "nokernel", 
                      "ramdisk_id": "nokernel"
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage123456", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }, 
                  {
                    "OS-DCF:diskConfig": "MANUAL", 
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "a440c04b-79fa-479c-bed1-0b816eaec379", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/images/a440c04b-79fa-479c-bed1-0b816eaec379", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/images/a440c04b-79fa-479c-bed1-0b816eaec379", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/openstack/images/a440c04b-79fa-479c-bed1-0b816eaec379", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "architecture": "x86_64", 
                      "auto_disk_config": "False", 
                      "kernel_id": "nokernel", 
                      "ramdisk_id": "nokernel"
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage6", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }, 
                  {
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "c905cedb-7281-47e4-8a62-f26bc5fc4c77", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/images/c905cedb-7281-47e4-8a62-f26bc5fc4c77", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/images/c905cedb-7281-47e4-8a62-f26bc5fc4c77", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/openstack/images/c905cedb-7281-47e4-8a62-f26bc5fc4c77", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "kernel_id": "155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                      "ramdisk_id": null
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage123456", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }, 
                  {
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "cedef40a-ed67-4d10-800e-17455edce175", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/images/cedef40a-ed67-4d10-800e-17455edce175", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/images/cedef40a-ed67-4d10-800e-17455edce175", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/openstack/images/cedef40a-ed67-4d10-800e-17455edce175", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "kernel_id": "nokernel", 
                      "ramdisk_id": "nokernel"
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage123456", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }, 
                  {
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "76fa36fc-c930-4bf3-8c8a-ea2a2420deb6", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/images/76fa36fc-c930-4bf3-8c8a-ea2a2420deb6", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/images/76fa36fc-c930-4bf3-8c8a-ea2a2420deb6", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/openstack/images/76fa36fc-c930-4bf3-8c8a-ea2a2420deb6", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "kernel_id": "nokernel", 
                      "ramdisk_id": "nokernel"
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage123456", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List images", 
        "tags": [
          "disk-config"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists details for available images. Includes the image size.", 
        "examples": {}, 
        "id": "listDetailImage", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "images": [
                  {
                    "OS-EXT-IMG-SIZE:size": "74185822", 
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "architecture": "x86_64", 
                      "auto_disk_config": "True", 
                      "kernel_id": "nokernel", 
                      "ramdisk_id": "nokernel"
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage7", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }, 
                  {
                    "OS-EXT-IMG-SIZE:size": "25165824", 
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/images/155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/images/155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/openstack/images/155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "architecture": "x86_64", 
                      "kernel_id": "nokernel", 
                      "ramdisk_id": "nokernel"
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage123456", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }, 
                  {
                    "OS-EXT-IMG-SIZE:size": "58145823", 
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "a2459075-d96c-40d5-893e-577ff92e721c", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/images/a2459075-d96c-40d5-893e-577ff92e721c", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/images/a2459075-d96c-40d5-893e-577ff92e721c", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/openstack/images/a2459075-d96c-40d5-893e-577ff92e721c", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "kernel_id": "nokernel", 
                      "ramdisk_id": "nokernel"
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage123456", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }, 
                  {
                    "OS-EXT-IMG-SIZE:size": "49163826", 
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "a440c04b-79fa-479c-bed1-0b816eaec379", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/images/a440c04b-79fa-479c-bed1-0b816eaec379", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/images/a440c04b-79fa-479c-bed1-0b816eaec379", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/openstack/images/a440c04b-79fa-479c-bed1-0b816eaec379", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "architecture": "x86_64", 
                      "auto_disk_config": "False", 
                      "kernel_id": "nokernel", 
                      "ramdisk_id": "nokernel"
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage6", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }, 
                  {
                    "OS-EXT-IMG-SIZE:size": "26360814", 
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "c905cedb-7281-47e4-8a62-f26bc5fc4c77", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/images/c905cedb-7281-47e4-8a62-f26bc5fc4c77", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/images/c905cedb-7281-47e4-8a62-f26bc5fc4c77", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/openstack/images/c905cedb-7281-47e4-8a62-f26bc5fc4c77", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "kernel_id": "155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                      "ramdisk_id": null
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage123456", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }, 
                  {
                    "OS-EXT-IMG-SIZE:size": "84035174", 
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "cedef40a-ed67-4d10-800e-17455edce175", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/images/cedef40a-ed67-4d10-800e-17455edce175", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/images/cedef40a-ed67-4d10-800e-17455edce175", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/openstack/images/cedef40a-ed67-4d10-800e-17455edce175", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "kernel_id": "nokernel", 
                      "ramdisk_id": "nokernel"
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage123456", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }, 
                  {
                    "OS-EXT-IMG-SIZE:size": "83594576", 
                    "created": "2011-01-01T01:02:03Z", 
                    "id": "76fa36fc-c930-4bf3-8c8a-ea2a2420deb6", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/images/76fa36fc-c930-4bf3-8c8a-ea2a2420deb6", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/images/76fa36fc-c930-4bf3-8c8a-ea2a2420deb6", 
                        "rel": "bookmark"
                      }, 
                      {
                        "href": "http://glance.openstack.example.com/openstack/images/76fa36fc-c930-4bf3-8c8a-ea2a2420deb6", 
                        "rel": "alternate", 
                        "type": "application/vnd.openstack.image"
                      }
                    ], 
                    "metadata": {
                      "kernel_id": "nokernel", 
                      "ramdisk_id": "nokernel"
                    }, 
                    "minDisk": 0, 
                    "minRam": 0, 
                    "name": "fakeimage123456", 
                    "progress": 100, 
                    "status": "ACTIVE", 
                    "updated": "2011-01-01T01:02:03Z"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List details for images", 
        "tags": [
          "ext-img-size"
        ]
      }
    ], 
    "/v2/{tenant_id}/images/{image_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Gets information for a specified image.", 
        "examples": {}, 
        "id": "getImage", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the image of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "image_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "image": {
                  "OS-DCF:diskConfig": "AUTO", 
                  "created": "2011-01-01T01:02:03Z", 
                  "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                      "rel": "bookmark"
                    }, 
                    {
                      "href": "http://glance.openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                      "rel": "alternate", 
                      "type": "application/vnd.openstack.image"
                    }
                  ], 
                  "metadata": {
                    "architecture": "x86_64", 
                    "auto_disk_config": "True", 
                    "kernel_id": "nokernel", 
                    "ramdisk_id": "nokernel"
                  }, 
                  "minDisk": 0, 
                  "minRam": 0, 
                  "name": "fakeimage7", 
                  "progress": 100, 
                  "status": "ACTIVE", 
                  "updated": "2011-01-01T01:02:03Z"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get image information", 
        "tags": [
          "disk-config"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Gets details for a specified image. Includes the image size.", 
        "examples": {}, 
        "id": "getImage", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Image ID stored through the image API. Typically a UUID.", 
            "format": "", 
            "in": "path", 
            "name": "image_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "image": {
                  "OS-EXT-IMG-SIZE:size": "74185822", 
                  "created": "2011-01-01T01:02:03Z", 
                  "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                      "rel": "bookmark"
                    }, 
                    {
                      "href": "http://glance.openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                      "rel": "alternate", 
                      "type": "application/vnd.openstack.image"
                    }
                  ], 
                  "metadata": {
                    "architecture": "x86_64", 
                    "auto_disk_config": "True", 
                    "kernel_id": "nokernel", 
                    "ramdisk_id": "nokernel"
                  }, 
                  "minDisk": 0, 
                  "minRam": 0, 
                  "name": "fakeimage7", 
                  "progress": 100, 
                  "status": "ACTIVE", 
                  "updated": "2011-01-01T01:02:03Z"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get image details", 
        "tags": [
          "ext-img-size"
        ]
      }
    ], 
    "/v2/{tenant_id}/limits": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Gets absolute and rate limit information, including information on\ncurrently used absolute limits.", 
        "examples": {}, 
        "id": "getLimits", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "limits": {
                  "absolute": {
                    "maxImageMeta": 128, 
                    "maxPersonality": 5, 
                    "maxPersonalitySize": 10240, 
                    "maxSecurityGroupRules": 20, 
                    "maxSecurityGroups": 10, 
                    "maxServerMeta": 128, 
                    "maxTotalCores": 20, 
                    "maxTotalFloatingIps": 10, 
                    "maxTotalInstances": 10, 
                    "maxTotalKeypairs": 100, 
                    "maxTotalRAMSize": 51200, 
                    "totalCoresUsed": 0, 
                    "totalFloatingIpsUsed": 0, 
                    "totalInstancesUsed": 0, 
                    "totalRAMUsed": 0, 
                    "totalSecurityGroupsUsed": 0
                  }, 
                  "rate": [
                    {
                      "limit": [
                        {
                          "next-available": "2012-11-27T17:24:52Z", 
                          "remaining": 120, 
                          "unit": "MINUTE", 
                          "value": 120, 
                          "verb": "POST"
                        }, 
                        {
                          "next-available": "2012-11-27T17:24:52Z", 
                          "remaining": 120, 
                          "unit": "MINUTE", 
                          "value": 120, 
                          "verb": "PUT"
                        }, 
                        {
                          "next-available": "2012-11-27T17:24:52Z", 
                          "remaining": 120, 
                          "unit": "MINUTE", 
                          "value": 120, 
                          "verb": "DELETE"
                        }
                      ], 
                      "regex": ".*", 
                      "uri": "*"
                    }, 
                    {
                      "limit": [
                        {
                          "next-available": "2012-11-27T17:24:52Z", 
                          "remaining": 120, 
                          "unit": "MINUTE", 
                          "value": 120, 
                          "verb": "POST"
                        }
                      ], 
                      "regex": "^/servers", 
                      "uri": "*/servers"
                    }, 
                    {
                      "limit": [
                        {
                          "next-available": "2012-11-27T17:24:52Z", 
                          "remaining": 120, 
                          "unit": "MINUTE", 
                          "value": 120, 
                          "verb": "GET"
                        }
                      ], 
                      "regex": ".*changes-since.*", 
                      "uri": "*changes-since*"
                    }, 
                    {
                      "limit": [
                        {
                          "next-available": "2012-11-27T17:24:52Z", 
                          "remaining": 12, 
                          "unit": "MINUTE", 
                          "value": 12, 
                          "verb": "GET"
                        }
                      ], 
                      "regex": "^/os-fping", 
                      "uri": "*/os-fping"
                    }
                  ]
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get limits", 
        "tags": [
          "used-limits"
        ]
      }
    ], 
    "/v2/{tenant_id}/limits{tenant_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Enables administrators to get absolute and rate limit information,\nincluding information about currently used absolute limits, for a\nspecified customer tenant ID.", 
        "examples": {}, 
        "id": "getCustomerLimits", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant for which an administrator wants to get quota\ninformation. Specify the customer tenant ID in the URI as\n``?tenant_id={tenant_id}`` .", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "limits": {
                  "absolute": {
                    "maxImageMeta": 128, 
                    "maxPersonality": 5, 
                    "maxPersonalitySize": 10240, 
                    "maxSecurityGroupRules": 20, 
                    "maxSecurityGroups": 10, 
                    "maxServerMeta": 128, 
                    "maxTotalCores": 20, 
                    "maxTotalFloatingIps": 10, 
                    "maxTotalInstances": 10, 
                    "maxTotalKeypairs": 100, 
                    "maxTotalRAMSize": 51200, 
                    "totalCoresUsed": 0, 
                    "totalFloatingIpsUsed": 0, 
                    "totalInstancesUsed": 0, 
                    "totalRAMUsed": 0, 
                    "totalSecurityGroupsUsed": 0
                  }, 
                  "rate": [
                    {
                      "limit": [
                        {
                          "next-available": "2012-11-27T17:24:52Z", 
                          "remaining": 120, 
                          "unit": "MINUTE", 
                          "value": 120, 
                          "verb": "POST"
                        }, 
                        {
                          "next-available": "2012-11-27T17:24:52Z", 
                          "remaining": 120, 
                          "unit": "MINUTE", 
                          "value": 120, 
                          "verb": "PUT"
                        }, 
                        {
                          "next-available": "2012-11-27T17:24:52Z", 
                          "remaining": 120, 
                          "unit": "MINUTE", 
                          "value": 120, 
                          "verb": "DELETE"
                        }
                      ], 
                      "regex": ".*", 
                      "uri": "*"
                    }, 
                    {
                      "limit": [
                        {
                          "next-available": "2012-11-27T17:24:52Z", 
                          "remaining": 120, 
                          "unit": "MINUTE", 
                          "value": 120, 
                          "verb": "POST"
                        }
                      ], 
                      "regex": "^/servers", 
                      "uri": "*/servers"
                    }, 
                    {
                      "limit": [
                        {
                          "next-available": "2012-11-27T17:24:52Z", 
                          "remaining": 120, 
                          "unit": "MINUTE", 
                          "value": 120, 
                          "verb": "GET"
                        }
                      ], 
                      "regex": ".*changes-since.*", 
                      "uri": "*changes-since*"
                    }, 
                    {
                      "limit": [
                        {
                          "next-available": "2012-11-27T17:24:52Z", 
                          "remaining": 12, 
                          "unit": "MINUTE", 
                          "value": 12, 
                          "verb": "GET"
                        }
                      ], 
                      "regex": "^/os-fping", 
                      "uri": "*/os-fping"
                    }
                  ]
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get customer limits", 
        "tags": [
          "used-limits-for-admins"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-agents": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists all agent builds.", 
        "examples": {}, 
        "id": "listAgents", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique ID of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "agents": [
                  {
                    "agent_id": "1", 
                    "architecture": "x86", 
                    "hypervisor": "hypervisor", 
                    "md5hash": "add6bb58e139be103324d04d82d8f545", 
                    "os": "os", 
                    "url": "http://www.example.com", 
                    "version": "8.0"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List agents", 
        "tags": [
          "agents"
        ]
      }, 
      {
        "consumes": [], 
        "description": "Deletes an existing agent build.", 
        "examples": {}, 
        "id": "deleteAgent", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The unique ID of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Delete agent", 
        "tags": [
          "agents"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates an agent build.", 
        "examples": {
          "application/json": {
            "agent": {
              "architecture": "x86", 
              "hypervisor": "hypervisor", 
              "md5hash": "add6bb58e139be103324d04d82d8f545", 
              "os": "os", 
              "url": "http://www.example.com", 
              "version": "8.0"
            }
          }
        }, 
        "id": "createAgent", 
        "method": "post", 
        "parameters": [
          {
            "description": "The unique ID of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "agent": {
                  "agent_id": "1", 
                  "architecture": "x86", 
                  "hypervisor": "hypervisor", 
                  "md5hash": "add6bb58e139be103324d04d82d8f545", 
                  "os": "os", 
                  "url": "http://www.example.com", 
                  "version": "8.0"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create agent", 
        "tags": [
          "agents"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-agents/{id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Updates an agent build.", 
        "examples": {
          "application/json": {
            "para": {
              "md5hash": "add6bb58e139be103324d04d82d8f545", 
              "url": "http://www.example.com", 
              "version": "7.0"
            }
          }
        }, 
        "id": "updateAgent", 
        "method": "put", 
        "parameters": [
          {
            "description": "The unique ID of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique ID associated with the agent.", 
            "format": "", 
            "in": "path", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "agent": {
                  "agent_id": "1", 
                  "md5hash": "add6bb58e139be103324d04d82d8f545", 
                  "url": "http://www.example.com", 
                  "version": "7.0"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Update agent", 
        "tags": [
          "agents"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-aggregates": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists all aggregates.", 
        "examples": {}, 
        "id": "list_aggregates", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "aggregates": [
                  {
                    "availability_zone": "nova", 
                    "created_at": "2012-11-16T06:22:23.361359", 
                    "deleted": false, 
                    "deleted_at": null, 
                    "hosts": [], 
                    "id": 1, 
                    "metadata": {
                      "availability_zone": "nova"
                    }, 
                    "name": "name", 
                    "updated_at": null
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List aggregates", 
        "tags": [
          "aggregates"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates an aggregate.", 
        "examples": {
          "application/json": {
            "aggregate": {
              "availability_zone": "nova", 
              "name": "name"
            }
          }
        }, 
        "id": "create_aggregate", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/create_aggregate"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "aggregate": {
                  "availability_zone": "nova", 
                  "created_at": "2012-10-01T18:50:27.781065", 
                  "deleted": false, 
                  "deleted_at": null, 
                  "id": 1, 
                  "name": "name", 
                  "updated_at": null
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create aggregate", 
        "tags": [
          "aggregates"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-aggregates/{aggregate_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Gets details about a specified aggregate.", 
        "examples": {}, 
        "id": "get_details", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID associated with an aggregate.", 
            "format": "", 
            "in": "path", 
            "name": "aggregate_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "aggregate": {
                  "availability_zone": "nova", 
                  "created_at": "2012-11-16T06:22:23.032493", 
                  "deleted": false, 
                  "deleted_at": null, 
                  "hosts": [], 
                  "id": 1, 
                  "metadata": {
                    "availability_zone": "nova"
                  }, 
                  "name": "name", 
                  "updated_at": null
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get aggregate details", 
        "tags": [
          "aggregates"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Updates the name, and optionally the availability zone, for a\nspecified aggregate.", 
        "examples": {
          "application/json": {
            "aggregate": {
              "availability_zone": "nova2", 
              "name": "newname"
            }
          }
        }, 
        "id": "update_aggregate", 
        "method": "put", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/update_aggregate"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID associated with an aggregate.", 
            "format": "", 
            "in": "path", 
            "name": "aggregate_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "aggregate": {
                  "availability_zone": "nova2", 
                  "name": "newname"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Update aggregate", 
        "tags": [
          "aggregates"
        ]
      }, 
      {
        "consumes": [], 
        "description": "Deletes an aggregate.", 
        "examples": {}, 
        "id": "delete_aggregate", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID associated with an aggregate.", 
            "format": "", 
            "in": "path", 
            "name": "aggregate_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "204": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Delete aggregate", 
        "tags": [
          "aggregates"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-aggregates/{aggregate_id}/action": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Sets metadata for an aggregate.", 
        "examples": {
          "application/json": {
            "set_metadata": {
              "metadata": {
                "key": "value"
              }
            }
          }
        }, 
        "id": "set_metadata", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/set_metadata"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID associated with an aggregate.", 
            "format": "", 
            "in": "path", 
            "name": "aggregate_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "aggregate": {
                  "availability_zone": "nova", 
                  "created_at": "2012-11-16T06:22:22.342791", 
                  "deleted": false, 
                  "deleted_at": null, 
                  "hosts": [], 
                  "id": 1, 
                  "metadata": {
                    "availability_zone": "nova", 
                    "key": "value"
                  }, 
                  "name": "name", 
                  "updated_at": null
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Set aggregate metadata", 
        "tags": [
          "aggregates"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Adds a host to an aggregate.", 
        "examples": {
          "application/json": {
            "add_host": {
              "host": "581d29b9e3504d8a895caddb13839b15"
            }
          }
        }, 
        "id": "add_host", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/add_host"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID associated with an aggregate.", 
            "format": "", 
            "in": "path", 
            "name": "aggregate_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "aggregate": {
                  "availability_zone": "nova", 
                  "created_at": "2012-12-04T12:04:24.399784", 
                  "deleted": false, 
                  "deleted_at": null, 
                  "hosts": [
                    "0438c6a4e8d841ad823b801d681f4680"
                  ], 
                  "id": 1, 
                  "metadata": {
                    "availability_zone": "nova"
                  }, 
                  "name": "name", 
                  "updated_at": null
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Add host to aggregate", 
        "tags": [
          "aggregates"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Removes a host from an aggregate.", 
        "examples": {
          "application/json": {
            "remove_host": {
              "host": "581d29b9e3504d8a895caddb13839b15"
            }
          }
        }, 
        "id": "remove_host", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/remove_host"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID associated with an aggregate.", 
            "format": "", 
            "in": "path", 
            "name": "aggregate_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "aggregate": {
                  "availability_zone": "nova", 
                  "created_at": "2012-11-16T06:22:22.342791", 
                  "deleted": false, 
                  "deleted_at": null, 
                  "hosts": [], 
                  "id": 1, 
                  "metadata": {
                    "availability_zone": "nova", 
                    "key": "value"
                  }, 
                  "name": "name", 
                  "updated_at": null
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Remove host from aggregate", 
        "tags": [
          "aggregates"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-availability-zone": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists all availability zones.", 
        "examples": {}, 
        "id": "listAvailabilityZones", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "availabilityZoneInfo": [
                  {
                    "hosts": null, 
                    "zoneName": "nova", 
                    "zoneState": {
                      "available": true
                    }
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List availability zones", 
        "tags": [
          "availability-zone"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-availability-zone/detail": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists all availability zones with details.", 
        "examples": {}, 
        "id": "listAvailabilityZonesDetailed", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "availabilityZoneInfo": [
                  {
                    "hosts": {
                      "cells": {
                        "nova-cells": {
                          "active": true, 
                          "available": true, 
                          "updated_at": null
                        }
                      }, 
                      "cert": {
                        "nova-cert": {
                          "active": true, 
                          "available": true, 
                          "updated_at": null
                        }
                      }, 
                      "conductor": {
                        "nova-conductor": {
                          "active": true, 
                          "available": true, 
                          "updated_at": null
                        }
                      }, 
                      "consoleauth": {
                        "nova-consoleauth": {
                          "active": true, 
                          "available": true, 
                          "updated_at": null
                        }
                      }, 
                      "network": {
                        "nova-network": {
                          "active": true, 
                          "available": true, 
                          "updated_at": null
                        }
                      }, 
                      "scheduler": {
                        "nova-scheduler": {
                          "active": true, 
                          "available": true, 
                          "updated_at": null
                        }
                      }
                    }, 
                    "zoneName": "internal", 
                    "zoneState": {
                      "available": true
                    }
                  }, 
                  {
                    "hosts": {
                      "compute": {
                        "nova-compute": {
                          "active": true, 
                          "available": true, 
                          "updated_at": null
                        }
                      }
                    }, 
                    "zoneName": "nova", 
                    "zoneState": {
                      "available": true
                    }
                  }
                ]
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "List availability zones with details", 
        "tags": [
          "availability-zone"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-availability-zone/{availability_zone_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows information for a specified availability zone.", 
        "examples": {}, 
        "id": "showAvailabilityZone", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID associated with an availability zone.", 
            "format": "", 
            "in": "path", 
            "name": "availability_zone_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "availabilityZoneInfo": [
                  {
                    "hosts": null, 
                    "zoneName": "nova", 
                    "zoneState": {
                      "available": true
                    }
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show availability zone information", 
        "tags": [
          "availability-zone"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-certificates": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a root certificate.", 
        "examples": {}, 
        "id": "createCertificate", 
        "method": "post", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "certificate": {
                  "data": "Certificate:\n    Data:\n        Version: 1 (0x0)\n        Serial Number: 23 (0x17)\n        Signature Algorithm: md5WithRSAEncryption\n        Issuer: O=NOVA ROOT, L=Mountain View, ST=California, C=US\n        Validity\n            Not Before: Oct  2 19:31:45 2012 GMT\n            Not After : Oct  2 19:31:45 2013 GMT\n        Subject: C=US, ST=California, O=OpenStack, OU=NovaDev, CN=openstack-fake-2012-10-02T19:31:45Z\n        Subject Public Key Info:\n            Public Key Algorithm: rsaEncryption\n            RSA Public Key: (1024 bit)\n                Modulus (1024 bit):\n                    00:b8:87:67:7a:de:28:ed:f6:5d:1f:20:14:58:df:\n                    b0:f7:62:3d:85:61:a8:c2:31:49:5f:b5:2a:07:34:\n                    0e:25:13:0d:2e:4d:79:c7:26:36:dd:d2:3e:c7:36:\n                    54:80:0d:67:80:32:e6:a8:48:33:69:ec:22:2c:5c:\n                    cb:7a:88:0f:c0:48:de:67:14:54:d9:94:b4:6a:23:\n                    36:28:23:44:47:8a:24:89:8e:f4:86:77:59:f8:62:\n                    b6:ab:d5:e0:bc:b4:ad:d1:95:dd:59:a3:aa:e3:ea:\n                    d3:ae:23:17:c5:54:96:a3:25:56:72:90:20:07:8c:\n                    63:4d:be:e9:60:7e:10:57:17\n                Exponent: 65537 (0x10001)\n    Signature Algorithm: md5WithRSAEncryption\n        32:82:ff:8b:92:0e:8d:9c:6b:ce:7e:fe:34:16:2a:4c:47:4f:\n        c7:28:a2:33:1e:48:56:2e:4b:e8:e8:e3:48:b1:3d:a3:43:21:\n        ef:83:e7:df:e2:10:91:7e:9a:c0:4d:1e:96:68:2b:b9:f7:84:\n        7f:ec:84:8a:bf:bc:5e:50:05:d9:ce:4a:1a:bf:d2:bf:0c:d1:\n        7e:ec:64:c3:a5:37:78:a3:a6:2b:a1:b7:1c:cc:c8:b9:78:61:\n        98:50:3c:e6:28:34:f1:0e:62:bb:b5:d7:a1:dd:1f:38:c6:0d:\n        58:9f:81:67:ff:9c:32:fc:52:7e:6d:8c:91:43:49:fe:e3:48:\n        bb:40\n-----BEGIN CERTIFICATE-----\nMIICMzCCAZwCARcwDQYJKoZIhvcNAQEEBQAwTjESMBAGA1UEChMJTk9WQSBST09U\nMRYwFAYDVQQHEw1Nb3VudGFpbiBWaWV3MRMwEQYDVQQIEwpDYWxpZm9ybmlhMQsw\nCQYDVQQGEwJVUzAeFw0xMjEwMDIxOTMxNDVaFw0xMzEwMDIxOTMxNDVaMHYxCzAJ\nBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRIwEAYDVQQKEwlPcGVuU3Rh\nY2sxEDAOBgNVBAsTB05vdmFEZXYxLDAqBgNVBAMTI29wZW5zdGFjay1mYWtlLTIw\nMTItMTAtMDJUMTk6MzE6NDVaMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQC4\nh2d63ijt9l0fIBRY37D3Yj2FYajCMUlftSoHNA4lEw0uTXnHJjbd0j7HNlSADWeA\nMuaoSDNp7CIsXMt6iA/ASN5nFFTZlLRqIzYoI0RHiiSJjvSGd1n4Yrar1eC8tK3R\nld1Zo6rj6tOuIxfFVJajJVZykCAHjGNNvulgfhBXFwIDAQABMA0GCSqGSIb3DQEB\nBAUAA4GBADKC/4uSDo2ca85+/jQWKkxHT8coojMeSFYuS+jo40ixPaNDIe+D59/i\nEJF+msBNHpZoK7n3hH/shIq/vF5QBdnOShq/0r8M0X7sZMOlN3ijpiuhtxzMyLl4\nYZhQPOYoNPEOYru116HdHzjGDVifgWf/nDL8Un5tjJFDSf7jSLtA\n-----END CERTIFICATE-----\n", 
                  "private_key": "-----BEGIN RSA PRIVATE KEY-----\nMIICXAIBAAKBgQC4h2d63ijt9l0fIBRY37D3Yj2FYajCMUlftSoHNA4lEw0uTXnH\nJjbd0j7HNlSADWeAMuaoSDNp7CIsXMt6iA/ASN5nFFTZlLRqIzYoI0RHiiSJjvSG\nd1n4Yrar1eC8tK3Rld1Zo6rj6tOuIxfFVJajJVZykCAHjGNNvulgfhBXFwIDAQAB\nAoGBAIjfxx4YU/vO1lwUC4OwyS92q3OYcPk6XdakJryZHDTb4NcLmNzjt6bqIK7b\n2enyB2fMWdNRWvGiueZ2HmiRLDyOGsAVdEsHvL4qbr9EZGTqC8Qxx+zTevWWf6pB\nF1zxzbXNQDFZDf9kVsSLCkbMHITnW1k4MrM++9gfCO3WrfehAkEA4nd8TyCCZazq\nKMOQwFLTNaiVLeTXCtvGopl4ZNiKYZ1qI3KDXb2wbAyArFuERlotxFlylXpwtlMo\nSlI/C/sYqwJBANCX1sdfRJq8DpdP44ThWqOkWFLB9rBiwyyBt8746fX8amwr8eyz\nH44/z5GT/Vyp8qFsjkuDzeP93eeDnr2qE0UCP1zipRnPO6x4P5J4o+Y+EmLvwkAQ\nnCLYAaCvUbILHrbq2Z2wWjEYnEO03RHUd2xjkGH4TgcBMTmW4e+ZzEIduwJACnIw\nLVfWBbG5QVac3EC021EVoz9XbUnk4Eu2usS4Yrs7USN6QBJQWD1V1cKFg6h3ICJh\nleKJ4wsJm9h5kKH9yQJBAN8CaX223MlTSuBOVuIOwNA+09iLfx4UCLiH1fGMKDpe\nxVcmkM3qCnTqNxrAPSFdT9IyB3IXiaLWbvzl7MfiOwQ=\n-----END RSA PRIVATE KEY-----\n"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create root certificate", 
        "tags": [
          "certificates"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows details for a root certificate owned by a specified tenant\nID.", 
        "examples": {}, 
        "id": "getRootCertificates", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "certificate": {
                  "data": "-----BEGIN CERTIFICATE-----\nMIICyzCCAjSgAwIBAgIJAIJ/UoFWKoOUMA0GCSqGSIb3DQEBBAUAME4xEjAQBgNV\nBAoTCU5PVkEgUk9PVDEWMBQGA1UEBxMNTW91bnRhaW4gVmlldzETMBEGA1UECBMK\nQ2FsaWZvcm5pYTELMAkGA1UEBhMCVVMwHhcNMTIxMDAyMTg1NzQ1WhcNMTMxMDAy\nMTg1NzQ1WjBOMRIwEAYDVQQKEwlOT1ZBIFJPT1QxFjAUBgNVBAcTDU1vdW50YWlu\nIFZpZXcxEzARBgNVBAgTCkNhbGlmb3JuaWExCzAJBgNVBAYTAlVTMIGfMA0GCSqG\nSIb3DQEBAQUAA4GNADCBiQKBgQCg0Bn8WSqbJF3QNTZUxo1TzmFBxuqvhjZLKbnQ\nIiShdVIWUK7RC8frq8FJI7dgJNmvkIBn9njABWDoZmurQRCzD65yCSbUc4R2ea5H\nIK4wQIui0CJykvMBNjAe3bzztVVs8/ccDTsjtqq3F/KeQkKzQVfSWBrJSmYtG5tO\nG+dOSwIDAQABo4GwMIGtMAwGA1UdEwQFMAMBAf8wHQYDVR0OBBYEFCljRfaNOsA/\n9mHuq0io7Lt83FtaMH4GA1UdIwR3MHWAFCljRfaNOsA/9mHuq0io7Lt83FtaoVKk\nUDBOMRIwEAYDVQQKEwlOT1ZBIFJPT1QxFjAUBgNVBAcTDU1vdW50YWluIFZpZXcx\nEzARBgNVBAgTCkNhbGlmb3JuaWExCzAJBgNVBAYTAlVTggkAgn9SgVYqg5QwDQYJ\nKoZIhvcNAQEEBQADgYEAEbpJOOlpKCh5omwfAwAfFg1ml4h/FJiCH3PETmOCc+3l\nCtWTBd4MG8AoH7A3PU2JKAGVQ5XWo6+ihpW1RgfQpCnloI6vIeGcws+rSLnlzULt\nIvfCJpRg7iQdR3jZGt3295behtP1GsCqipJEulOkOaEIs8iLlXgSOG94Mkwlb4Q=\n-----END CERTIFICATE-----\n", 
                  "private_key": null
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show root certificate details", 
        "tags": [
          "certificates"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-cloudpipe": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists cloudpipes.", 
        "examples": {}, 
        "id": "listCloudpipes", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "cloudpipes": [
                  {
                    "created_at": "2012-11-27T17:18:01Z", 
                    "instance_id": "27deecdb-baa3-4a26-9c82-32994b815b01", 
                    "internal_ip": "192.168.0.3", 
                    "project_id": "cloudpipe-fa1765bd-a352-49c7-a6b7-8ee108a3cb0c", 
                    "public_ip": "127.0.0.1", 
                    "public_port": 22, 
                    "state": "down"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List cloudpipes", 
        "tags": [
          "cloudpipe"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a cloudpipe.", 
        "examples": {
          "application/json": {
            "cloudpipe": {
              "project_id": "cloudpipe-059f21e3-c20e-4efc-9e7a-eba2ab3c6f9a"
            }
          }
        }, 
        "id": "createCloudpipe", 
        "method": "post", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Creates the cloudpipe for the specified project ID. If omitted, the\nproject ID defaults to the calling tenant.", 
            "format": "", 
            "in": "query", 
            "name": "project_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "instance_id": "1e9b8425-34af-488e-b969-4d46f4a6382e"
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create cloudpipe", 
        "tags": [
          "cloudpipe"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-cloudpipe/configure-project": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Updates the virtual private network (VPN) IP address and port for a\nspecified cloudpipe instance.", 
        "examples": {
          "application/json": {
            "configure_project": {
              "vpn_ip": "192.168.1.1", 
              "vpn_port": "2000"
            }
          }
        }, 
        "id": "updateCloudpipe", 
        "method": "post", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The VPN IP address.", 
            "format": "", 
            "in": "header", 
            "name": "vpn_ip", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "The VPN port.", 
            "format": "", 
            "in": "header", 
            "name": "vpn_port", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Update cloudpipe", 
        "tags": [
          "cloudpipe"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-coverage/action": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Generates a coverage report.", 
        "examples": {
          "application/json": {
            "report": {
              "file": "report", 
              "xml": true
            }
          }
        }, 
        "id": "getReport", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/getReport"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "path": "/tmp/tmp6kdYaa/nova-coverage_TOTUbz/report"
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get coverage report", 
        "tags": [
          "coverage"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Starts Nova coverage reporting.", 
        "examples": {
          "application/json": {
            "start": {}
          }
        }, 
        "id": "startReport", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/startReport"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Start coverage report", 
        "tags": [
          "coverage"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Starts coverage reporting for all services.\n\nAll reports are combined into a single report.", 
        "examples": {
          "application/json": {
            "start": {
              "combine": true
            }
          }
        }, 
        "id": "startCombinedReport", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/startCombinedReport"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Start combined coverage report", 
        "tags": [
          "coverage"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Stops coverage reporting.", 
        "examples": {
          "application/json": {
            "stop": {}
          }
        }, 
        "id": "stopReport", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/stopReport"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "path": "/tmp/tmpua9HvB/nova-coverage_rs2CaS"
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Stop coverage report", 
        "tags": [
          "coverage"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-extended-networks": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists networks that are available to the tenant. The information in\nthe network list includes extended network attributes.", 
        "examples": {}, 
        "id": "ListNetworks", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "networks": [
                  {
                    "bridge": "br100", 
                    "bridge_interface": "eth0", 
                    "broadcast": "10.0.0.7", 
                    "cidr": "10.0.0.0/29", 
                    "cidr_v6": null, 
                    "created_at": "2011-08-15T06:19:19.387525", 
                    "deleted": false, 
                    "deleted_at": null, 
                    "dhcp_server": "10.0.0.1", 
                    "dhcp_start": "10.0.0.3", 
                    "dns1": null, 
                    "dns2": null, 
                    "enable_dhcp": true, 
                    "gateway": "10.0.0.1", 
                    "gateway_v6": null, 
                    "host": "nsokolov-desktop", 
                    "id": "20c8acc0-f747-4d71-a389-46d078ebf047", 
                    "injected": false, 
                    "label": "mynet_0", 
                    "mtu": null, 
                    "multi_host": false, 
                    "netmask": "255.255.255.248", 
                    "netmask_v6": null, 
                    "priority": null, 
                    "project_id": "1234", 
                    "rxtx_base": null, 
                    "share_address": false, 
                    "updated_at": "2011-08-16T09:26:13.048257", 
                    "vlan": 100, 
                    "vpn_private_address": "10.0.0.2", 
                    "vpn_public_address": "127.0.0.1", 
                    "vpn_public_port": 1000
                  }, 
                  {
                    "bridge": "br101", 
                    "bridge_interface": "eth0", 
                    "broadcast": "10.0.0.15", 
                    "cidr": "10.0.0.10/29", 
                    "cidr_v6": null, 
                    "created_at": "2011-08-15T06:19:19.885495", 
                    "deleted": false, 
                    "deleted_at": null, 
                    "dhcp_server": "10.0.0.9", 
                    "dhcp_start": "10.0.0.11", 
                    "dns1": null, 
                    "dns2": null, 
                    "enable_dhcp": true, 
                    "gateway": "10.0.0.9", 
                    "gateway_v6": null, 
                    "host": null, 
                    "id": "20c8acc0-f747-4d71-a389-46d078ebf000", 
                    "injected": false, 
                    "label": "mynet_1", 
                    "mtu": null, 
                    "multi_host": false, 
                    "netmask": "255.255.255.248", 
                    "netmask_v6": null, 
                    "priority": null, 
                    "project_id": null, 
                    "rxtx_base": null, 
                    "share_address": false, 
                    "updated_at": null, 
                    "vlan": 101, 
                    "vpn_private_address": "10.0.0.10", 
                    "vpn_public_address": null, 
                    "vpn_public_port": 1001
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List networks", 
        "tags": [
          "extended-networks"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-extended-networks/{id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows information including extended attributes for a specified\nnetwork.", 
        "examples": {}, 
        "id": "GetNetwork", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier associated with the network.", 
            "format": "", 
            "in": "path", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "network": {
                  "bridge": "br100", 
                  "bridge_interface": "eth0", 
                  "broadcast": "10.0.0.7", 
                  "cidr": "10.0.0.0/29", 
                  "cidr_v6": null, 
                  "created_at": "2011-08-15T06:19:19.387525", 
                  "deleted": false, 
                  "deleted_at": null, 
                  "dhcp_server": "10.0.0.1", 
                  "dhcp_start": "10.0.0.3", 
                  "dns1": null, 
                  "dns2": null, 
                  "enable_dhcp": true, 
                  "gateway": "10.0.0.1", 
                  "gateway_v6": null, 
                  "host": "nsokolov-desktop", 
                  "id": "20c8acc0-f747-4d71-a389-46d078ebf047", 
                  "injected": false, 
                  "label": "mynet_0", 
                  "mtu": null, 
                  "multi_host": false, 
                  "netmask": "255.255.255.248", 
                  "netmask_v6": null, 
                  "priority": null, 
                  "project_id": "1234", 
                  "rxtx_base": null, 
                  "share_address": false, 
                  "updated_at": "2011-08-16T09:26:13.048257", 
                  "vlan": 100, 
                  "vpn_private_address": "10.0.0.2", 
                  "vpn_public_address": "127.0.0.1", 
                  "vpn_public_port": 1000
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show network information", 
        "tags": [
          "extended-networks"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-fixed-ips/{fixed_ip}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows information for a specified fixed IP address.", 
        "examples": {}, 
        "id": "showIP", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The fixed IP of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "fixed_ip", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "fixed_ip": {
                  "address": "192.168.1.1", 
                  "cidr": "192.168.1.0/24", 
                  "host": "host", 
                  "hostname": "openstack"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show fixed IP information", 
        "tags": [
          "fixed-ips"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-fixed-ips/{fixed_ip}/action": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Reserves or releases a fixed IP.\n\nTo reserve a fixed IP address, specify ``reserve`` in the request\nbody. To release a fixed IP address, specify ``unreserve`` in the\nrequest body.", 
        "examples": {
          "application/json": {
            "reserve": "None"
          }
        }, 
        "id": "reserveIP", 
        "method": "post", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The fixed IP of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "fixed_ip", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Reserve or release a fixed IP", 
        "tags": [
          "fixed-ips"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-floating-ip-dns": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists registered DNS domains published by the DNS drivers.", 
        "examples": {}, 
        "id": "ListDomains", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "domain_entries": [
                  {
                    "availability_zone": null, 
                    "domain": "domain1.example.org", 
                    "project": "project1", 
                    "scope": "public"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List DNS domains", 
        "tags": [
          "floating-ip-dns"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-floating-ip-dns/{domain}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates or updates a DNS domain.", 
        "examples": {
          "application/json": {
            "domain_entry": {
              "domain": "domain1.example.org", 
              "project": "project1", 
              "scope": "public"
            }
          }
        }, 
        "id": "CreateDomain", 
        "method": "put", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Registered DNS domain published by the DNS drivers.", 
            "format": "", 
            "in": "path", 
            "name": "domain", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "domain_entry": {
                  "availability_zone": null, 
                  "domain": "domain1.example.org", 
                  "project": "project1", 
                  "scope": "public"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create or update DNS domain", 
        "tags": [
          "floating-ip-dns"
        ]
      }, 
      {
        "consumes": [], 
        "description": "Deletes a DNS domain and all associated host entries.", 
        "examples": {}, 
        "id": "DeleteDomain", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Registered DNS domain published by the DNS drivers.", 
            "format": "", 
            "in": "path", 
            "name": "domain", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "200": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Delete DNS domain", 
        "tags": [
          "floating-ip-dns"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-floating-ip-dns/{domain}/entries/{ip}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists DNS entries for a specified domain and IP.", 
        "examples": {}, 
        "id": "FindEntriesbyIP", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Registered DNS domain published by the DNS drivers.", 
            "format": "", 
            "in": "path", 
            "name": "domain", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "dns_entries": [
                  {
                    "domain": "domain1.example.org", 
                    "id": null, 
                    "ip": "192.168.1.1", 
                    "name": "instance1", 
                    "type": null
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List DNS entries", 
        "tags": [
          "floating-ip-dns"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-floating-ip-dns/{domain}/entries/{name}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates or updates a DNS entry.", 
        "examples": {
          "application/json": {
            "dns_entry": {
              "dns_type": "A", 
              "ip": "192.168.53.11"
            }
          }
        }, 
        "id": "CreateEntry", 
        "method": "put", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Registered DNS domain published by the DNS drivers.", 
            "format": "", 
            "in": "path", 
            "name": "domain", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "DNS entry name assigned under a domain.", 
            "format": "", 
            "in": "path", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "dns_entry": {
                  "domain": "domain1.example.org", 
                  "id": null, 
                  "ip": "192.168.1.1", 
                  "name": "instance1", 
                  "type": "A"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create or update DNS entry", 
        "tags": [
          "floating-ip-dns"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Finds a unique DNS entry for a specified domain and name.", 
        "examples": {}, 
        "id": "FindUniqueEntry", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Registered DNS domain published by the DNS drivers.", 
            "format": "", 
            "in": "path", 
            "name": "domain", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "DNS entry name assigned under a domain.", 
            "format": "", 
            "in": "path", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "dns_entry": {
                  "domain": "domain1.example.org", 
                  "id": null, 
                  "ip": "192.168.1.1", 
                  "name": "instance1", 
                  "type": null
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Find unique DNS entry", 
        "tags": [
          "floating-ip-dns"
        ]
      }, 
      {
        "consumes": [], 
        "description": "Deletes a specified DNS entry.", 
        "examples": {}, 
        "id": "DeleteEntry", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Registered DNS domain published by the DNS drivers.", 
            "format": "", 
            "in": "path", 
            "name": "domain", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "DNS entry name assigned under a domain.", 
            "format": "", 
            "in": "path", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "204": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Delete DNS entry", 
        "tags": [
          "floating-ip-dns"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-floating-ip-pools": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists floating IP pools.", 
        "examples": {}, 
        "id": "listFloatingIpPools", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "floating_ip_pools": [
                  {
                    "name": "pool1"
                  }, 
                  {
                    "name": "pool2"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List floating IP pools", 
        "tags": [
          "floating-ip-pools"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-floating-ips": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists floating IP addresses associated with the tenant or account.", 
        "examples": {}, 
        "id": "ListFloatingIPs", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "floating_ips": [
                  {
                    "fixed_ip": null, 
                    "id": 1, 
                    "instance_id": null, 
                    "ip": "10.10.10.1", 
                    "pool": "nova"
                  }, 
                  {
                    "fixed_ip": null, 
                    "id": 2, 
                    "instance_id": null, 
                    "ip": "10.10.10.2", 
                    "pool": "nova"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List floating IPs", 
        "tags": [
          "floating-ips"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Allocates a new floating IP address to a tenant or account.", 
        "examples": {
          "application/json": {
            "pool": "nova"
          }
        }, 
        "id": "AllocateFloatingIP", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/AllocateFloatingIP"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "floating_ip": {
                  "fixed_ip": null, 
                  "id": 1, 
                  "instance_id": null, 
                  "ip": "10.10.10.1", 
                  "pool": "nova"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Allocate floating IP", 
        "tags": [
          "floating-ips"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-floating-ips-bulk": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists all floating IPs.", 
        "examples": {}, 
        "id": "ListFloatingIPsBulk", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "floating_ip_info": [
                  {
                    "address": "10.10.10.1", 
                    "instance_uuid": null, 
                    "interface": "eth0", 
                    "pool": "nova", 
                    "project_id": null
                  }, 
                  {
                    "address": "10.10.10.2", 
                    "instance_uuid": null, 
                    "interface": "eth0", 
                    "pool": "nova", 
                    "project_id": null
                  }, 
                  {
                    "address": "10.10.10.3", 
                    "instance_uuid": null, 
                    "interface": "eth0", 
                    "pool": "nova", 
                    "project_id": null
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List floating IPs", 
        "tags": [
          "floating-ips-bulk"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Bulk-creates floating IPs.", 
        "examples": {
          "application/json": {
            "floating_ips_bulk_create": {
              "interface": "eth0", 
              "ip_range": "192.168.1.0/24", 
              "pool": "nova"
            }
          }
        }, 
        "id": "CreateFloatingIPsBulk", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/CreateFloatingIPsBulk"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "floating_ips_bulk_create": {
                  "interface": "eth0", 
                  "ip_range": "192.168.1.0/24", 
                  "pool": "nova"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create floating IPs", 
        "tags": [
          "floating-ips-bulk"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-floating-ips-bulk/delete": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Bulk-deletes floating IPs.", 
        "examples": {
          "application/json": {
            "ip_range": "192.168.1.0/24"
          }
        }, 
        "id": "DeleteFloatingIPBulk", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/DeleteFloatingIPBulk"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "floating_ips_bulk_delete": "192.168.1.0/24"
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Bulk-delete floating IPs", 
        "tags": [
          "floating-ips-bulk"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-floating-ips-bulk/{host_name}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists all floating IPs for a specified host.", 
        "examples": {}, 
        "id": "ListFloatingIPsBulkbyHost", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The name of the host of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "host_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "floating_ip_info": [
                  {
                    "address": "10.10.10.3", 
                    "instance_uuid": null, 
                    "interface": "eth0", 
                    "pool": "nova", 
                    "project_id": null
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List floating IPs by host", 
        "tags": [
          "floating-ips-bulk"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-floating-ips/{id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows information for a specified floating IP address.", 
        "examples": {}, 
        "id": "DetailFloatingIP", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier associated with allocated floating IP\naddress.", 
            "format": "", 
            "in": "path", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "floating_ip": {
                  "fixed_ip": null, 
                  "id": 1, 
                  "instance_id": null, 
                  "ip": "10.10.10.1", 
                  "pool": "nova"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show floating IP information", 
        "tags": [
          "floating-ips"
        ]
      }, 
      {
        "consumes": [], 
        "description": "Deallocates the floating IP address associated with\nfloating_IP_address_ID.\n\nOnly manually-allocated floating IP addresses are deallocated and\ndeleted by this call. Auto-allocated floating IP addresses must\nfirst be manually deallocated before they can be deleted.", 
        "examples": {}, 
        "id": "DeallocateFloatingIP", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier associated with allocated floating IP\naddress.", 
            "format": "", 
            "in": "path", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Deallocate floating IP", 
        "tags": [
          "floating-ips"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-hosts": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists hosts.", 
        "examples": {}, 
        "id": "listHosts", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The service name. To filter the returned list by service name,\nspecify ``?service={service}`` in the URI.", 
            "format": "", 
            "in": "query", 
            "name": "service", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The zone. To filter the returned list by zone, specify\n``?zone={zone}`` in the URI.", 
            "format": "", 
            "in": "query", 
            "name": "zone", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "hosts": [
                  {
                    "host_name": "787f4f6dda1b409bb8b2f9082349690e", 
                    "service": "compute", 
                    "zone": "nova"
                  }, 
                  {
                    "host_name": "a98b433151084aee8b1a986e28823b36", 
                    "service": "cert", 
                    "zone": "internal"
                  }, 
                  {
                    "host_name": "c56158d13a884a87abf9171efb7de9d8", 
                    "service": "network", 
                    "zone": "internal"
                  }, 
                  {
                    "host_name": "81d5cdcda0014918b3ebd3503a2e5c9a", 
                    "service": "scheduler", 
                    "zone": "internal"
                  }, 
                  {
                    "host_name": "6e48bfe1a3304b7b86154326328750ae", 
                    "service": "conductor", 
                    "zone": "internal"
                  }, 
                  {
                    "host_name": "39f55087a1024d1380755951c945ca69", 
                    "service": "cells", 
                    "zone": "internal"
                  }, 
                  {
                    "host_name": "7a9a6cb4701f4dee9048fe0bc25d0ee5", 
                    "service": "consoleauth", 
                    "zone": "internal"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List hosts", 
        "tags": [
          "hosts"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-hosts/{host_name}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Enables a host or puts it in maintenance mode.", 
        "examples": {
          "application/json": {
            "maintenance_mode": "disable", 
            "status": "enable"
          }
        }, 
        "id": "updateHost", 
        "method": "put", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateHost"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The name of the host of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "host_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "host": "0738dca90a8c43fdadd0be28715520e2", 
                "maintenance_mode": "off_maintenance", 
                "status": "enabled"
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Update host", 
        "tags": [
          "hosts"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows information for a specified host.", 
        "examples": {}, 
        "id": "showHost", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The name of the host of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "host_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "host": [
                  {
                    "resource": {
                      "cpu": 1, 
                      "disk_gb": 1028, 
                      "host": "5ca60c6792a1442f9471ff575443f94d", 
                      "memory_mb": 8192, 
                      "project": "(total)"
                    }
                  }, 
                  {
                    "resource": {
                      "cpu": 0, 
                      "disk_gb": 0, 
                      "host": "5ca60c6792a1442f9471ff575443f94d", 
                      "memory_mb": 512, 
                      "project": "(used_now)"
                    }
                  }, 
                  {
                    "resource": {
                      "cpu": 0, 
                      "disk_gb": 0, 
                      "host": "5ca60c6792a1442f9471ff575443f94d", 
                      "memory_mb": 0, 
                      "project": "(used_max)"
                    }
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show host information", 
        "tags": [
          "hosts"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-hosts/{host_name}/reboot": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Reboots a host.", 
        "examples": {}, 
        "id": "rebootHost", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The name of the host of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "host_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "host": "066bf157ab50481d8c607cfe584b2230", 
                "power_action": "reboot"
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Reboot host", 
        "tags": [
          "hosts"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-hosts/{host_name}/shutdown": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shuts down a host.", 
        "examples": {}, 
        "id": "shutdownHost", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The name of the host of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "host_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "host": "d2576862a2144ee6ad37d9e1938460a2", 
                "power_action": "shutdown"
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Shut down host", 
        "tags": [
          "hosts"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-hosts/{host_name}/startup": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Starts a host.", 
        "examples": {}, 
        "id": "startupHost", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The name of the host of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "host_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "host": "57f5de2fa5b44f14974a4f50b9ffcbf8", 
                "power_action": "startup"
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Start host", 
        "tags": [
          "hosts"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-hypervisor-status/detail": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows information for a specified hypervisor. Includes the\nhypervisor status.\n\nTypically configured as an admin-only extension by using\n``policy.json`` settings.", 
        "examples": {}, 
        "id": "showHypervisor-status", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "hypervisor": {
                  "cpu_info": "{\"arch\": \"x86_64\", \"model\": \"Nehalem\", \"vendor\": \"Intel\", \"features\": [\"pge\", \"clflush\"], \"topology\": {\"cores\": 1, \"threads\": 1, \"sockets\": 4}}", 
                  "current_workload": 0, 
                  "disk_available_least": 0, 
                  "free_disk_gb": 1028, 
                  "free_ram_mb": 7680, 
                  "hypervisor_hostname": "fake-mini", 
                  "hypervisor_type": "fake", 
                  "hypervisor_version": 1000, 
                  "id": 1, 
                  "local_gb": 1028, 
                  "local_gb_used": 0, 
                  "memory_mb": 8192, 
                  "memory_mb_used": 512, 
                  "running_vms": 0, 
                  "service": {
                    "disabled_reason": null, 
                    "host": "5641188ab2964f88a21042b493585ff8", 
                    "id": 2
                  }, 
                  "state": "up", 
                  "status": "enabled", 
                  "vcpus": 1, 
                  "vcpus_used": 0
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show hypervisor information", 
        "tags": [
          "hypervisor-status"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-hypervisors": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists hypervisors information for each server obtained through the\nhypervisor-specific API, such as libvirt or XenAPI.", 
        "examples": {}, 
        "id": "listHypervisors", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "hypervisors": [
                  {
                    "hypervisor_hostname": "fake-mini", 
                    "id": 1
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List hypervisors", 
        "tags": [
          "hypervisors"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-hypervisors/detail": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows information for a specified hypervisor. Typically configured\nas an admin-only extension by using policy.json settings.", 
        "examples": {}, 
        "id": "showHypervisor", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "hypervisors": [
                  {
                    "cpu_info": "?", 
                    "current_workload": 0, 
                    "disk_available_least": null, 
                    "free_disk_gb": 1028, 
                    "free_ram_mb": 7680, 
                    "hypervisor_hostname": "fake-mini", 
                    "hypervisor_type": "fake", 
                    "hypervisor_version": 1, 
                    "id": 1, 
                    "local_gb": 1028, 
                    "local_gb_used": 0, 
                    "memory_mb": 8192, 
                    "memory_mb_used": 512, 
                    "running_vms": 0, 
                    "service": {
                      "host": "1e0d7892083548cfb347e782d3b20342", 
                      "id": 2
                    }, 
                    "vcpus": 1, 
                    "vcpus_used": 0
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show hypervisor information", 
        "tags": [
          "hypervisors"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-hypervisors/statistics": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows hypervisor statistics over all compute nodes.", 
        "examples": {}, 
        "id": "getHypervisorStats", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "hypervisor_statistics": {
                  "count": 1, 
                  "current_workload": 0, 
                  "disk_available_least": 0, 
                  "free_disk_gb": 1028, 
                  "free_ram_mb": 7680, 
                  "local_gb": 1028, 
                  "local_gb_used": 0, 
                  "memory_mb": 8192, 
                  "memory_mb_used": 512, 
                  "running_vms": 0, 
                  "vcpus": 1, 
                  "vcpus_used": 0
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show statistics for hypervisors", 
        "tags": [
          "hypervisors"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-hypervisors/{hypervisor_hostname}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows the up time for a specified hypervisor.", 
        "examples": {}, 
        "id": "getHypervisorUptime", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The name of the host that runs the hypervisor.", 
            "format": "", 
            "in": "path", 
            "name": "hypervisor_hostname", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "hypervisor": {
                  "hypervisor_hostname": "fake-mini", 
                  "id": 1, 
                  "uptime": " 08:32:11 up 93 days, 18:25, 12 users,  load average: 0.20, 0.12, 0.14"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show hypervisor up time", 
        "tags": [
          "hypervisors"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-hypervisors/{hypervisor_hostname}/servers": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists instances that belong to specific hypervisors.", 
        "examples": {}, 
        "id": "listHypervisorInstances", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The name of the host that runs the hypervisor.", 
            "format": "", 
            "in": "path", 
            "name": "hypervisor_hostname", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "hypervisors": [
                  {
                    "hypervisor_hostname": "fake-mini", 
                    "id": 1
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List instances for hypervisors", 
        "tags": [
          "hypervisors"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-keypairs": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists keypairs that are associated with the account.", 
        "examples": {}, 
        "id": "getKeypair", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "keypairs": [
                  {
                    "keypair": {
                      "fingerprint": "15:b0:f8:b3:f9:48:63:71:cf:7b:5b:38:6d:44:2d:4a", 
                      "name": "keypair-601a2305-4f25-41ed-89c6-2a966fc8027a", 
                      "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQC+Eo/RZRngaGTkFs7I62ZjsIlO79KklKbMXi8F+KITD4bVQHHn+kV+4gRgkgCRbdoDqoGfpaDFs877DYX9n4z6FrAIZ4PES8TNKhatifpn9NdQYWA+IkU8CuvlEKGuFpKRi/k7JLos/gHi2hy7QUwgtRvcefvD/vgQZOVw/mGR9Q== Generated-by-Nova\n"
                    }
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List keypairs", 
        "tags": [
          "keypairs"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Generates or imports a keypair.", 
        "examples": {
          "application/json": {
            "keypair": {
              "name": "keypair-dab428fe-6186-4a14-b3de-92131f76cd39", 
              "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDx8nkQv/zgGgB4rMYmIf+6A4l6Rr+o/6lHBQdW5aYd44bd8JttDCE/F/pNRr0lRE+PiqSPO8nDPHw0010JeMH9gYgnnFlyY3/OcJ02RhIPyyxYpv9FhY+2YiUkpwFOcLImyrxEsYXpD/0d3ac30bNH6Sw9JD9UZHYcpSxsIbECHw== Generated-by-Nova"
            }
          }
        }, 
        "id": "createKeypair", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createKeypair"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "keypair": {
                  "fingerprint": "1e:2c:9b:56:79:4b:45:77:f9:ca:7a:98:2c:b0:d5:3c", 
                  "name": "keypair-dab428fe-6186-4a14-b3de-92131f76cd39", 
                  "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQDx8nkQv/zgGgB4rMYmIf+6A4l6Rr+o/6lHBQdW5aYd44bd8JttDCE/F/pNRr0lRE+PiqSPO8nDPHw0010JeMH9gYgnnFlyY3/OcJ02RhIPyyxYpv9FhY+2YiUkpwFOcLImyrxEsYXpD/0d3ac30bNH6Sw9JD9UZHYcpSxsIbECHw== Generated-by-Nova", 
                  "user_id": "fake"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create or import keypair", 
        "tags": [
          "keypairs"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-keypairs/{keypair_name}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows a keypair associated with the account.", 
        "examples": {}, 
        "id": "showKeypair", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The name associated with a keypair.", 
            "format": "", 
            "in": "path", 
            "name": "keypair_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "keypair": {
                  "created_at": "2014-05-07T12:06:13.681238", 
                  "deleted": false, 
                  "deleted_at": null, 
                  "fingerprint": "9d:00:f4:d7:26:6e:52:06:4c:c1:d3:1d:fd:06:66:01", 
                  "id": 1, 
                  "name": "keypair-3582d8b7-e588-4aad-b7f7-f4e76f0e4314", 
                  "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDYJrTVpcMwFqQy/oMvtUSRofZdSRHEwrsX8AYkRvn2ZnCXM+b6+GZ2NQuuWj+ocznlnwiGFQDsL/yeE+/kurqcPJFKKp60mToXIMyzioFxW88fJtwEWawHKAclbHWpR1t4fQ4DS+/sIbX/Yd9btlVQ2tpQjodGDbM9Tr9/+/3i6rcR+EoLqmbgCgAiGiVV6VbM2Zx79yUwd+GnQejHX8BlYZoOjCnt3NREsITcmWE9FVFy6TnLmahs3FkEO/QGgWGkaohAJlsgaVvSWGgDn2AujKYwyDokK3dXyeX3m2Vmc3ejiqPa/C4nRrCOlko5nSgV/9IXRx1ERImsqZnE9usB Generated-by-Nova\n", 
                  "updated_at": null, 
                  "user_id": "fake"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show keypair information", 
        "tags": [
          "keypairs"
        ]
      }, 
      {
        "consumes": [], 
        "description": "Deletes a keypair.", 
        "examples": {}, 
        "id": "deleteKeypair", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The name associated with a keypair.", 
            "format": "", 
            "in": "path", 
            "name": "keypair_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Delete keypair", 
        "tags": [
          "keypairs"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-migrations": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Enables an administrative user to fetch in-progress migrations for\na region or specified cell in a region.", 
        "examples": {}, 
        "id": "getMigrations", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "migrations": [
                  {
                    "created_at": "2012-10-29T13:42:02.000000", 
                    "dest_compute": "compute2", 
                    "dest_host": "1.2.3.4", 
                    "dest_node": "node2", 
                    "id": 1234, 
                    "instance_uuid": "instance_id_123", 
                    "new_instance_type_id": 2, 
                    "old_instance_type_id": 1, 
                    "source_compute": "compute1", 
                    "source_node": "node1", 
                    "status": "Done", 
                    "updated_at": "2012-10-29T13:42:02.000000"
                  }, 
                  {
                    "created_at": "2013-10-22T13:42:02.000000", 
                    "dest_compute": "compute20", 
                    "dest_host": "5.6.7.8", 
                    "dest_node": "node20", 
                    "id": 5678, 
                    "instance_uuid": "instance_id_456", 
                    "new_instance_type_id": 6, 
                    "old_instance_type_id": 5, 
                    "source_compute": "compute10", 
                    "source_node": "node10", 
                    "status": "Done", 
                    "updated_at": "2013-10-22T13:42:02.000000"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get migrations", 
        "tags": [
          "migrations"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-networks": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists networks that are available to the tenant.", 
        "examples": {}, 
        "id": "ListNetworks", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "networks": [
                  {
                    "bridge": "br100", 
                    "bridge_interface": "eth0", 
                    "broadcast": "10.0.0.7", 
                    "cidr": "10.0.0.0/29", 
                    "cidr_v6": null, 
                    "created_at": "2011-08-15T06:19:19.387525", 
                    "deleted": false, 
                    "deleted_at": null, 
                    "dhcp_start": "10.0.0.3", 
                    "dns1": null, 
                    "dns2": null, 
                    "gateway": "10.0.0.1", 
                    "gateway_v6": null, 
                    "host": "nsokolov-desktop", 
                    "id": "20c8acc0-f747-4d71-a389-46d078ebf047", 
                    "injected": false, 
                    "label": "mynet_0", 
                    "multi_host": false, 
                    "netmask": "255.255.255.248", 
                    "netmask_v6": null, 
                    "priority": null, 
                    "project_id": "1234", 
                    "rxtx_base": null, 
                    "updated_at": "2011-08-16T09:26:13.048257", 
                    "vlan": 100, 
                    "vpn_private_address": "10.0.0.2", 
                    "vpn_public_address": "127.0.0.1", 
                    "vpn_public_port": 1000
                  }, 
                  {
                    "bridge": "br101", 
                    "bridge_interface": "eth0", 
                    "broadcast": "10.0.0.15", 
                    "cidr": "10.0.0.10/29", 
                    "cidr_v6": null, 
                    "created_at": "2011-08-15T06:19:19.885495", 
                    "deleted": false, 
                    "deleted_at": null, 
                    "dhcp_start": "10.0.0.11", 
                    "dns1": null, 
                    "dns2": null, 
                    "gateway": "10.0.0.9", 
                    "gateway_v6": null, 
                    "host": null, 
                    "id": "20c8acc0-f747-4d71-a389-46d078ebf000", 
                    "injected": false, 
                    "label": "mynet_1", 
                    "multi_host": false, 
                    "netmask": "255.255.255.248", 
                    "netmask_v6": null, 
                    "priority": null, 
                    "project_id": null, 
                    "rxtx_base": null, 
                    "updated_at": null, 
                    "vlan": 101, 
                    "vpn_private_address": "10.0.0.10", 
                    "vpn_public_address": null, 
                    "vpn_public_port": 1001
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List networks", 
        "tags": [
          "networks"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-networks/add": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Adds a specified network to a project.", 
        "examples": {
          "application/json": {
            "id": "1"
          }
        }, 
        "id": "AddNetwork", 
        "method": "post", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Add network", 
        "tags": [
          "networks"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-networks/{id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows information for a specified network.", 
        "examples": {}, 
        "id": "GetNetwork", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier associated with the network.", 
            "format": "", 
            "in": "path", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "network": {
                  "bridge": "br100", 
                  "bridge_interface": "eth0", 
                  "broadcast": "10.0.0.7", 
                  "cidr": "10.0.0.0/29", 
                  "cidr_v6": null, 
                  "created_at": "2011-08-15T06:19:19.387525", 
                  "deleted": false, 
                  "deleted_at": null, 
                  "dhcp_start": "10.0.0.3", 
                  "dns1": null, 
                  "dns2": null, 
                  "gateway": "10.0.0.1", 
                  "gateway_v6": null, 
                  "host": "nsokolov-desktop", 
                  "id": "20c8acc0-f747-4d71-a389-46d078ebf047", 
                  "injected": false, 
                  "label": "mynet_0", 
                  "multi_host": false, 
                  "netmask": "255.255.255.248", 
                  "netmask_v6": null, 
                  "priority": null, 
                  "project_id": "1234", 
                  "rxtx_base": null, 
                  "updated_at": "2011-08-16T09:26:13.048257", 
                  "vlan": 100, 
                  "vpn_private_address": "10.0.0.2", 
                  "vpn_public_address": "127.0.0.1", 
                  "vpn_public_port": 1000
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show network information", 
        "tags": [
          "networks"
        ]
      }, 
      {
        "consumes": [], 
        "description": "Deletes a specified network.", 
        "examples": {}, 
        "id": "DeleteNetwork", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier associated with the network.", 
            "format": "", 
            "in": "path", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Delete network", 
        "tags": [
          "networks"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-networks/{id}/action": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Disassociates a specified network from a project so that the\nnetwork can be reused.", 
        "examples": {
          "application/json": {
            "disassociate": null
          }
        }, 
        "id": "DisassociateNetwork", 
        "method": "post", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier associated with the network.", 
            "format": "", 
            "in": "path", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Disassociate network", 
        "tags": [
          "networks"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Disassociates the project from a specified network.", 
        "examples": {
          "application/json": {
            "disassociate_project": null
          }
        }, 
        "id": "DisassociateProject", 
        "method": "post", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier associated with the network.", 
            "format": "", 
            "in": "path", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Disassociate project", 
        "tags": [
          "networks"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Disassociates the host from a specified network.", 
        "examples": {
          "application/json": {
            "disassociate_host": null
          }
        }, 
        "id": "DisassociateHost", 
        "method": "post", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier associated with the network.", 
            "format": "", 
            "in": "path", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Disassociate host", 
        "tags": [
          "networks"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Associates a specified network with a host.", 
        "examples": {
          "application/json": {
            "associate_host": "testHost"
          }
        }, 
        "id": "AssociateHost", 
        "method": "post", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier associated with the network.", 
            "format": "", 
            "in": "path", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Associate host", 
        "tags": [
          "networks"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-quota-sets/{tenant_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows quotas for a tenant.", 
        "examples": {}, 
        "id": "showQuota", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant for which you want to show, update, or delete\nquotas. This ID is different from the first tenant ID that you\nspecify in the URI: That ID is for the admin tenant.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "quota_set": {
                  "cores": 20, 
                  "fixed_ips": -1, 
                  "floating_ips": 10, 
                  "id": "fake_tenant", 
                  "injected_file_content_bytes": 10240, 
                  "injected_file_path_bytes": 255, 
                  "injected_files": 5, 
                  "instances": 10, 
                  "key_pairs": 100, 
                  "metadata_items": 128, 
                  "ram": 51200, 
                  "security_group_rules": 20, 
                  "security_groups": 10, 
                  "server_group_members": 10, 
                  "server_groups": 10
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show quotas", 
        "tags": [
          "quota-sets"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Updates quotas for a tenant.", 
        "examples": {
          "application/json": {
            "quota_set": {
              "security_groups": 45
            }
          }
        }, 
        "id": "updateQuota", 
        "method": "put", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateQuota"
            }
          }, 
          {
            "description": "The ID for the tenant for which you want to show, update, or delete\nquotas. This ID is different from the first tenant ID that you\nspecify in the URI: That ID is for the admin tenant.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "quota_set": {
                  "cores": 20, 
                  "fixed_ips": -1, 
                  "floating_ips": 10, 
                  "injected_file_content_bytes": 10240, 
                  "injected_file_path_bytes": 255, 
                  "injected_files": 5, 
                  "instances": 10, 
                  "key_pairs": 100, 
                  "metadata_items": 128, 
                  "ram": 51200, 
                  "security_group_rules": 20, 
                  "security_groups": 45, 
                  "server_group_members": 10, 
                  "server_groups": 10
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Update quotas", 
        "tags": [
          "quota-sets"
        ]
      }, 
      {
        "consumes": [], 
        "description": "Deletes quotas for a tenant so the quotas revert to default values.", 
        "examples": {}, 
        "id": "deleteQuotas", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The ID for the tenant for which you want to show, update, or delete\nquotas. This ID is different from the first tenant ID that you\nspecify in the URI: That ID is for the admin tenant.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "200": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Delete quotas", 
        "tags": [
          "quota-sets"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-quota-sets/{tenant_id}/defaults": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Gets default quotas for a tenant.", 
        "examples": {}, 
        "id": "getDefaults", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant for which you want to show, update, or delete\nquotas. This ID is different from the first tenant ID that you\nspecify in the URI: That ID is for the admin tenant.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "quota_set": {
                  "cores": 20, 
                  "fixed_ips": -1, 
                  "floating_ips": 10, 
                  "id": "fake_tenant", 
                  "injected_file_content_bytes": 10240, 
                  "injected_file_path_bytes": 255, 
                  "injected_files": 5, 
                  "instances": 10, 
                  "key_pairs": 100, 
                  "metadata_items": 128, 
                  "ram": 51200, 
                  "security_group_rules": 20, 
                  "security_groups": 10, 
                  "server_group_members": 10, 
                  "server_groups": 10
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get default quotas", 
        "tags": [
          "quota-sets"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-quota-sets/{tenant_id}/detail/{user_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows details for quotas for a specified tenant and user.", 
        "examples": {}, 
        "id": "showQuotaDetailUser", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant for which you want to show, update, or delete\nquotas. This ID is different from the first tenant ID that you\nspecify in the URI: That ID is for the admin tenant.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The user ID. Specify in the URI as a query string:\n``user_id={user_id}`` .", 
            "format": "", 
            "in": "path", 
            "name": "user_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "quota_set": {
                  "cores": 20, 
                  "fixed_ips": -1, 
                  "floating_ips": 10, 
                  "id": "fake_tenant", 
                  "injected_file_content_bytes": 10240, 
                  "injected_file_path_bytes": 255, 
                  "injected_files": 5, 
                  "instances": 10, 
                  "key_pairs": 100, 
                  "metadata_items": 128, 
                  "ram": 51200, 
                  "security_group_rules": 20, 
                  "security_groups": 10
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show quota details for user", 
        "tags": [
          "quota-sets"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-quota-sets/{tenant_id}/{user_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Enables an admin user to show quotas for a specified tenant and\nuser.", 
        "examples": {}, 
        "id": "showQuotaUser", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant for which you want to show, update, or delete\nquotas. This ID is different from the first tenant ID that you\nspecify in the URI: That ID is for the admin tenant.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The user ID. Specify in the URI as a query string:\n``user_id={user_id}`` .", 
            "format": "", 
            "in": "path", 
            "name": "user_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "quota_set": {
                  "cores": 20, 
                  "fixed_ips": -1, 
                  "floating_ips": 10, 
                  "id": "fake_tenant", 
                  "injected_file_content_bytes": 10240, 
                  "injected_file_path_bytes": 255, 
                  "injected_files": 5, 
                  "instances": 10, 
                  "key_pairs": 100, 
                  "metadata_items": 128, 
                  "ram": 51200, 
                  "security_group_rules": 20, 
                  "security_groups": 10
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show quotas for user", 
        "tags": [
          "quota-sets"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Updates quotas for a specified tenant/project and user.", 
        "examples": {
          "application/json": {
            "quota_set": {
              "force": "True", 
              "instances": 9
            }
          }
        }, 
        "id": "updateQuotaUser", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateQuotaUser"
            }
          }, 
          {
            "description": "The ID for the tenant for which you want to show, update, or delete\nquotas. This ID is different from the first tenant ID that you\nspecify in the URI: That ID is for the admin tenant.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The user ID. Specify in the URI as a query string:\n``user_id={user_id}`` .", 
            "format": "", 
            "in": "path", 
            "name": "user_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "quota_set": {
                  "cores": 20, 
                  "fixed_ips": -1, 
                  "floating_ips": 10, 
                  "injected_file_content_bytes": 10240, 
                  "injected_file_path_bytes": 255, 
                  "injected_files": 5, 
                  "instances": 9, 
                  "key_pairs": 100, 
                  "metadata_items": 128, 
                  "ram": 51200, 
                  "security_group_rules": 20, 
                  "security_groups": 10
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Update quotas for user", 
        "tags": [
          "quota-sets"
        ]
      }, 
      {
        "consumes": [], 
        "description": "Deletes quotas for a user so that the quotas revert to default\nvalues.", 
        "examples": {}, 
        "id": "deleteQuotasUser", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The ID for the tenant for which you want to show, update, or delete\nquotas. This ID is different from the first tenant ID that you\nspecify in the URI: That ID is for the admin tenant.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The user ID. Specify in the URI as a query string:\n``user_id={user_id}`` .", 
            "format": "", 
            "in": "path", 
            "name": "user_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "200": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Delete quotas for user", 
        "tags": [
          "quota-sets"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-security-group-default-rules": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists default security group rules.", 
        "examples": {}, 
        "id": "listSecGroupDefaultRules", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "security_group_default_rules": [
                  {
                    "from_port": 80, 
                    "id": 1, 
                    "ip_protocol": "TCP", 
                    "ip_range": {
                      "cidr": "10.10.10.0/24"
                    }, 
                    "to_port": 80
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List default security group rules", 
        "tags": [
          "security-group-default-rules"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a default security group rule.\n\nYou must specify an IP protocol ( ``ip_protocol`` ) value if you\nspecify a source ( ``from_port`` ) or destination ( ``to_port`` )\nport value. Otherwise, the operation returns the ``Bad request\n(400)Source/destination port requires a protocol`` error.", 
        "examples": {
          "application/json": {
            "security_group_default_rule": {
              "cidr": "10.10.12.0/24", 
              "from_port": "80", 
              "ip_protocol": "TCP", 
              "to_port": "80"
            }
          }
        }, 
        "id": "createSecGroupRule", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createSecGroupRule"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "security_group_default_rule": {
                  "from_port": 80, 
                  "id": 1, 
                  "ip_protocol": "TCP", 
                  "ip_range": {
                    "cidr": "10.10.10.0/24"
                  }, 
                  "to_port": 80
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create default security group rule", 
        "tags": [
          "security-group-default-rules"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-security-group-default-rules/{security_group_default_rule_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows information for a specified security group rule.", 
        "examples": {}, 
        "id": "showSecGroupDefaultRule", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier of the security group rule.", 
            "format": "", 
            "in": "path", 
            "name": "security_group_default_rule_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "security_group_default_rule": {
                  "from_port": 80, 
                  "id": 1, 
                  "ip_protocol": "TCP", 
                  "ip_range": {
                    "cidr": "10.10.10.0/24"
                  }, 
                  "to_port": 80
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show default security group rule information", 
        "tags": [
          "security-group-default-rules"
        ]
      }, 
      {
        "consumes": [], 
        "description": "Deletes a specified security group rule.", 
        "examples": {}, 
        "id": "deleteSecGroupDefaultRule", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier of the security group rule.", 
            "format": "", 
            "in": "path", 
            "name": "security_group_default_rule_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "204": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Delete default security group rule", 
        "tags": [
          "security-group-default-rules"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-security-group-rules": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a rule for a specified security group.", 
        "examples": {
          "application/json": {
            "security_group_rule": {
              "cidr": "0.0.0.0/0", 
              "from_port": "443", 
              "ip_protocol": "tcp", 
              "parent_group_id": "48700ff3-30b8-4e63-845f-a79c9633e9fb", 
              "to_port": "443"
            }
          }
        }, 
        "id": "createSecGroupRule", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createSecGroupRule"
            }
          }, 
          {
            "description": "The ID of the tenant.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "security_group_rule": {
                  "from_port": 443, 
                  "group": {}, 
                  "id": "2d021cf1-ce4b-4292-994f-7a785d62a144", 
                  "ip_protocol": "tcp", 
                  "ip_range": {
                    "cidr": "0.0.0.0/0"
                  }, 
                  "parent_group_id": "48700ff3-30b8-4e63-845f-a79c9633e9fb", 
                  "to_port": 443
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create security group rule", 
        "tags": [
          "os-security-group-rules"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-security-group-rules/{security_group_rule_id}": [
      {
        "consumes": [], 
        "description": "Deletes a specified security group rule.", 
        "examples": {}, 
        "id": "deleteSecGroupRule", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The ID of the tenant.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID of the security group rule.", 
            "format": "", 
            "in": "path", 
            "name": "security_group_rule_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Delete security group rule", 
        "tags": [
          "os-security-group-rules"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-security-groups": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists security groups.", 
        "examples": {}, 
        "id": "listSecGroups", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "security_groups": [
                  {
                    "description": "default", 
                    "id": "3fb26eb3-581b-4420-9963-b0879a026506", 
                    "name": "default", 
                    "rules": [], 
                    "tenant_id": "openstack"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List security groups", 
        "tags": [
          "security-groups"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a security group.", 
        "examples": {
          "application/json": {
            "security_group": {
              "description": "test", 
              "name": "test"
            }
          }
        }, 
        "id": "createSecGroup", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createSecGroup"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "security_group": {
                  "description": "test", 
                  "id": "de3ff110-46b2-4ace-bb76-a2e1ed741b95", 
                  "name": "test", 
                  "rules": [], 
                  "tenant_id": "openstack"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create security group", 
        "tags": [
          "security-groups"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-security-groups/{security_group_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows information for a specified security group.", 
        "examples": {}, 
        "id": "showSecGroup", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier of the security group.", 
            "format": "", 
            "in": "path", 
            "name": "security_group_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "security_group": {
                  "description": "default", 
                  "id": "de3ff110-46b2-4ace-bb76-a2e1ed741b95", 
                  "name": "default", 
                  "rules": [], 
                  "tenant_id": "openstack"
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Show security group information", 
        "tags": [
          "security-groups"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Updates a specified security group.", 
        "examples": {
          "application/json": {
            "security_group": {
              "description": "my security group", 
              "name": "mysecgroup"
            }
          }
        }, 
        "id": "updateSecGroup", 
        "method": "put", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateSecGroup"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier of the security group.", 
            "format": "", 
            "in": "path", 
            "name": "security_group_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "security_group": {
                  "description": "my security group", 
                  "id": "01fbade5-b664-42f6-83ae-4e214f4263fa", 
                  "name": "mysecgroup", 
                  "rules": [], 
                  "tenant_id": "a52cdb9cc7854a39a23d3af73a40899e"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Update security group", 
        "tags": [
          "security-groups"
        ]
      }, 
      {
        "consumes": [], 
        "description": "Deletes a specified security group.", 
        "examples": {}, 
        "id": "deleteSecGroup", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier of the security group.", 
            "format": "", 
            "in": "path", 
            "name": "security_group_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Delete security group", 
        "tags": [
          "security-groups"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-server-groups": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a server group.", 
        "examples": {
          "application/json": {
            "server_group": {
              "name": "test", 
              "policies": [
                "anti-affinity"
              ]
            }
          }
        }, 
        "id": "createServerGroup", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createServerGroup"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "server_group": {
                  "id": "5bbcc3c4-1da2-4437-a48a-66f15b1b13f9", 
                  "members": [], 
                  "metadata": {}, 
                  "name": "test", 
                  "policies": [
                    "anti-affinity"
                  ]
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create server group", 
        "tags": [
          "server-groups"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists server groups.", 
        "examples": {}, 
        "id": "listServerGroups", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "server_groups": [
                  {
                    "id": "616fb98f-46ca-475e-917e-2563e5a8cd19", 
                    "members": [], 
                    "metadata": {}, 
                    "name": "test", 
                    "policies": [
                      "anti-affinity"
                    ]
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List server groups", 
        "tags": [
          "server-groups"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-server-groups/{ServerGroup_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows details for a specified server group.", 
        "examples": {}, 
        "id": "showServerGroup", 
        "method": "get", 
        "parameters": [
          {
            "description": "The server group ID.", 
            "format": "", 
            "in": "path", 
            "name": "ServerGroup_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "server_group": {
                  "id": "5bbcc3c4-1da2-4437-a48a-66f15b1b13f9", 
                  "members": [], 
                  "metadata": {}, 
                  "name": "test", 
                  "policies": [
                    "anti-affinity"
                  ]
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show server group details", 
        "tags": [
          "server-groups"
        ]
      }, 
      {
        "consumes": [], 
        "description": "Deletes a specified server group.", 
        "examples": {}, 
        "id": "deleteServerGroup", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The server group ID.", 
            "format": "", 
            "in": "path", 
            "name": "ServerGroup_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "204": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Delete server group", 
        "tags": [
          "server-groups"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-services": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists running services.", 
        "examples": {}, 
        "id": "listServices", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "services": [
                  {
                    "binary": "nova-scheduler", 
                    "host": "host1", 
                    "state": "up", 
                    "status": "disabled", 
                    "updated_at": "2012-10-29T13:42:02.000000", 
                    "zone": "internal"
                  }, 
                  {
                    "binary": "nova-compute", 
                    "host": "host1", 
                    "state": "up", 
                    "status": "disabled", 
                    "updated_at": "2012-10-29T13:42:05.000000", 
                    "zone": "nova"
                  }, 
                  {
                    "binary": "nova-scheduler", 
                    "host": "host2", 
                    "state": "down", 
                    "status": "enabled", 
                    "updated_at": "2012-09-19T06:55:34.000000", 
                    "zone": "internal"
                  }, 
                  {
                    "binary": "nova-compute", 
                    "host": "host2", 
                    "state": "down", 
                    "status": "disabled", 
                    "updated_at": "2012-09-18T08:03:38.000000", 
                    "zone": "nova"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List services", 
        "tags": [
          "services"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-services/detail": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists disabled services. If information exists, includes reasons\nwhy services were disabled.", 
        "examples": {}, 
        "id": "getDisableReasonDetail", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "services": [
                  {
                    "binary": "nova-scheduler", 
                    "disabled_reason": "test1", 
                    "host": "host1", 
                    "state": "up", 
                    "status": "disabled", 
                    "updated_at": "2012-10-29T13:42:02.000000", 
                    "zone": "internal"
                  }, 
                  {
                    "binary": "nova-compute", 
                    "disabled_reason": "test2", 
                    "host": "host1", 
                    "state": "up", 
                    "status": "disabled", 
                    "updated_at": "2012-10-29T13:42:05.000000", 
                    "zone": "nova"
                  }, 
                  {
                    "binary": "nova-scheduler", 
                    "disabled_reason": null, 
                    "host": "host2", 
                    "state": "down", 
                    "status": "enabled", 
                    "updated_at": "2012-09-19T06:55:34.000000", 
                    "zone": "internal"
                  }, 
                  {
                    "binary": "nova-compute", 
                    "disabled_reason": "test4", 
                    "host": "host2", 
                    "state": "down", 
                    "status": "disabled", 
                    "updated_at": "2012-09-18T08:03:38.000000", 
                    "zone": "nova"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List disabled services", 
        "tags": [
          "services"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-services/disable": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Disables scheduling for a service.", 
        "examples": {
          "application/json": {
            "binary": "nova-compute", 
            "host": "host1"
          }
        }, 
        "id": "disableScheduling", 
        "method": "put", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "service": {
                  "binary": "nova-compute", 
                  "host": "host1", 
                  "status": "disabled"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Disable scheduling for a service", 
        "tags": [
          "services"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-services/disable-log-reason": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Logs information to the service table about why a service was\ndisabled.", 
        "examples": {
          "application/json": {
            "binary": "nova-compute", 
            "disabled_reason": "test2", 
            "host": "host1"
          }
        }, 
        "id": "disableLogReason", 
        "method": "put", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/disableLogReason"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "service": {
                  "binary": "nova-compute", 
                  "disabled_reason": "test2", 
                  "host": "host1", 
                  "status": "disabled"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Log disabled service information", 
        "tags": [
          "services"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-services/enable": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Enables scheduling for a service.", 
        "examples": {
          "application/json": {
            "binary": "nova-compute", 
            "host": "host1"
          }
        }, 
        "id": "enableScheduling", 
        "method": "put", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "service": {
                  "binary": "nova-compute", 
                  "host": "host1", 
                  "status": "enabled"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Enable scheduling for a service", 
        "tags": [
          "services"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-services/{service_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Deletes an existing service.", 
        "examples": {
          "application/json": {
            "binary": "nova-compute", 
            "host": "host1"
          }
        }, 
        "id": "deleteService", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "204": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Delete service", 
        "tags": [
          "services"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-simple-tenant-usage": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists usage information for all tenants.", 
        "examples": {}, 
        "id": "ListUsage", 
        "method": "get", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/ListUsage"
            }
          }, 
          {
            "description": "The tenant ID.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "tenant_usages": [
                  {
                    "start": "2012-10-08T21:10:44.587336", 
                    "stop": "2012-10-08T22:10:44.587336", 
                    "tenant_id": "openstack", 
                    "total_hours": 1.0, 
                    "total_local_gb_usage": 1.0, 
                    "total_memory_mb_usage": 512.0, 
                    "total_vcpus_usage": 1.0
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List usage information for all tenants", 
        "tags": [
          "simple-tenant-usage"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-simple-tenant-usage/{tenant_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Gets usage information for a tenant.", 
        "examples": {}, 
        "id": "GetUsage", 
        "method": "get", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/GetUsage"
            }
          }, 
          {
            "description": "The tenant ID.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "tenant_usage": {
                  "server_usages": [
                    {
                      "ended_at": null, 
                      "flavor": "m1.tiny", 
                      "hours": 1.0, 
                      "instance_id": "1f1deceb-17b5-4c04-84c7-e0d4499c8fe0", 
                      "local_gb": 1, 
                      "memory_mb": 512, 
                      "name": "new-server-test", 
                      "started_at": "2012-10-08T20:10:44.541277", 
                      "state": "active", 
                      "tenant_id": "openstack", 
                      "uptime": 3600, 
                      "vcpus": 1
                    }
                  ], 
                  "start": "2012-10-08T20:10:44.587336", 
                  "stop": "2012-10-08T21:10:44.587336", 
                  "tenant_id": "openstack", 
                  "total_hours": 1.0, 
                  "total_local_gb_usage": 1.0, 
                  "total_memory_mb_usage": 512.0, 
                  "total_vcpus_usage": 1.0
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get tenant usage information", 
        "tags": [
          "simple-tenant-usage"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-snapshots": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a snapshot.", 
        "examples": {
          "application/json": {
            "snapshot": {
              "display_description": "Daily backup", 
              "display_name": "snap-001", 
              "force": true, 
              "volume_id": "521752a6-acf6-4b2d-bc7a-119f9148cd8c"
            }
          }
        }, 
        "id": "createSnapshot", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createSnapshot"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "201": {
            "examples": {
              "application/json": {
                "snapshot": {
                  "created_at": "2012-02-29T03:50:07Z", 
                  "display_description": "Daily backup", 
                  "display_name": "snap-001", 
                  "id": "3fbbcccf-d058-4502-8844-6feeffdf4cb5", 
                  "size": 30, 
                  "status": "available", 
                  "volume_id": "521752a6-acf6-4b2d-bc7a-119f9148cd8c"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create snapshot", 
        "tags": [
          "volume"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists snapshots.", 
        "examples": {}, 
        "id": "getSnapshotsSimple", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "snapshots": [
                  {
                    "created_at": "2012-02-29T03:50:07Z", 
                    "display_description": "Daily backup", 
                    "display_name": "snap-001", 
                    "id": "3fbbcccf-d058-4502-8844-6feeffdf4cb5", 
                    "size": 30, 
                    "status": "available", 
                    "volume_id": "521752a6-acf6-4b2d-bc7a-119f9148cd8c"
                  }, 
                  {
                    "created_at": "2012-03-19T01:52:47Z", 
                    "display_description": "Weekly backup", 
                    "display_name": "snap-002", 
                    "id": "e479997c-650b-40a4-9dfe-77655818b0d2", 
                    "size": 25, 
                    "status": "available", 
                    "volume_id": "76b8950a-8594-4e5b-8dce-0dfa9c696358"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List snapshots", 
        "tags": [
          "volume"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-snapshots/detail": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists details for all snapshots.", 
        "examples": {}, 
        "id": "getSnapshotsDetail", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "snapshots": [
                  {
                    "created_at": "2012-02-29T03:50:07Z", 
                    "display_description": "Daily backup", 
                    "display_name": "snap-001", 
                    "id": "3fbbcccf-d058-4502-8844-6feeffdf4cb5", 
                    "size": 30, 
                    "status": "available", 
                    "volume_id": "521752a6-acf6-4b2d-bc7a-119f9148cd8c"
                  }, 
                  {
                    "created_at": "2012-03-19T01:52:47Z", 
                    "display_description": "Weekly backup", 
                    "display_name": "snap-002", 
                    "id": "e479997c-650b-40a4-9dfe-77655818b0d2", 
                    "size": 25, 
                    "status": "available", 
                    "volume_id": "76b8950a-8594-4e5b-8dce-0dfa9c696358"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List details for snapshots", 
        "tags": [
          "volume"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-snapshots/{snapshot_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows information for a specified snapshot.", 
        "examples": {}, 
        "id": "getSnapshot", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier for a snapshot.", 
            "format": "", 
            "in": "path", 
            "name": "snapshot_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "snapshot": {
                  "created_at": "2012-02-29T03:50:07Z", 
                  "display_description": "Daily backup", 
                  "display_name": "snap-001", 
                  "id": "3fbbcccf-d058-4502-8844-6feeffdf4cb5", 
                  "size": 30, 
                  "status": "available", 
                  "volume_id": "521752a6-acf6-4b2d-bc7a-119f9148cd8c"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show snapshot", 
        "tags": [
          "volume"
        ]
      }, 
      {
        "consumes": [], 
        "description": "Deletes a specified snapshot from the account.\n\nThis operation is asynchronous. You must list snapshots repeatedly\nto determine whether the snapshot was deleted.", 
        "examples": {}, 
        "id": "deleteSnapshot", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier for a snapshot.", 
            "format": "", 
            "in": "path", 
            "name": "snapshot_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "examples": {
              "text/plain": "HTTP/1.1 202 Accepted\nContent-Type: text/html; charset=UTF-8\nContent-Length: 0\nDate: Mon, 05 Dec 2011 16:23:10 GMT\n"
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Delete snapshot", 
        "tags": [
          "volume"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-volume-types": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists volume types.", 
        "examples": {}, 
        "id": "getVolumeTypes", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "volume_types": [
                  {
                    "extra_specs": {
                      "capabilities": "gpu"
                    }, 
                    "id": "289da7f8-6440-407c-9fb4-7db01ec49164", 
                    "name": "vol-type-001"
                  }, 
                  {
                    "extra_specs": {}, 
                    "id": "96c3bda7-c82a-4f50-be73-ca7621794835", 
                    "name": "vol-type-002"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List volume types", 
        "tags": [
          "volume"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-volume-types/{volume_type_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows information for a specified volume type.", 
        "examples": {}, 
        "id": "getVolumeType", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier for a volume type.", 
            "format": "", 
            "in": "path", 
            "name": "volume_type_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "volume_type": {
                  "extra_specs": {
                    "capabilities": "gpu"
                  }, 
                  "id": "289da7f8-6440-407c-9fb4-7db01ec49164", 
                  "name": "vol-type-001"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show volume type", 
        "tags": [
          "volume"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-volumes": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a volume.", 
        "examples": {
          "application/json": {
            "volume": {
              "availability_zone": "us-east1", 
              "display_description": "Another volume.", 
              "display_name": "vol-001", 
              "metadata": {
                "contents": "junk"
              }, 
              "size": 30, 
              "volume_type": "289da7f8-6440-407c-9fb4-7db01ec49164"
            }
          }
        }, 
        "id": "createVolume", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createVolume"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "201": {
            "examples": {
              "application/json": {
                "volume": {
                  "attachments": [], 
                  "availability_zone": "us-east1", 
                  "created_at": "2012-02-14T20:53:07Z", 
                  "display_description": "Another volume.", 
                  "display_name": "vol-001", 
                  "id": "521752a6-acf6-4b2d-bc7a-119f9148cd8c", 
                  "metadata": {
                    "contents": "junk"
                  }, 
                  "size": 30, 
                  "snapshot_id": null, 
                  "status": "active", 
                  "volume_type": "289da7f8-6440-407c-9fb4-7db01ec49164"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create volume", 
        "tags": [
          "volume"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists the volumes associated with the account.", 
        "examples": {}, 
        "id": "getVolumesSimple", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "volumes": [
                  {
                    "attachments": [], 
                    "availability_zone": "us-east1", 
                    "created_at": "2012-02-14T20:53:07Z", 
                    "display_description": "Another volume.", 
                    "display_name": "vol-001", 
                    "id": "521752a6-acf6-4b2d-bc7a-119f9148cd8c", 
                    "metadata": {
                      "contents": "junk"
                    }, 
                    "size": 30, 
                    "snapshot_id": null, 
                    "volume_type": "289da7f8-6440-407c-9fb4-7db01ec49164"
                  }, 
                  {
                    "attachments": [], 
                    "availability_zone": "us-east2", 
                    "created_at": "2012-03-15T19:10:03Z", 
                    "display_description": "Yet another volume.", 
                    "display_name": "vol-002", 
                    "id": "76b8950a-8594-4e5b-8dce-0dfa9c696358", 
                    "metadata": {}, 
                    "size": 25, 
                    "snapshot_id": null, 
                    "volume_type": "96c3bda7-c82a-4f50-be73-ca7621794835"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List volumes", 
        "tags": [
          "volume"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-volumes/detail": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists details for all volumes.", 
        "examples": {}, 
        "id": "getVolumesDetail", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "volumes": [
                  {
                    "attachments": [], 
                    "availability_zone": "us-east1", 
                    "created_at": "2012-02-14T20:53:07Z", 
                    "display_description": "Another volume.", 
                    "display_name": "vol-001", 
                    "id": "521752a6-acf6-4b2d-bc7a-119f9148cd8c", 
                    "metadata": {
                      "contents": "junk"
                    }, 
                    "size": 30, 
                    "snapshot_id": null, 
                    "volume_type": "289da7f8-6440-407c-9fb4-7db01ec49164"
                  }, 
                  {
                    "attachments": [], 
                    "availability_zone": "us-east2", 
                    "created_at": "2012-03-15T19:10:03Z", 
                    "display_description": "Yet another volume.", 
                    "display_name": "vol-002", 
                    "id": "76b8950a-8594-4e5b-8dce-0dfa9c696358", 
                    "metadata": {}, 
                    "size": 25, 
                    "snapshot_id": null, 
                    "volume_type": "96c3bda7-c82a-4f50-be73-ca7621794835"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List details for volumes", 
        "tags": [
          "volume"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-volumes/{volume_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows information for a specified volume.", 
        "examples": {}, 
        "id": "getVolume", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier for a volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "volume": {
                  "attachments": [], 
                  "availability_zone": "us-east1", 
                  "created_at": "2012-02-14T20:53:07Z", 
                  "display_description": "Another volume.", 
                  "display_name": "vol-001", 
                  "id": "521752a6-acf6-4b2d-bc7a-119f9148cd8c", 
                  "metadata": {
                    "contents": "junk"
                  }, 
                  "size": 30, 
                  "snapshot_id": null, 
                  "status": "active", 
                  "volume_type": "289da7f8-6440-407c-9fb4-7db01ec49164"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show volume information", 
        "tags": [
          "volume"
        ]
      }, 
      {
        "consumes": [], 
        "description": "Deletes a specified volume.", 
        "examples": {}, 
        "id": "deleteVolume", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier for a volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "examples": {
              "text/plain": "HTTP/1.1 202 Accepted\nContent-Type: text/html; charset=UTF-8\nContent-Length: 0\nDate: Fri, 02 Dec 2011 00:39:32 GMT\n"
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Delete volume", 
        "tags": [
          "volume"
        ]
      }
    ], 
    "/v2/{tenant_id}/os-volumes_boot": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Starts a new instance from a bootable volume.\n\nPreconditions\n\n- You can attach a volume to a server with a status that is not\n  locked.\n\n- You can boot to a volume when its status is ``available`` .\n\n- You can boot to a volume when the volume was created as a bootable\n  volume.\n\nAsynchronous Postconditions\n\n- After successfully booting a server, the volume status changes to\n  ``in-use`` .\n\nTroubleshooting\n\n- If the volume status remains in ``available`` state, the request\n  failed. Ensure that you meet the preconditions and run the\n  request again. If the request fails again, investigate the server\n  and the volume status.", 
        "examples": {
          "application/json": {
            "server": {
              "block_device_mapping": [
                {
                  "boot_index": 0, 
                  "device_name": "vda", 
                  "source_type": "volume", 
                  "uuid": "7b4dc407-d515-4d96-9eba-cf86bd4a61f7", 
                  "volume_id": "7b4dc407-d515-4d96-9eba-cf86bd4a61f7"
                }
              ], 
              "flavorRef": "1", 
              "imageRef": "", 
              "max_count": 1, 
              "min_count": 1, 
              "name": "BFVServer"
            }
          }
        }, 
        "id": "createServer", 
        "method": "post", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ID of the image to use to boot from volume.", 
            "format": "", 
            "in": "path", 
            "name": "imageRef", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Name of the bootable volume.", 
            "format": "", 
            "in": "path", 
            "name": "display_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "A type of volume such as SSD.", 
            "format": "", 
            "in": "path", 
            "name": "volume_type", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "server": {
                  "OS-DCF:diskConfig": "MANUAL", 
                  "adminPass": "secretsecret", 
                  "id": "2eb966e3-0511-4a71-a05a-ca3fcf09eea9", 
                  "links": [
                    {
                      "href": "http://8.21.28.222:8774/v2/f9828a18c6484624b571e85728780ba8/servers/2eb966e3-0511-4a71-a05a-ca3fcf09eea9", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://8.21.28.222:8774/f9828a18c6484624b571e85728780ba8/servers/2eb966e3-0511-4a71-a05a-ca3fcf09eea9", 
                      "rel": "bookmark"
                    }
                  ], 
                  "security_groups": [
                    {
                      "name": "default"
                    }
                  ]
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create server", 
        "tags": [
          "os-volume_boot"
        ]
      }
    ], 
    "/v2/{tenant_id}/servers": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a server.", 
        "examples": {
          "application/json": {
            "server": {
              "flavorRef": "http://openstack.example.com/openstack/flavors/1", 
              "imageRef": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
              "metadata": {
                "My Server Name": "Apache1"
              }, 
              "name": "new-server-test", 
              "personality": [
                {
                  "contents": "ICAgICAgDQoiQSBjbG91ZCBkb2VzIG5vdCBrbm93IHdoeSBpdCBtb3ZlcyBpbiBqdXN0IHN1Y2ggYSBkaXJlY3Rpb24gYW5kIGF0IHN1Y2ggYSBzcGVlZC4uLkl0IGZlZWxzIGFuIGltcHVsc2lvbi4uLnRoaXMgaXMgdGhlIHBsYWNlIHRvIGdvIG5vdy4gQnV0IHRoZSBza3kga25vd3MgdGhlIHJlYXNvbnMgYW5kIHRoZSBwYXR0ZXJucyBiZWhpbmQgYWxsIGNsb3VkcywgYW5kIHlvdSB3aWxsIGtub3csIHRvbywgd2hlbiB5b3UgbGlmdCB5b3Vyc2VsZiBoaWdoIGVub3VnaCB0byBzZWUgYmV5b25kIGhvcml6b25zLiINCg0KLVJpY2hhcmQgQmFjaA==", 
                  "path": "/etc/banner.txt"
                }
              ]
            }
          }
        }, 
        "id": "createServer", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createServer"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "server": {
                  "OS-DCF:diskConfig": "AUTO", 
                  "adminPass": "CQH9gWzgkVno", 
                  "id": "324dfb7d-f4a9-419a-9a19-237df04b443b", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/servers/324dfb7d-f4a9-419a-9a19-237df04b443b", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/324dfb7d-f4a9-419a-9a19-237df04b443b", 
                      "rel": "bookmark"
                    }
                  ]
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create server", 
        "tags": [
          "disk-config"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a server with the configuration drive extended attribute.", 
        "examples": {
          "application/json": {
            "server": {
              "flavorRef": "http://openstack.example.com/openstack/flavors/1", 
              "imageRef": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
              "metadata": {
                "My Server Name": "Apache1"
              }, 
              "name": "new-server-test", 
              "personality": [
                {
                  "contents": "ICAgICAgDQoiQSBjbG91ZCBkb2VzIG5vdCBrbm93IHdoeSBpdCBtb3ZlcyBpbiBqdXN0IHN1Y2ggYSBkaXJlY3Rpb24gYW5kIGF0IHN1Y2ggYSBzcGVlZC4uLkl0IGZlZWxzIGFuIGltcHVsc2lvbi4uLnRoaXMgaXMgdGhlIHBsYWNlIHRvIGdvIG5vdy4gQnV0IHRoZSBza3kga25vd3MgdGhlIHJlYXNvbnMgYW5kIHRoZSBwYXR0ZXJucyBiZWhpbmQgYWxsIGNsb3VkcywgYW5kIHlvdSB3aWxsIGtub3csIHRvbywgd2hlbiB5b3UgbGlmdCB5b3Vyc2VsZiBoaWdoIGVub3VnaCB0byBzZWUgYmV5b25kIGhvcml6b25zLiINCg0KLVJpY2hhcmQgQmFjaA==", 
                  "path": "/etc/banner.txt"
                }
              ]
            }
          }
        }, 
        "id": "createServer", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createServer"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "server": {
                  "adminPass": "am5LKVsBVQ4s", 
                  "id": "58da039c-dc81-4d8f-8688-a2f819e2f750", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/servers/58da039c-dc81-4d8f-8688-a2f819e2f750", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/58da039c-dc81-4d8f-8688-a2f819e2f750", 
                      "rel": "bookmark"
                    }
                  ]
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create server with configuration drive", 
        "tags": [
          "createserverext"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a server with a block device mapping.", 
        "examples": {
          "application/json": {
            "server": {
              "block_device_mapping_v2": [
                {
                  "boot_index": "-1", 
                  "delete_on_termination": "True", 
                  "destination_type": "local", 
                  "device_name": "/dev/sdb1", 
                  "guest_format": "swap", 
                  "source_type": "blank"
                }, 
                {
                  "boot_index": "0", 
                  "destination_type": "volume", 
                  "device_name": "/dev/sda1", 
                  "source_type": "volume", 
                  "uuid": "fake-volume-id-1"
                }
              ], 
              "flavorRef": "http://openstack.example.com/openstack/flavors/1", 
              "imageRef": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
              "metadata": {
                "My Server Name": "Apache1"
              }, 
              "name": "new-server-test", 
              "personality": [
                {
                  "contents": "ICAgICAgDQoiQSBjbG91ZCBkb2VzIG5vdCBrbm93IHdoeSBpdCBtb3ZlcyBpbiBqdXN0IHN1Y2ggYSBkaXJlY3Rpb24gYW5kIGF0IHN1Y2ggYSBzcGVlZC4uLkl0IGZlZWxzIGFuIGltcHVsc2lvbi4uLnRoaXMgaXMgdGhlIHBsYWNlIHRvIGdvIG5vdy4gQnV0IHRoZSBza3kga25vd3MgdGhlIHJlYXNvbnMgYW5kIHRoZSBwYXR0ZXJucyBiZWhpbmQgYWxsIGNsb3VkcywgYW5kIHlvdSB3aWxsIGtub3csIHRvbywgd2hlbiB5b3UgbGlmdCB5b3Vyc2VsZiBoaWdoIGVub3VnaCB0byBzZWUgYmV5b25kIGhvcml6b25zLiINCg0KLVJpY2hhcmQgQmFjaA==", 
                  "path": "/etc/banner.txt"
                }
              ]
            }
          }
        }, 
        "id": "createServer", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createServer"
            }
          }, 
          {
            "description": "The tenant ID in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "server": {
                  "adminPass": "N4x7wFX6iN8D", 
                  "id": "babd1af0-4fc6-4529-b32f-aad69811ccf5", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/servers/babd1af0-4fc6-4529-b32f-aad69811ccf5", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/babd1af0-4fc6-4529-b32f-aad69811ccf5", 
                      "rel": "bookmark"
                    }
                  ]
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "422": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create server", 
        "tags": [
          "block-device-mapping"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists IDs, names, and links for all servers.", 
        "examples": {}, 
        "id": "listServers", 
        "method": "get", 
        "parameters": [
          {
            "description": "The tenant ID in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The date and time when the image or server last changed status.\n\nUse this query parameter to check for changes since a previous\nrequest rather than re-downloading and re-parsing the full status\nat each polling interval. If data has changed, only the items\nchanged since the specified time are returned in the response. If\ndata has not changed since the ``changes-since`` time, an empty\nlist is returned.\n\nFor example, issue a GET request against the following endpoint to\nlist all servers that have changed since Mon, 24 Jan 2015 17:08:00\nUTC:\n\nGET /v2/010101/servers?changes-since=2015-01-24T17:08:00ZTo enable you to keep track of changes, this filter also displays\nimages and servers that were deleted if the ``changes-since`` value\nspecifies a date in the last 30 days. Items deleted more than 30\ndays ago might be returned, but it is not guaranteed.\n\nThe date and time stamp format is ISO 8601 :\n\nCCYY-MM-DDThh:mm:ss\u00b1hh:mmThe ``\u00b1hh:mm`` value, if included, returns the time zone as an\noffset from UTC.\n\nFor example, ``2015-08-27T09:49:58-05:00`` .\n\nIf you omit the time zone, the UTC time zone is assumed.", 
            "format": "", 
            "in": "query", 
            "name": "changes-since", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the image.", 
            "format": "", 
            "in": "query", 
            "name": "image", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the specific flavor, which is a combination of memory,\ndisk size, and CPUs.", 
            "format": "", 
            "in": "query", 
            "name": "flavor", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The name of the server as a string. Can be queried with regular\nexpressions. The regular expression ``?name=bob`` returns both bob\nand bobb. If you must match on only bob, you can use a regular\nexpression that matches the syntax of the underlying database\nserver that is implemented for Compute, such as MySQL or\nPostgreSQL.", 
            "format": "regexp", 
            "in": "query", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the results by the status of the server. For example, you\ncan filter on ``ACTIVE`` .", 
            "format": "", 
            "in": "query", 
            "name": "status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Name of the host as a string.", 
            "format": "", 
            "in": "query", 
            "name": "host", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a specified page size of returned items from the query.\nReturns a number of items up to the specified limit value. Use the\n``limit`` parameter to make an initial limited request and use the\nID of the last-seen item from the response as the ``marker``\nparameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "Specifies the ID of the last-seen item. Use the ``limit`` parameter\nto make an initial limited request and use the ID of the last-seen\nitem from the response as the ``marker`` parameter value in a\nsubsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "servers": [
                  {
                    "id": "616fb98f-46ca-475e-917e-2563e5a8cd19", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/servers/616fb98f-46ca-475e-917e-2563e5a8cd19", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/servers/616fb98f-46ca-475e-917e-2563e5a8cd19", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "new-server-test"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "203": {
            "examples": {
              "application/json": {
                "servers": [
                  {
                    "id": "616fb98f-46ca-475e-917e-2563e5a8cd19", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/servers/616fb98f-46ca-475e-917e-2563e5a8cd19", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/servers/616fb98f-46ca-475e-917e-2563e5a8cd19", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "new-server-test"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List servers", 
        "tags": [
          "block-device-mapping"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a server with the OS-EXT-IPS-MAC:mac_addr extended\nattribute.", 
        "examples": {
          "application/json": {
            "server": {
              "flavorRef": "http://openstack.example.com/openstack/flavors/1", 
              "imageRef": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
              "metadata": {
                "My Server Name": "Apache1"
              }, 
              "name": "new-server-test", 
              "personality": [
                {
                  "contents": "ICAgICAgDQoiQSBjbG91ZCBkb2VzIG5vdCBrbm93IHdoeSBpdCBtb3ZlcyBpbiBqdXN0IHN1Y2ggYSBkaXJlY3Rpb24gYW5kIGF0IHN1Y2ggYSBzcGVlZC4uLkl0IGZlZWxzIGFuIGltcHVsc2lvbi4uLnRoaXMgaXMgdGhlIHBsYWNlIHRvIGdvIG5vdy4gQnV0IHRoZSBza3kga25vd3MgdGhlIHJlYXNvbnMgYW5kIHRoZSBwYXR0ZXJucyBiZWhpbmQgYWxsIGNsb3VkcywgYW5kIHlvdSB3aWxsIGtub3csIHRvbywgd2hlbiB5b3UgbGlmdCB5b3Vyc2VsZiBoaWdoIGVub3VnaCB0byBzZWUgYmV5b25kIGhvcml6b25zLiINCg0KLVJpY2hhcmQgQmFjaA==", 
                  "path": "/etc/banner.txt"
                }
              ]
            }
          }
        }, 
        "id": "createServer", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createServer"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "server": {
                  "adminPass": "zD7wDKTXiHsp", 
                  "id": "b44e5008-42f7-4048-b4c8-f40a29da88ba", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/servers/b44e5008-42f7-4048-b4c8-f40a29da88ba", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/b44e5008-42f7-4048-b4c8-f40a29da88ba", 
                      "rel": "bookmark"
                    }
                  ]
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create server with OS-EXT-IPS-MAC:mac_addr             extended attribute", 
        "tags": [
          "server-ext-ips-mac"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a server with scheduler hints that are passed directly to\nthe scheduler.", 
        "examples": {
          "application/json": {
            "os:scheduler_hints": {
              "hypervisor": "xen", 
              "near": "2b7c42eb-7736-4a0f-afab-f23969a35ada"
            }, 
            "server": {
              "flavorRef": "1", 
              "imageRef": "70a599e0-31e7-49b7-b260-868f441e862b", 
              "name": "new-server-test"
            }
          }
        }, 
        "id": "createServer", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createServer"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "server": {
                  "adminPass": "yjzytFHb7XHc", 
                  "id": "f8f4f3ce-f6e0-4e05-8f79-bf984fdfce45", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/servers/f8f4f3ce-f6e0-4e05-8f79-bf984fdfce45", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/f8f4f3ce-f6e0-4e05-8f79-bf984fdfce45", 
                      "rel": "bookmark"
                    }
                  ]
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create server with scheduler hints", 
        "tags": [
          "scheduler-hints"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates a server with an availability zone.", 
        "examples": {
          "application/json": {
            "server": {
              "availability_zone": "nova", 
              "flavorRef": "http://openstack.example.com/openstack/flavors/1", 
              "imageRef": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
              "metadata": {
                "My Server Name": "Apache1"
              }, 
              "name": "new-server-test", 
              "personality": [
                {
                  "contents": "ICAgICAgDQoiQSBjbG91ZCBkb2VzIG5vdCBrbm93IHdoeSBpdCBtb3ZlcyBpbiBqdXN0IHN1Y2ggYSBkaXJlY3Rpb24gYW5kIGF0IHN1Y2ggYSBzcGVlZC4uLkl0IGZlZWxzIGFuIGltcHVsc2lvbi4uLnRoaXMgaXMgdGhlIHBsYWNlIHRvIGdvIG5vdy4gQnV0IHRoZSBza3kga25vd3MgdGhlIHJlYXNvbnMgYW5kIHRoZSBwYXR0ZXJucyBiZWhpbmQgYWxsIGNsb3VkcywgYW5kIHlvdSB3aWxsIGtub3csIHRvbywgd2hlbiB5b3UgbGlmdCB5b3Vyc2VsZiBoaWdoIGVub3VnaCB0byBzZWUgYmV5b25kIGhvcml6b25zLiINCg0KLVJpY2hhcmQgQmFjaA==", 
                  "path": "/etc/banner.txt"
                }
              ]
            }
          }
        }, 
        "id": "addAvailabilityZone", 
        "method": "post", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "server": {
                  "adminPass": "k4pKvTfcA4gY", 
                  "id": "3e45fa2a-5204-466f-a684-c2a8e1c82d7f", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/servers/3e45fa2a-5204-466f-a684-c2a8e1c82d7f", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/3e45fa2a-5204-466f-a684-c2a8e1c82d7f", 
                      "rel": "bookmark"
                    }
                  ]
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create server with availability zone", 
        "tags": [
          "availability-zone"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists detailed extended server attribute information for all\nservers.", 
        "examples": {}, 
        "id": "extended_server_attributes_detail", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "servers": [
                  {
                    "OS-EXT-SRV-ATTR:host": "dd99797793774612b081a8be19bf721a", 
                    "OS-EXT-SRV-ATTR:hypervisor_hostname": "fake-mini", 
                    "OS-EXT-SRV-ATTR:instance_name": "instance-00000001", 
                    "accessIPv4": "", 
                    "accessIPv6": "", 
                    "addresses": {
                      "private": [
                        {
                          "addr": "192.168.0.3", 
                          "version": 4
                        }
                      ]
                    }, 
                    "created": "2012-11-15T19:27:05Z", 
                    "flavor": {
                      "id": "1", 
                      "links": [
                        {
                          "href": "http://openstack.example.com/openstack/flavors/1", 
                          "rel": "bookmark"
                        }
                      ]
                    }, 
                    "hostId": "146245c049213a54b8c2352751518fcb4c2befd1b942b45a5a705d35", 
                    "id": "e0c3563a-84ef-4d0b-bb80-23392cd23882", 
                    "image": {
                      "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                      "links": [
                        {
                          "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                          "rel": "bookmark"
                        }
                      ]
                    }, 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/servers/e0c3563a-84ef-4d0b-bb80-23392cd23882", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/servers/e0c3563a-84ef-4d0b-bb80-23392cd23882", 
                        "rel": "bookmark"
                      }
                    ], 
                    "metadata": {
                      "My Server Name": "Apache1"
                    }, 
                    "name": "new-server-test", 
                    "progress": 0, 
                    "status": "ACTIVE", 
                    "tenant_id": "openstack", 
                    "updated": "2012-11-15T19:27:05Z", 
                    "user_id": "fake"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List servers with extended server attributes", 
        "tags": [
          "extended-server-attributes"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates one or more servers with an optional reservation ID.", 
        "examples": {
          "application/json": {
            "server": {
              "flavorRef": "http://openstack.example.com/openstack/flavors/1", 
              "imageRef": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
              "max_count": "3", 
              "metadata": {
                "My Server Name": "Apache1"
              }, 
              "min_count": "2", 
              "name": "new-server-test", 
              "personality": [
                {
                  "contents": "ICAgICAgDQoiQSBjbG91ZCBkb2VzIG5vdCBrbm93IHdoeSBpdCBtb3ZlcyBpbiBqdXN0IHN1Y2ggYSBkaXJlY3Rpb24gYW5kIGF0IHN1Y2ggYSBzcGVlZC4uLkl0IGZlZWxzIGFuIGltcHVsc2lvbi4uLnRoaXMgaXMgdGhlIHBsYWNlIHRvIGdvIG5vdy4gQnV0IHRoZSBza3kga25vd3MgdGhlIHJlYXNvbnMgYW5kIHRoZSBwYXR0ZXJucyBiZWhpbmQgYWxsIGNsb3VkcywgYW5kIHlvdSB3aWxsIGtub3csIHRvbywgd2hlbiB5b3UgbGlmdCB5b3Vyc2VsZiBoaWdoIGVub3VnaCB0byBzZWUgYmV5b25kIGhvcml6b25zLiINCg0KLVJpY2hhcmQgQmFjaA==", 
                  "path": "/etc/banner.txt"
                }
              ], 
              "return_reservation_id": "True"
            }
          }
        }, 
        "id": "createServer", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createServer"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "reservation_id": "r-3fhpjulh"
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create multiple servers", 
        "tags": [
          "multi-server-create"
        ]
      }
    ], 
    "/v2/{tenant_id}/servers/detail": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists servers and shows their IPs by type. Type is either fixed or\nfloating.", 
        "examples": {}, 
        "id": "serversIPList", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "servers": [
                  {
                    "accessIPv4": "", 
                    "accessIPv6": "", 
                    "addresses": {
                      "private": [
                        {
                          "OS-EXT-IPS:type": "fixed", 
                          "addr": "192.168.0.3", 
                          "version": 4
                        }
                      ]
                    }, 
                    "created": "2013-02-07T18:40:59Z", 
                    "flavor": {
                      "id": "1", 
                      "links": [
                        {
                          "href": "http://openstack.example.com/openstack/flavors/1", 
                          "rel": "bookmark"
                        }
                      ]
                    }, 
                    "hostId": "fe866a4962fe3bdb6c2db9c8f7dcdb9555aca73387e72b5cb9c45bd3", 
                    "id": "76908712-653a-4d16-807e-d89d41435d24", 
                    "image": {
                      "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                      "links": [
                        {
                          "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                          "rel": "bookmark"
                        }
                      ]
                    }, 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/servers/76908712-653a-4d16-807e-d89d41435d24", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/servers/76908712-653a-4d16-807e-d89d41435d24", 
                        "rel": "bookmark"
                      }
                    ], 
                    "metadata": {
                      "My Server Name": "Apache1"
                    }, 
                    "name": "new-server-test", 
                    "progress": 0, 
                    "status": "ACTIVE", 
                    "tenant_id": "openstack", 
                    "updated": "2013-02-07T18:40:59Z", 
                    "user_id": "fake"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List servers with IP type", 
        "tags": [
          "ext-ips"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists servers with detailed config drive information.", 
        "examples": {}, 
        "id": "getServersDetailed", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "servers": [
                  {
                    "OS-DCF:diskConfig": "AUTO", 
                    "accessIPv4": "", 
                    "accessIPv6": "", 
                    "addresses": {
                      "private": [
                        {
                          "addr": "192.168.0.3", 
                          "version": 4
                        }
                      ]
                    }, 
                    "created": "2012-12-02T02:11:55Z", 
                    "flavor": {
                      "id": "1", 
                      "links": [
                        {
                          "href": "http://openstack.example.com/openstack/flavors/1", 
                          "rel": "bookmark"
                        }
                      ]
                    }, 
                    "hostId": "99428f32351a5d89d0f7727c6eec68c1777c545a0972aaac645508dc", 
                    "id": "05372e62-05b9-4ee2-9343-9a1fdf2a5fda", 
                    "image": {
                      "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                      "links": [
                        {
                          "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                          "rel": "bookmark"
                        }
                      ]
                    }, 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/servers/05372e62-05b9-4ee2-9343-9a1fdf2a5fda", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/servers/05372e62-05b9-4ee2-9343-9a1fdf2a5fda", 
                        "rel": "bookmark"
                      }
                    ], 
                    "metadata": {
                      "My Server Name": "Apache1"
                    }, 
                    "name": "new-server-test", 
                    "progress": 0, 
                    "status": "ACTIVE", 
                    "tenant_id": "openstack", 
                    "updated": "2012-12-02T02:11:56Z", 
                    "user_id": "fake"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List servers", 
        "tags": [
          "disk-config"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists details for servers, including their current availability\nzone.", 
        "examples": {}, 
        "id": "detailServers", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "servers": [
                  {
                    "OS-EXT-AZ:availability_zone": "nova", 
                    "accessIPv4": "", 
                    "accessIPv6": "", 
                    "addresses": {
                      "private": [
                        {
                          "addr": "192.168.0.3", 
                          "version": 4
                        }
                      ]
                    }, 
                    "created": "2013-01-30T13:26:51Z", 
                    "flavor": {
                      "id": "1", 
                      "links": [
                        {
                          "href": "http://openstack.example.com/openstack/flavors/1", 
                          "rel": "bookmark"
                        }
                      ]
                    }, 
                    "hostId": "60c988a84401fa15888a32833e5848e9caa99a45778310ba7b363165", 
                    "id": "3dbf5b00-dabc-41ff-b6ab-4409568fae9d", 
                    "image": {
                      "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                      "links": [
                        {
                          "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                          "rel": "bookmark"
                        }
                      ]
                    }, 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/servers/3dbf5b00-dabc-41ff-b6ab-4409568fae9d", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/servers/3dbf5b00-dabc-41ff-b6ab-4409568fae9d", 
                        "rel": "bookmark"
                      }
                    ], 
                    "metadata": {
                      "My Server Name": "Apache1"
                    }, 
                    "name": "new-server-test", 
                    "progress": 0, 
                    "status": "ACTIVE", 
                    "tenant_id": "openstack", 
                    "updated": "2013-01-30T13:26:52Z", 
                    "user_id": "fake"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List details for servers", 
        "tags": [
          "ext-az"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists the extended status attributes in the detailed response for\nall servers.\n\nThe extended status attributes are vm_state, power_state, and\ntask_state.", 
        "examples": {}, 
        "id": "os-extended-status-detail", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "servers": [
                  {
                    "OS-EXT-STS:power_state": 1, 
                    "OS-EXT-STS:task_state": null, 
                    "OS-EXT-STS:vm_state": "active", 
                    "accessIPv4": "", 
                    "accessIPv6": "", 
                    "addresses": {
                      "private": [
                        {
                          "addr": "192.168.0.3", 
                          "version": 4
                        }
                      ]
                    }, 
                    "created": "2012-12-05T07:34:10Z", 
                    "flavor": {
                      "id": "1", 
                      "links": [
                        {
                          "href": "http://openstack.example.com/openstack/flavors/1", 
                          "rel": "bookmark"
                        }
                      ]
                    }, 
                    "hostId": "585aa01f94eca692eff9f77ffe3eab866d8a819e97397e28c5c7df12", 
                    "id": "030758aa-5c41-41c6-8fb4-29d44eb96a85", 
                    "image": {
                      "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                      "links": [
                        {
                          "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                          "rel": "bookmark"
                        }
                      ]
                    }, 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/servers/030758aa-5c41-41c6-8fb4-29d44eb96a85", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/servers/030758aa-5c41-41c6-8fb4-29d44eb96a85", 
                        "rel": "bookmark"
                      }
                    ], 
                    "metadata": {
                      "My Server Name": "Apache1"
                    }, 
                    "name": "new-server-test", 
                    "progress": 0, 
                    "status": "ACTIVE", 
                    "tenant_id": "openstack", 
                    "updated": "2012-12-05T07:34:10Z", 
                    "user_id": "fake"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List extended status for servers", 
        "tags": [
          "extended-status"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists details for all servers. Includes the OS-EXT-IPS-MAC:mac_addr\nextended attribute.", 
        "examples": {}, 
        "id": "getServersDetailed", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The date and time when the image or server last changed status.\n\nUse this query parameter to check for changes since a previous\nrequest rather than re-downloading and re-parsing the full status\nat each polling interval. If data has changed, only the items\nchanged since the specified time are returned in the response. If\ndata has not changed since the ``changes-since`` time, an empty\nlist is returned.\n\nFor example, issue a GET request against the following endpoint to\nlist all servers that have changed since Mon, 24 Jan 2015 17:08:00\nUTC:\n\nGET /v2/010101/servers?changes-since=2015-01-24T17:08:00ZTo enable you to keep track of changes, this filter also displays\nimages and servers that were deleted if the ``changes-since`` value\nspecifies a date in the last 30 days. Items deleted more than 30\ndays ago might be returned, but it is not guaranteed.\n\nThe date and time stamp format is ISO 8601 :\n\nCCYY-MM-DDThh:mm:ss\u00b1hh:mmThe ``\u00b1hh:mm`` value, if included, returns the time zone as an\noffset from UTC.\n\nFor example, ``2015-08-27T09:49:58-05:00`` .\n\nIf you omit the time zone, the UTC time zone is assumed.", 
            "format": "", 
            "in": "query", 
            "name": "changes-since", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the image.", 
            "format": "", 
            "in": "query", 
            "name": "image", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the specific flavor, which is a combination of memory,\ndisk size, and CPUs.", 
            "format": "", 
            "in": "query", 
            "name": "flavor", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The name of the server as a string. Can be queried with regular\nexpressions. The regular expression ``?name=bob`` returns both bob\nand bobb. If you must match on only bob, you can use a regular\nexpression that matches the syntax of the underlying database\nserver that is implemented for Compute, such as MySQL or\nPostgreSQL.", 
            "format": "regexp", 
            "in": "query", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Filters the results by the status of the server. For example, you\ncan filter on ``ACTIVE`` .", 
            "format": "", 
            "in": "query", 
            "name": "status", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Name of the host as a string.", 
            "format": "", 
            "in": "query", 
            "name": "host", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "servers": [
                  {
                    "accessIPv4": "", 
                    "accessIPv6": "", 
                    "addresses": {
                      "private": [
                        {
                          "OS-EXT-IPS-MAC:mac_addr": "00:0c:29:e1:42:90", 
                          "addr": "192.168.0.3", 
                          "version": 4
                        }
                      ]
                    }, 
                    "created": "2013-02-07T18:40:59Z", 
                    "flavor": {
                      "id": "1", 
                      "links": [
                        {
                          "href": "http://openstack.example.com/openstack/flavors/1", 
                          "rel": "bookmark"
                        }
                      ]
                    }, 
                    "hostId": "fe866a4962fe3bdb6c2db9c8f7dcdb9555aca73387e72b5cb9c45bd3", 
                    "id": "76908712-653a-4d16-807e-d89d41435d24", 
                    "image": {
                      "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                      "links": [
                        {
                          "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                          "rel": "bookmark"
                        }
                      ]
                    }, 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/servers/76908712-653a-4d16-807e-d89d41435d24", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/servers/76908712-653a-4d16-807e-d89d41435d24", 
                        "rel": "bookmark"
                      }
                    ], 
                    "metadata": {
                      "My Server Name": "Apache1"
                    }, 
                    "name": "new-server-test", 
                    "progress": 0, 
                    "status": "ACTIVE", 
                    "tenant_id": "openstack", 
                    "updated": "2013-02-07T18:40:59Z", 
                    "user_id": "fake"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get server details", 
        "tags": [
          "server-ext-ips-mac"
        ]
      }
    ], 
    "/v2/{tenant_id}/servers/{server_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Updates a specified server.", 
        "examples": {
          "application/json": {
            "server": {
              "OS-DCF:diskConfig": "AUTO"
            }
          }
        }, 
        "id": "updateServer", 
        "method": "put", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "server": {
                  "OS-DCF:diskConfig": "AUTO", 
                  "accessIPv4": "", 
                  "accessIPv6": "", 
                  "addresses": {
                    "private": [
                      {
                        "addr": "192.168.0.3", 
                        "version": 4
                      }
                    ]
                  }, 
                  "created": "2012-12-02T02:11:57Z", 
                  "flavor": {
                    "id": "1", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/flavors/1", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "hostId": "6e84af987b4e7ec1c039b16d21f508f4a505672bd94fb0218b668d07", 
                  "id": "324dfb7d-f4a9-419a-9a19-237df04b443b", 
                  "image": {
                    "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/servers/324dfb7d-f4a9-419a-9a19-237df04b443b", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/324dfb7d-f4a9-419a-9a19-237df04b443b", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "My Server Name": "Apache1"
                  }, 
                  "name": "new-server-test", 
                  "progress": 0, 
                  "status": "ACTIVE", 
                  "tenant_id": "openstack", 
                  "updated": "2012-12-02T02:11:58Z", 
                  "user_id": "fake"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Update server", 
        "tags": [
          "disk-config"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows information for a specified server.", 
        "examples": {}, 
        "id": "getServer", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "server": {
                  "OS-DCF:diskConfig": "AUTO", 
                  "accessIPv4": "", 
                  "accessIPv6": "", 
                  "addresses": {
                    "private": [
                      {
                        "addr": "192.168.0.3", 
                        "version": 4
                      }
                    ]
                  }, 
                  "created": "2012-12-02T02:11:55Z", 
                  "flavor": {
                    "id": "1", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/flavors/1", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "hostId": "c949ab4256cea23b6089b710aa2df48bf6577ed915278b62e33ad8bb", 
                  "id": "5046e2f2-3b33-4041-b3cf-e085f73e78e7", 
                  "image": {
                    "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/servers/5046e2f2-3b33-4041-b3cf-e085f73e78e7", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/5046e2f2-3b33-4041-b3cf-e085f73e78e7", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "My Server Name": "Apache1"
                  }, 
                  "name": "new-server-test", 
                  "progress": 0, 
                  "status": "ACTIVE", 
                  "tenant_id": "openstack", 
                  "updated": "2012-12-02T02:11:55Z", 
                  "user_id": "fake"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show server information", 
        "tags": [
          "disk-config"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows information for a specified server, including its\navailability zone.", 
        "examples": {}, 
        "id": "showServer", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "server": {
                  "OS-EXT-AZ:availability_zone": "nova", 
                  "accessIPv4": "", 
                  "accessIPv6": "", 
                  "addresses": {
                    "private": [
                      {
                        "addr": "192.168.0.3", 
                        "version": 4
                      }
                    ]
                  }, 
                  "created": "2013-01-30T13:38:47Z", 
                  "flavor": {
                    "id": "1", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/flavors/1", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "hostId": "d38ea49a033b0efaf80c165de63f4805c886dfb94dc0fe731227eccb", 
                  "id": "fb7babfd-e1a1-4add-90e6-3558180983c7", 
                  "image": {
                    "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/servers/fb7babfd-e1a1-4add-90e6-3558180983c7", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/fb7babfd-e1a1-4add-90e6-3558180983c7", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "My Server Name": "Apache1"
                  }, 
                  "name": "new-server-test", 
                  "progress": 0, 
                  "status": "ACTIVE", 
                  "tenant_id": "openstack", 
                  "updated": "2013-01-30T13:38:49Z", 
                  "user_id": "fake"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show server", 
        "tags": [
          "ext-az"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows information for a specified server including the\nconfiguration drive extended attribute.", 
        "examples": {}, 
        "id": "getServer", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "server": {
                  "accessIPv4": "", 
                  "accessIPv6": "", 
                  "addresses": {
                    "private": [
                      {
                        "addr": "192.168.0.3", 
                        "version": 4
                      }
                    ]
                  }, 
                  "config_drive": "", 
                  "created": "2013-02-04T13:17:50Z", 
                  "flavor": {
                    "id": "1", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/flavors/1", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "hostId": "8725fb615b191d8249a40f3e90d1efde88d914412e4edb2719176afd", 
                  "id": "dd3b0715-a3fc-43d8-bbd2-2720beb226fb", 
                  "image": {
                    "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/servers/dd3b0715-a3fc-43d8-bbd2-2720beb226fb", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/dd3b0715-a3fc-43d8-bbd2-2720beb226fb", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "My Server Name": "Apache1"
                  }, 
                  "name": "new-server-test", 
                  "progress": 0, 
                  "status": "ACTIVE", 
                  "tenant_id": "openstack", 
                  "updated": "2013-02-04T13:17:51Z", 
                  "user_id": "fake"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get server information with configuration drive", 
        "tags": [
          "createserverext"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows the extended status attributes in the response for a\nspecified server.\n\nThe extended status attributes are vm_state, power_state, and\ntask_state.", 
        "examples": {}, 
        "id": "os-extended-status-show", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "server": {
                  "OS-EXT-STS:power_state": 1, 
                  "OS-EXT-STS:task_state": null, 
                  "OS-EXT-STS:vm_state": "active", 
                  "accessIPv4": "", 
                  "accessIPv6": "", 
                  "addresses": {
                    "private": [
                      {
                        "addr": "192.168.0.3", 
                        "version": 4
                      }
                    ]
                  }, 
                  "created": "2013-02-07T19:35:09Z", 
                  "flavor": {
                    "id": "1", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/flavors/1", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "hostId": "570eff4776ab310707d11d181037337197086998a8b3305c90bf87c8", 
                  "id": "ecb5e433-fa75-4db2-af3d-a29ae8618edc", 
                  "image": {
                    "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/servers/ecb5e433-fa75-4db2-af3d-a29ae8618edc", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/ecb5e433-fa75-4db2-af3d-a29ae8618edc", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "My Server Name": "Apache1"
                  }, 
                  "name": "new-server-test", 
                  "progress": 0, 
                  "status": "ACTIVE", 
                  "tenant_id": "openstack", 
                  "updated": "2013-02-07T19:35:10Z", 
                  "user_id": "fake"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show server extended status", 
        "tags": [
          "extended-status"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows information for a specified server. Includes the OS-EXT-IPS-\nMAC:mac_addr extended attribute.", 
        "examples": {}, 
        "id": "getServer", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "server": {
                  "accessIPv4": "", 
                  "accessIPv6": "", 
                  "addresses": {
                    "private": [
                      {
                        "OS-EXT-IPS-MAC:mac_addr": "00:0c:29:e1:42:90", 
                        "addr": "192.168.0.3", 
                        "version": 4
                      }
                    ]
                  }, 
                  "created": "2013-02-07T18:46:28Z", 
                  "flavor": {
                    "id": "1", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/flavors/1", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "hostId": "4e2003eddbfdb1280c2618d04090bcdd6773203b8da8347af0b2723d", 
                  "id": "dc7281f9-ee47-40b9-9950-9f73e7961caa", 
                  "image": {
                    "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/servers/dc7281f9-ee47-40b9-9950-9f73e7961caa", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/dc7281f9-ee47-40b9-9950-9f73e7961caa", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "My Server Name": "Apache1"
                  }, 
                  "name": "new-server-test", 
                  "progress": 0, 
                  "status": "ACTIVE", 
                  "tenant_id": "openstack", 
                  "updated": "2013-02-07T18:46:29Z", 
                  "user_id": "fake"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show server information", 
        "tags": [
          "server-ext-ips-mac"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows extended server attributes for a specified server.", 
        "examples": {}, 
        "id": "extended_server_attributes_show", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "server": {
                  "OS-EXT-SRV-ATTR:host": "1169a68456af48238da47b1d5957a714", 
                  "OS-EXT-SRV-ATTR:hypervisor_hostname": "fake-mini", 
                  "OS-EXT-SRV-ATTR:instance_name": "instance-00000001", 
                  "accessIPv4": "", 
                  "accessIPv6": "", 
                  "addresses": {
                    "private": [
                      {
                        "addr": "192.168.0.3", 
                        "version": 4
                      }
                    ]
                  }, 
                  "created": "2012-11-15T19:27:04Z", 
                  "flavor": {
                    "id": "1", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/flavors/1", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "hostId": "2dfce43c41dd288cfac3a5b4251742b3bd2b37c12eb5927e757d9b4c", 
                  "id": "1fc2392e-5727-46af-bc21-317a4a3eb04c", 
                  "image": {
                    "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/servers/1fc2392e-5727-46af-bc21-317a4a3eb04c", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/1fc2392e-5727-46af-bc21-317a4a3eb04c", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "My Server Name": "Apache1"
                  }, 
                  "name": "new-server-test", 
                  "progress": 0, 
                  "status": "ACTIVE", 
                  "tenant_id": "openstack", 
                  "updated": "2012-11-15T19:27:04Z", 
                  "user_id": "fake"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show extended server attributes", 
        "tags": [
          "extended-server-attributes"
        ]
      }
    ], 
    "/v2/{tenant_id}/servers/{server_id}/action": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Gets a console for a server instance.", 
        "examples": {
          "application/json": {
            "os-getVNCConsole": {
              "type": "novnc"
            }
          }
        }, 
        "id": "getConsole", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/getConsole"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "console": {
                  "type": "novnc", 
                  "url": "http://example.com:6080/vnc_auto.html?token=f9906a48-b71e-4f18-baca-c987da3ebdb3&title=dafa(75ecef58-3b8e-4659-ab3b-5501454188e9)"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get console", 
        "tags": [
          "consoles"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shelves a running server.\n\nAll associated data and resources are kept; however, anything still\nin memory is not retained. To restore a shelved instance, use the\n``unshelve`` action. To remove a shelved instance, use the\n``shelveOffload`` action.\n\nPreconditions\n\n- The server status must be ``ACTIVE`` , ``SHUTOFF`` , ``PAUSED`` ,\n  or ``SUSPENDED`` .\n\n- If the specified server is locked, you must have administrator\n  privileges to shelve the server.\n\nAsynchronous Postconditions\n\n- After successfully shelving a server, its status changes to\n  ``SHELVED`` and the image status is ``ACTIVE`` . The server\n  instance data appears on the compute node that the Compute\n  service manages.\n\n- The Compute service automatically deletes the instance on compute\n  nodes and changes the server status to ``SHELVED_OFFLOADED`` if\n  the server is booted from volumes or ``shelved_offload_time`` is\n  set to 0.\n\nTroubleshooting\n\n- If the server status does not change to ``SHELVED`` or\n  ``SHELVED_OFFLOADED`` , the shelve operation failed. Ensure that\n  you meet the preconditions and run the request again. If the\n  request fails again, investigate whether another operation is\n  running that causes a race condition.", 
        "examples": {
          "application/json": {
            "shelve": null
          }
        }, 
        "id": "shelve", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/shelve"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Shelve server", 
        "tags": [
          "server-shelve"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Removes an instance from the server.\n\nData and resource associations are deleted. If an instance is no\nlonger needed, you can remove that instance from the hypervisor to\nminimize resource usage.\n\nPreconditions\n\n- The server status must be ``SHELVED`` .\n\n- If the specified server is locked, you must have administrator\n  privileges to shelve-offload the server.\n\nAsynchronous Postconditions\n\n- After you successfully shelve-offload a server, the status changes\n  to ``SHELVED_OFFLOAD`` . The server instance data appears on the\n  compute node.\n\nTroubleshooting\n\n- If the server status does not change to ``SHELVEDED_OFFLOADED`` ,\n  the shelve-offload operation failed. Ensure that you meet the\n  preconditions and run the request again. If the request fails\n  again, investigate whether another operation is running that\n  causes a race condition.", 
        "examples": {
          "application/json": {
            "shelveOffload": null
          }
        }, 
        "id": "shelveOffload", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/shelveOffload"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Remove a shelved instance", 
        "tags": [
          "server-shelve"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Restores a shelved server.\n\nPreconditions\n\n- The server status must be ``SHELVED`` or ``SHELVED_OFFLOADED`` .\n\n- If the specified server is locked, you must have administrator\n  privileges to unshelve the server.\n\nAsynchronous Postconditions\n\n- After successfully shelving a server, the status changes to\n  ``ACTIVE`` . The server appears on the compute node.\n\n- The shelved image is deleted from the list of images returned by\n  an API call.\n\nTroubleshooting\n\n- If the server status does not change to ``ACTIVE`` , the unshelve\n  operation failed. Ensure that you meet the preconditions and run\n  the request again. If the request fails again, investigate\n  whether another operation is running that causes a race\n  condition.", 
        "examples": {
          "application/json": {
            "unshelve": null
          }
        }, 
        "id": "unshelve", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/unshelve"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Restore shelved server", 
        "tags": [
          "server-shelve"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Starts a stopped server and changes its status to ``ACTIVE`` .\n\nPreconditions\n\n- The server status must be ``SHUTOFF`` .\n\n- If the specified server is locked, you must have administrator\n  privileges to start the server.\n\nAsynchronous Postconditions\n\n- After you successfully start a server, its status changes to\n  ``ACTIVE`` . The server appears on the compute node that the\n  Compute service manages.\n\nTroubleshooting\n\n- If the server status does not change to ``ACTIVE`` , the start\n  operation failed. Ensure that you meet the preconditions and run\n  the request again. If the request fails again, investigate\n  whether another operation is running that causes a race\n  condition.", 
        "examples": {
          "application/json": {
            "os-start": null
          }
        }, 
        "id": "start", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/start"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Start server", 
        "tags": [
          "server-start-stop"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Stops a running server and changes its status to ``SHUTOFF`` .\n\nPreconditions\n\n- The server status must be ``ACTIVE`` or ``ERROR`` .\n\n- If the specified server is locked, you must have administrator\n  privileges to stop the server.\n\nAsynchronous Postconditions\n\n- After you successfully stop a server, its status changes to\n  ``SHUTOFF`` . The server instance data appears only on the\n  compute node that Compute service manages.", 
        "examples": {
          "application/json": {
            "os-stop": null
          }
        }, 
        "id": "stop", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/stop"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Stop server", 
        "tags": [
          "server-start-stop"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Pauses a server. Changes its status to PAUSED.\n\nThis operation stores the state of the VM in RAM. A paused instance\ncontinues to run in a frozen state.", 
        "examples": {
          "application/json": {
            "pause": null
          }
        }, 
        "id": "pause", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/pause"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Pause server", 
        "tags": [
          "admin-actions"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Unpauses a PAUSED server. Changes its status to ACTIVE.", 
        "examples": {
          "application/json": {
            "unpause": null
          }
        }, 
        "id": "unpause", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/unpause"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Unpause server", 
        "tags": [
          "admin-actions"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Suspends a server. Changes its status to SUSPENDED.\n\nThis operation stores the VM state on disk, writes all memory to\ndisk, and stops the virtual machine.\n\nAdministrative users might suspend an infrequently used instance or\nsuspend an instance to perform system maintenance. Suspending an\ninstance is similar to placing a device in hibernation; memory and\nvCPUs become available to create other instances.", 
        "examples": {
          "application/json": {
            "suspend": null
          }
        }, 
        "id": "suspend", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/suspend"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Suspend server", 
        "tags": [
          "admin-actions"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Resumes a SUSPENDED server. Changes its status to ACTIVE.", 
        "examples": {
          "application/json": {
            "resume": null
          }
        }, 
        "id": "resume", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/resume"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Resume server", 
        "tags": [
          "admin-actions"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Migrates a server to a host. The scheduler chooses the host.", 
        "examples": {
          "application/json": {
            "migrate": null
          }
        }, 
        "id": "migrate", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/migrate"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Migrate server", 
        "tags": [
          "admin-actions"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Resets networking on a server.", 
        "examples": {
          "application/json": {
            "resetNetwork": null
          }
        }, 
        "id": "resetNetwork", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/resetNetwork"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Reset networking on server", 
        "tags": [
          "admin-actions"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Injects network information into a server.", 
        "examples": {
          "application/json": {
            "injectNetworkInfo": null
          }
        }, 
        "id": "injectNetworkInfo", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/injectNetworkInfo"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Inject network information", 
        "tags": [
          "admin-actions"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Locks a server.", 
        "examples": {
          "application/json": {
            "lock": null
          }
        }, 
        "id": "lock", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/lock"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Lock server", 
        "tags": [
          "admin-actions"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Unlocks a server.", 
        "examples": {
          "application/json": {
            "unlock": null
          }
        }, 
        "id": "unlock", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/unlock"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Unlock server", 
        "tags": [
          "admin-actions"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Backs up a server instance.", 
        "examples": {
          "application/json": {
            "createBackup": {
              "backup_type": "daily", 
              "name": "Backup 1", 
              "rotation": 1
            }
          }
        }, 
        "id": "createBackup", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createBackup"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create server backup", 
        "tags": [
          "admin-actions"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Live-migrates a server to a new host without rebooting.", 
        "examples": {
          "application/json": {
            "os-migrateLive": {
              "block_migration": false, 
              "disk_over_commit": false, 
              "host": "0443e9a1254044d8b99f35eace132080"
            }
          }
        }, 
        "id": "os-migrateLive", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/os-migrateLive"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Live-migrate server", 
        "tags": [
          "admin-actions"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Resets the state of a server to a specified state.", 
        "examples": {
          "application/json": {
            "os-resetState": {
              "state": "active"
            }
          }
        }, 
        "id": "os-resetState", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/os-resetState"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Reset server state", 
        "tags": [
          "admin-actions"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Evacuates a server from failed host.", 
        "examples": {
          "application/json": {
            "evacuate": {
              "adminPass": "MySecretPass", 
              "host": "TargetHost", 
              "onSharedStorage": "True"
            }
          }
        }, 
        "id": "evacuate", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/evacuate"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "adminPass": "MySecretPass"
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Evacuate server", 
        "tags": [
          "admin-actions"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Adds a floating IP address to an instance.\n\nYou can optionally associate a fixed IP address with the floating\nIP address.", 
        "examples": {
          "application/json": {
            "addFloatingIp": {
              "address": "172.24.4.225", 
              "fixed_address": "166.78.185.201"
            }
          }
        }, 
        "id": "addFloatingIP", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/addFloatingIP"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Add floating IP address", 
        "tags": [
          "admin-actions"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows the type of IP assigned to a specified server, either fixed\nor floating.", 
        "examples": {}, 
        "id": "serverIPDetails", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "server": {
                  "accessIPv4": "", 
                  "accessIPv6": "", 
                  "addresses": {
                    "private": [
                      {
                        "OS-EXT-IPS:type": "fixed", 
                        "addr": "192.168.0.3", 
                        "version": 4
                      }
                    ]
                  }, 
                  "created": "2013-02-07T18:46:28Z", 
                  "flavor": {
                    "id": "1", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/flavors/1", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "hostId": "4e2003eddbfdb1280c2618d04090bcdd6773203b8da8347af0b2723d", 
                  "id": "dc7281f9-ee47-40b9-9950-9f73e7961caa", 
                  "image": {
                    "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/servers/dc7281f9-ee47-40b9-9950-9f73e7961caa", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/dc7281f9-ee47-40b9-9950-9f73e7961caa", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "My Server Name": "Apache1"
                  }, 
                  "name": "new-server-test", 
                  "progress": 0, 
                  "status": "ACTIVE", 
                  "tenant_id": "openstack", 
                  "updated": "2013-02-07T18:46:29Z", 
                  "user_id": "fake"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show IP type", 
        "tags": [
          "ext-ips"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Resizes a server.", 
        "examples": {
          "application/json": {
            "resize": {
              "OS-DCF:diskConfig": "AUTO", 
              "flavorRef": "3"
            }
          }
        }, 
        "id": "resize", 
        "method": "post", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Resize server", 
        "tags": [
          "disk-config"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Rebuilds a specified server.", 
        "examples": {
          "application/json": {
            "rebuild": {
              "OS-DCF:diskConfig": "AUTO", 
              "imageRef": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b"
            }
          }
        }, 
        "id": "rebuild", 
        "method": "post", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "server": {
                  "OS-DCF:diskConfig": "AUTO", 
                  "accessIPv4": "", 
                  "accessIPv6": "", 
                  "addresses": {
                    "private": [
                      {
                        "addr": "192.168.0.3", 
                        "version": 4
                      }
                    ]
                  }, 
                  "adminPass": "NBjMaJoFL4EF", 
                  "created": "2012-12-02T02:11:56Z", 
                  "flavor": {
                    "id": "1", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/flavors/1", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "hostId": "c076393ad900d62c4805a42df10d9b364f629842681c00cce035487f", 
                  "id": "63a8aa13-60fe-41c4-b079-77f6fdf3c841", 
                  "image": {
                    "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                    "links": [
                      {
                        "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                        "rel": "bookmark"
                      }
                    ]
                  }, 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/servers/63a8aa13-60fe-41c4-b079-77f6fdf3c841", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/63a8aa13-60fe-41c4-b079-77f6fdf3c841", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "My Server Name": "Apache1"
                  }, 
                  "name": "new-server-test", 
                  "progress": 0, 
                  "status": "ACTIVE", 
                  "tenant_id": "openstack", 
                  "updated": "2012-12-02T02:11:56Z", 
                  "user_id": "fake"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Rebuild server", 
        "tags": [
          "disk-config"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Puts a server in rescue mode. Changes status to ``RESCUE`` .\n\nIf you specify the ``rescue_image_ref`` extended attribute, the\nspecified image is used to rescue the instance. If you omit an\nimage reference, the base image reference is used by default.\n\nAsynchronous Postconditions\n\n- After you successfully unrescue a server and make a\n  ``GET/v2.1/\u200b{tenant_id}\u200b/servers/\u200b{server_id}\u200b`` request, its\n  status changes to ``ACTIVE`` .", 
        "examples": {
          "application/json": {
            "rescue": {
              "adminPass": "MySecretPass", 
              "rescue_image_ref": "70a599e0-31e7-49b7-b260-868f441e862b"
            }
          }
        }, 
        "id": "rescue", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/rescue"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "adminPass": "MySecretPass"
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Rescue server", 
        "tags": [
          "rescue"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Unrescues a server. Changes status to ``ACTIVE`` .\n\nPreconditions\n\n- The specified server must exist.\n\n- You can only unrescue a server when its status is ``RESCUE`` .\n\nAsynchronous Postconditions\n\n- After you successfully unrescue a server and make a\n  ``GET/v2.1/\u200b{tenant_id}\u200b/servers/\u200b{server_id}\u200b`` request, its\n  status changes to ``ACTIVE`` .", 
        "examples": {
          "application/json": {
            "unrescue": null
          }
        }, 
        "id": "unrescue", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/unrescue"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Unrescue server", 
        "tags": [
          "rescue"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Gets console output for a server instance.", 
        "examples": {
          "application/json": {
            "os-getConsoleOutput": {
              "length": 50
            }
          }
        }, 
        "id": "getConsoleOutput", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/getConsoleOutput"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "output": "FAKE CONSOLE OUTPUT\nANOTHER\nLAST LINE"
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get console output for an instance", 
        "tags": [
          "console-output"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Force-deletes a server.", 
        "examples": {
          "application/json": {
            "forceDelete": null
          }
        }, 
        "id": "forceDelete", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/forceDelete"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Force delete server", 
        "tags": [
          "deferred-delete"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Restores a deleted server.", 
        "examples": {
          "application/json": {
            "restore": null
          }
        }, 
        "id": "restore", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/restore"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Restore server", 
        "tags": [
          "deferred-delete"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Adds a floating IP address to an instance.", 
        "examples": {
          "application/json": {
            "addFloatingIp": {
              "address": "10.10.10.1"
            }
          }
        }, 
        "id": "AddFloatingIP", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/AddFloatingIP"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Add floating IP", 
        "tags": [
          "floating-ips"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Removes a floating IP from an instance.", 
        "examples": {
          "application/json": {
            "removeFloatingIp": {
              "address": "10.10.10.1"
            }
          }
        }, 
        "id": "RemoveFloatingIP", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/RemoveFloatingIP"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Remove floating IP", 
        "tags": [
          "floating-ips"
        ]
      }
    ], 
    "/v2/{tenant_id}/servers/{server_id}/detail": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists details for all servers including the configuration drive\nextended attribute.", 
        "examples": {}, 
        "id": "getServersDetailed", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "servers": [
                  {
                    "accessIPv4": "", 
                    "accessIPv6": "", 
                    "addresses": {
                      "private": [
                        {
                          "addr": "192.168.0.3", 
                          "version": 4
                        }
                      ]
                    }, 
                    "config_drive": "", 
                    "created": "2013-02-04T13:21:44Z", 
                    "flavor": {
                      "id": "1", 
                      "links": [
                        {
                          "href": "http://openstack.example.com/openstack/flavors/1", 
                          "rel": "bookmark"
                        }
                      ]
                    }, 
                    "hostId": "76e154b0015e25fad65a7ab0c35a86dd79acfa8312075a6534ef6176", 
                    "id": "720e688f-5ec8-4d4f-b585-dbd1a89ceeb0", 
                    "image": {
                      "id": "70a599e0-31e7-49b7-b260-868f441e862b", 
                      "links": [
                        {
                          "href": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
                          "rel": "bookmark"
                        }
                      ]
                    }, 
                    "links": [
                      {
                        "href": "http://openstack.example.com/v2/openstack/servers/720e688f-5ec8-4d4f-b585-dbd1a89ceeb0", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://openstack.example.com/openstack/servers/720e688f-5ec8-4d4f-b585-dbd1a89ceeb0", 
                        "rel": "bookmark"
                      }
                    ], 
                    "metadata": {
                      "My Server Name": "Apache1"
                    }, 
                    "name": "new-server-test", 
                    "progress": 0, 
                    "status": "ACTIVE", 
                    "tenant_id": "openstack", 
                    "updated": "2013-02-04T13:21:44Z", 
                    "user_id": "fake"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get server details with configuration drive", 
        "tags": [
          "createserverext"
        ]
      }
    ], 
    "/v2/{tenant_id}/servers/{server_id}/diagnostics": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Gets basic usage data for a specified server.", 
        "examples": {}, 
        "id": "getDiagnostics", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "cpu0_time": 195230000000, 
                "memory": 524288, 
                "memory-actual": 524288, 
                "memory-rss": 243188, 
                "vda_errors": -1, 
                "vda_read": 4447232, 
                "vda_read_req": 291, 
                "vda_write": 4347904, 
                "vda_write_req": 3523, 
                "vnet0_rx": 363725, 
                "vnet0_rx_drop": 0, 
                "vnet0_rx_errors": 0, 
                "vnet0_rx_packets": 1423, 
                "vnet0_tx": 364840, 
                "vnet0_tx_drop": 0, 
                "vnet0_tx_errors": 0, 
                "vnet0_tx_packets": 1259
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get server diagnostics", 
        "tags": [
          "diagnostics"
        ]
      }
    ], 
    "/v2/{tenant_id}/servers/{server_id}/os-baremetal-nodes": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Adds a bare metal node to a specified server.\n\nPreconditions\n\n- You can add a bare metal node to a server with an ``ACTIVE`` ,\n  ``PAUSED`` , ``SHUTOFF`` , ``VERIFY_RESIZE`` , or\n  ``SOFT_DELETED`` status.\n\n- You can add a bare metal node to a server with a status that is\n  not locked.", 
        "examples": {
          "application/json": {
            "node": {
              "cpus": 8, 
              "local_gb": 128, 
              "memory_mb": 8192, 
              "pm_address": "10.1.2.3", 
              "pm_password": "pm_pass", 
              "pm_user": "pm_user", 
              "prov_mac_address": "12:34:56:78:90:ab", 
              "service_host": "host", 
              "terminal_port": 8000
            }
          }
        }, 
        "id": "addBaremetalNode", 
        "method": "post", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "node": {
                  "cpus": 8, 
                  "id": 1, 
                  "instance_uuid": null, 
                  "interfaces": [
                    {
                      "address": "12:34:56:78:90:ab", 
                      "datapath_id": null, 
                      "id": 1, 
                      "port_no": null
                    }
                  ], 
                  "local_gb": 128, 
                  "memory_mb": 8192, 
                  "pm_address": "10.1.2.3", 
                  "pm_user": "pm_user", 
                  "pxe_config_path": null, 
                  "service_host": "host", 
                  "task_state": null, 
                  "terminal_port": 8000, 
                  "updated_at": null, 
                  "uuid": "0a130464-bccc-4e36-b9d3-9a8c98e636ae"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "409": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Add bare metal node", 
        "tags": [
          "baremetal-ext-status"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists the bare metal nodes that are associated with a specified\nserver.", 
        "examples": {}, 
        "id": "listBaremetalNodes", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "nodes": [
                  {
                    "cpus": 8, 
                    "id": 1, 
                    "instance_uuid": null, 
                    "interfaces": [
                      {
                        "address": "aa:aa:aa:aa:aa:aa", 
                        "datapath_id": null, 
                        "id": 1, 
                        "port_no": null
                      }
                    ], 
                    "local_gb": 128, 
                    "memory_mb": 8192, 
                    "pm_address": "10.1.2.3", 
                    "pm_user": "pm_user", 
                    "pxe_config_path": null, 
                    "service_host": "host", 
                    "task_state": null, 
                    "terminal_port": 8000, 
                    "updated_at": null, 
                    "uuid": "6fae68da-108b-4a9d-87c4-88831ee1241b"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "409": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List bare metal nodes", 
        "tags": [
          "baremetal-ext-status"
        ]
      }
    ], 
    "/v2/{tenant_id}/servers/{server_id}/os-baremetal-nodes/action": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Adds an interface to a bare metal node that is associated with a\nspecified server.", 
        "examples": {
          "application/json": {
            "add_interface": {
              "address": "aa:aa:aa:aa:aa:aa"
            }
          }
        }, 
        "id": "addInterfaceToBaremetalNode", 
        "method": "post", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "interface": {
                  "address": "aa:aa:aa:aa:aa:aa", 
                  "datapath_id": null, 
                  "id": 1, 
                  "port_no": null
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "409": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Add interface to bare metal node", 
        "tags": [
          "baremetal-ext-status"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Deletes an interface from a bare metal node that is associated with\na specified server.", 
        "examples": {
          "application/json": {
            "remove_interface": {
              "address": "aa:aa:aa:aa:aa:aa"
            }
          }
        }, 
        "id": "deleteInterfaceFromBaremetalNode", 
        "method": "post", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "409": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Delete interface from bare metal node", 
        "tags": [
          "baremetal-ext-status"
        ]
      }
    ], 
    "/v2/{tenant_id}/servers/{server_id}/os-baremetal-nodes/{node_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows details for a specified bare metal node.\n\nPreconditions\n\n- The specified bare metal node must be associated with the server.", 
        "examples": {}, 
        "id": "showBaremetalNodeDetails", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Node ID.", 
            "format": "", 
            "in": "path", 
            "name": "node_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "node": {
                  "cpus": 8, 
                  "id": 1, 
                  "instance_uuid": null, 
                  "interfaces": [
                    {
                      "address": "aa:aa:aa:aa:aa:aa", 
                      "datapath_id": null, 
                      "id": 1, 
                      "port_no": null
                    }
                  ], 
                  "local_gb": 128, 
                  "memory_mb": 8192, 
                  "pm_address": "10.1.2.3", 
                  "pm_user": "pm_user", 
                  "pxe_config_path": null, 
                  "service_host": "host", 
                  "task_state": null, 
                  "terminal_port": 8000, 
                  "updated_at": null, 
                  "uuid": "c862b836-c7c1-4f7f-8081-6766fa9cf38b"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "409": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show bare metal node details", 
        "tags": [
          "baremetal-ext-status"
        ]
      }
    ], 
    "/v2/{tenant_id}/servers/{server_id}/os-instance-actions": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists history of successful actions for a specified server.\nDeployers set permissions for this request in the policy.json file.\nBy default, all users can list actions.", 
        "examples": {}, 
        "id": "listActions", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server instance for which you want to list actions.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "instanceActions": [
                  {
                    "action": "resize", 
                    "instance_uuid": "b48316c5-71e8-45e4-9884-6c78055b9b13", 
                    "message": "", 
                    "project_id": "842", 
                    "request_id": "req-25517360-b757-47d3-be45-0e8d2a01b36a", 
                    "start_time": "2012-12-05 01:00:00.000000", 
                    "user_id": "789"
                  }, 
                  {
                    "action": "reboot", 
                    "instance_uuid": "b48316c5-71e8-45e4-9884-6c78055b9b13", 
                    "message": "", 
                    "project_id": "147", 
                    "request_id": "req-3293a3f1-b44c-4609-b8d2-d81b105636b8", 
                    "start_time": "2012-12-05 00:00:00.000000", 
                    "user_id": "789"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List server actions", 
        "tags": [
          "instance-actions"
        ]
      }
    ], 
    "/v2/{tenant_id}/servers/{server_id}/os-instance-actions/{action_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Gets details for a specified action for a specified server\ninstance. Deployers set permissions for this request in the\npolicy.json file. By default, only administrators can get details\nfor an action.", 
        "examples": {}, 
        "id": "getActionDetails", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the server instance for which you want to list actions.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID of the action for which you want to get details.", 
            "format": "", 
            "in": "path", 
            "name": "action_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "instanceAction": {
                  "action": "reboot", 
                  "events": [
                    {
                      "event": "schedule", 
                      "finish_time": "2012-12-05 01:02:00.000000", 
                      "result": "Success", 
                      "start_time": "2012-12-05 01:00:02.000000", 
                      "traceback": ""
                    }, 
                    {
                      "event": "compute_create", 
                      "finish_time": "2012-12-05 01:04:00.000000", 
                      "result": "Success", 
                      "start_time": "2012-12-05 01:03:00.000000", 
                      "traceback": ""
                    }
                  ], 
                  "instance_uuid": "b48316c5-71e8-45e4-9884-6c78055b9b13", 
                  "message": "", 
                  "project_id": "147", 
                  "request_id": "req-3293a3f1-b44c-4609-b8d2-d81b105636b8", 
                  "start_time": "2012-12-05 00:00:00.000000", 
                  "user_id": "789"
                }
              }
            }, 
            "headers": {}
          }, 
          "203": {
            "examples": {
              "application/json": {
                "instanceAction": {
                  "action": "reboot", 
                  "events": [
                    {
                      "event": "schedule", 
                      "finish_time": "2012-12-05 01:02:00.000000", 
                      "result": "Success", 
                      "start_time": "2012-12-05 01:00:02.000000", 
                      "traceback": ""
                    }, 
                    {
                      "event": "compute_create", 
                      "finish_time": "2012-12-05 01:04:00.000000", 
                      "result": "Success", 
                      "start_time": "2012-12-05 01:03:00.000000", 
                      "traceback": ""
                    }
                  ], 
                  "instance_uuid": "b48316c5-71e8-45e4-9884-6c78055b9b13", 
                  "message": "", 
                  "project_id": "147", 
                  "request_id": "req-3293a3f1-b44c-4609-b8d2-d81b105636b8", 
                  "start_time": "2012-12-05 00:00:00.000000", 
                  "user_id": "789"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get action details", 
        "tags": [
          "instance-actions"
        ]
      }
    ], 
    "/v2/{tenant_id}/servers/{server_id}/os-interface": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Creates and uses a port interface to attach the port to a server\ninstance.", 
        "examples": {
          "application/json": {
            "interfaceAttachment": {
              "port_id": "ce531f90-199f-48c0-816c-13e38010b442"
            }
          }
        }, 
        "id": "createAttachInterface", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createAttachInterface"
            }
          }, 
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "interfaceAttachment": {
                  "fixed_ips": [
                    {
                      "ip_address": "192.168.1.1", 
                      "subnet_id": "f8a6e8f8-c2ec-497c-9f23-da9616de54ef"
                    }
                  ], 
                  "mac_addr": "fa:16:3e:4c:2c:30", 
                  "net_id": "3cb9bc59-5699-4588-a4b1-b87f96708bc6", 
                  "port_id": "ce531f90-199f-48c0-816c-13e38010b442", 
                  "port_state": "ACTIVE"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Create interface", 
        "tags": [
          "interface"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists port interfaces.", 
        "examples": {}, 
        "id": "listAttachedInterfaces", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "interfaceAttachments": [
                  {
                    "fixed_ips": [
                      {
                        "ip_address": "192.168.1.3", 
                        "subnet_id": "f8a6e8f8-c2ec-497c-9f23-da9616de54ef"
                      }
                    ], 
                    "mac_addr": "fa:16:3e:4c:2c:30", 
                    "net_id": "3cb9bc59-5699-4588-a4b1-b87f96708bc6", 
                    "port_id": "ce531f90-199f-48c0-816c-13e38010b442", 
                    "port_state": "ACTIVE"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List interfaces", 
        "tags": [
          "interface"
        ]
      }
    ], 
    "/v2/{tenant_id}/servers/{server_id}/os-interface/{attachment_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows information about a specified port interface.", 
        "examples": {}, 
        "id": "showAttachedInterface", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The interface ID.", 
            "format": "", 
            "in": "path", 
            "name": "attachment_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "interfaceAttachment": {
                  "fixed_ips": [
                    {
                      "ip_address": "192.168.1.3", 
                      "subnet_id": "f8a6e8f8-c2ec-497c-9f23-da9616de54ef"
                    }
                  ], 
                  "mac_addr": "fa:16:3e:4c:2c:30", 
                  "net_id": "3cb9bc59-5699-4588-a4b1-b87f96708bc6", 
                  "port_id": "ce531f90-199f-48c0-816c-13e38010b442", 
                  "port_state": "ACTIVE"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show attached interface information", 
        "tags": [
          "interface"
        ]
      }, 
      {
        "consumes": [], 
        "description": "Detaches a specified port interface.", 
        "examples": {}, 
        "id": "deleteAttachedInterface", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The interface ID.", 
            "format": "", 
            "in": "path", 
            "name": "attachment_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Detach interface", 
        "tags": [
          "interface"
        ]
      }
    ], 
    "/v2/{tenant_id}/servers/{server_id}/os-security-groups": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists security groups for a specified server.", 
        "examples": {}, 
        "id": "listSecGroupsByServer", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "security_groups": [
                  {
                    "description": "default", 
                    "id": "3fb26eb3-581b-4420-9963-b0879a026506", 
                    "name": "default", 
                    "rules": [], 
                    "tenant_id": "openstack"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List security groups by server", 
        "tags": [
          "security-groups"
        ]
      }
    ], 
    "/v2/{tenant_id}/servers/{server_id}/os-server-password": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Gets the administrative password for a specified server.", 
        "examples": {}, 
        "id": "getPassword", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "password": "xlozO3wLCBRWAa2yDjCCVx8vwNPypxnypmRYDa/zErlQ+EzPe1S/Gz6nfmC52mOlOSCRuUOmG7kqqgejPof6M7bOezS387zjq4LSvvwp28zUknzy4YzfFGhnHAdai3TxUJ26pfQCYrq8UTzmKF2Bq8ioSEtVVzM0A96pDh8W2i7BOz6MdoiVyiev/I1K2LsuipfxSJR7Wdke4zNXJjHHP2RfYsVbZ/k9ANu+Nz4iIH8/7Cacud/pphH7EjrY6a4RZNrjQskrhKYed0YERpotyjYk1eDtRe72GrSiXteqCM4biaQ5w3ruS+AcX//PXk3uJ5kC7d67fPXaVz4WaQRYMg=="
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Get server password", 
        "tags": [
          "server-password"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Clears the encrypted copy of the password in the metadata server.\nThis is done after the client has retrieved the password and knows\nit doesn't need it in the metadata server anymore. The password for\nthe server remains the same.", 
        "examples": {
          "application/json": {
            "server": {
              "flavorRef": "http://openstack.example.com/openstack/flavors/1", 
              "imageRef": "http://openstack.example.com/openstack/images/70a599e0-31e7-49b7-b260-868f441e862b", 
              "metadata": {
                "My Server Name": "Apache1"
              }, 
              "name": "new-server-test", 
              "personality": [
                {
                  "contents": "ICAgICAgDQoiQSBjbG91ZCBkb2VzIG5vdCBrbm93IHdoeSBpdCBtb3ZlcyBpbiBqdXN0IHN1Y2ggYSBkaXJlY3Rpb24gYW5kIGF0IHN1Y2ggYSBzcGVlZC4uLkl0IGZlZWxzIGFuIGltcHVsc2lvbi4uLnRoaXMgaXMgdGhlIHBsYWNlIHRvIGdvIG5vdy4gQnV0IHRoZSBza3kga25vd3MgdGhlIHJlYXNvbnMgYW5kIHRoZSBwYXR0ZXJucyBiZWhpbmQgYWxsIGNsb3VkcywgYW5kIHlvdSB3aWxsIGtub3csIHRvbywgd2hlbiB5b3UgbGlmdCB5b3Vyc2VsZiBoaWdoIGVub3VnaCB0byBzZWUgYmV5b25kIGhvcml6b25zLiINCg0KLVJpY2hhcmQgQmFjaA==", 
                  "path": "/etc/banner.txt"
                }
              ]
            }
          }
        }, 
        "id": "resetPassword", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "server": {
                  "adminPass": "78AtBtuxTqZV", 
                  "id": "66fd64e1-de18-4506-bfb6-b5e73ef78a43", 
                  "links": [
                    {
                      "href": "http://openstack.example.com/v2/openstack/servers/66fd64e1-de18-4506-bfb6-b5e73ef78a43", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://openstack.example.com/openstack/servers/66fd64e1-de18-4506-bfb6-b5e73ef78a43", 
                      "rel": "bookmark"
                    }
                  ]
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Clear server password", 
        "tags": [
          "server-password"
        ]
      }
    ], 
    "/v2/{tenant_id}/servers/{server_id}/os-virtual-interfaces": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists the virtual interfaces for a specified instance.", 
        "examples": {}, 
        "id": "getVirtualInterfaces", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "virtual_interfaces": [
                  {
                    "id": "cec8b9bb-5d22-4104-b3c8-4c35db3210a6", 
                    "mac_address": "fa:16:3e:3c:ce:6f"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List virtual interfaces", 
        "tags": [
          "virtual-interfaces"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows the virtual interface for a specified instance. Includes the\nOS-EXT-VIF-NET:net_id attribute that shows to which network the\ninterface is attached.", 
        "examples": {}, 
        "id": "getVirtualInterfacesShowWhichNetwork", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "virtual_interfaces": [
                  {
                    "OS-EXT-VIF-NET:net_id": "cec8b9bb-5d22-4104-b3c8-4c35db3210a7", 
                    "id": "cec8b9bb-5d22-4104-b3c8-4c35db3210a6", 
                    "mac_address": "fa:16:3e:3c:ce:6f"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show virtual interface and attached network", 
        "tags": [
          "virtual-interfaces"
        ]
      }
    ], 
    "/v2/{tenant_id}/servers/{server_id}/os-volume_attachments": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Attaches a volume to the specified server.\n\nPreconditions\n\n- You can attach a volume to a server with an ``ACTIVE`` ,\n  ``PAUSED`` , ``SHUTOFF`` , ``VERIFY_RESIZE`` , or\n  ``SOFT_DELETED`` status.\n\n- You can attach a volume to a server with a status that is not\n  locked.\n\n- You can attach a volume when its status is ``available`` .\n\n- You can attach a volume when its volume type supports volume\n  attaching.\n\nAsynchronous Postconditions\n\n- After successfully attaching a volume to a server, the volume\n  status changes to ``in-use`` .\n\n- You can see the attached volume when you log in to the server.\n\nTroubleshooting\n\n- If the volume status remains in ``available`` state, the request\n  failed. Ensure that you meet the preconditions and run the\n  request again. If the request fails again, investigate the server\n  and the volume status.", 
        "examples": {
          "application/json": {
            "volumeAttachment": {
              "volumeId": "a26887c6-c47b-4654-abb5-dfadf7d3f803"
            }
          }
        }, 
        "id": "attachVolume", 
        "method": "post", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ID of the volume to attach.", 
            "format": "", 
            "in": "path", 
            "name": "volumeId", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Name of the device such as, ``/dev/vdb`` . Omit or set this\nparameter to null for auto-assignment, if supported. If you specify\nthis parameter, the device must not exist in the guest operating\nsystem.", 
            "format": "", 
            "in": "path", 
            "name": "device", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "A dictionary representation of a volume attachment.", 
            "format": "", 
            "in": "path", 
            "name": "volumeAttachment", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "volumeAttachment": {
                  "device": "/dev/vdd", 
                  "id": "a26887c6-c47b-4654-abb5-dfadf7d3f803", 
                  "serverId": "0c92f3f6-c253-4c9b-bd43-e880a8d2eb0a", 
                  "volumeId": "a26887c6-c47b-4654-abb5-dfadf7d3f803"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "409": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Attach volume", 
        "tags": [
          "volume-attachments"
        ]
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Lists the volume attachments for a specified server.", 
        "examples": {}, 
        "id": "listVolumeAttachments", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "volumeAttachments": [
                  {
                    "device": "/dev/sdd", 
                    "id": "a26887c6-c47b-4654-abb5-dfadf7d3f803", 
                    "serverId": "4d8c3732-a248-40ed-bebc-539a6ffd25c0", 
                    "volumeId": "a26887c6-c47b-4654-abb5-dfadf7d3f803"
                  }, 
                  {
                    "device": "/dev/sdc", 
                    "id": "a26887c6-c47b-4654-abb5-dfadf7d3f804", 
                    "serverId": "4d8c3732-a248-40ed-bebc-539a6ffd25c0", 
                    "volumeId": "a26887c6-c47b-4654-abb5-dfadf7d3f804"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "409": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "List volume attachments", 
        "tags": [
          "volume-attachments"
        ]
      }
    ], 
    "/v2/{tenant_id}/servers/{server_id}/os-volume_attachments/{attachment_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Shows details for the specified volume attachment.\n\nPreconditions\n\n- The specified volume must be attached to the server.", 
        "examples": {}, 
        "id": "getVolumeAttachmentDetails", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Volume attachment ID.", 
            "format": "", 
            "in": "path", 
            "name": "attachment_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "volumeAttachment": {
                  "device": "/dev/sdd", 
                  "id": "a26887c6-c47b-4654-abb5-dfadf7d3f803", 
                  "serverId": "2390fb4d-1693-45d7-b309-e29c4af16538", 
                  "volumeId": "a26887c6-c47b-4654-abb5-dfadf7d3f803"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "409": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Show volume attachment details", 
        "tags": [
          "volume-attachments"
        ]
      }, 
      {
        "consumes": [], 
        "description": "Detaches the specified volume from a specified server.\n\nPreconditions\n\n- The specified volume must be attached to the server.\n\n- You can detach a volume when the server status is ``ACTIVE`` ,\n  ``PAUSED`` , ``SHUTOFF`` , ``VERIFY_RESIZE`` , or\n  ``SOFT_DELETED`` .\n\n- You can detach a volume when its status is ``in-use`` .\n\n- You can detach a volume from a server with a status that is not\n  locked.\n\n- You cannot detach a root device volume.\n\nAsynchronous Postconditions\n\n- After successfully detaching a volume, its status changes to\n  ``available`` .\n\n- The detached volume is no longer visible on the server.\n\nTroubleshooting\n\n- If the volume status remains in ``available`` state, the request\n  failed. Ensure that you meet the preconditions and run the\n  request again. If the request fails again, investigate whether\n  another operation is running that causes a race condition.\n\n- If you attempt to detach a root device volume, this operation\n  returns the ``403 HTTP Forbidden`` error code.", 
        "examples": {}, 
        "id": "deleteVolumeAttachment", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The ID for the tenant or account in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the server of interest to you.", 
            "format": "", 
            "in": "path", 
            "name": "server_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Volume attachment ID.", 
            "format": "", 
            "in": "path", 
            "name": "attachment_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "409": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Detach volume", 
        "tags": [
          "volume-attachments"
        ]
      }
    ]
  }, 
  "schemes": {}, 
  "securityDefinitions": {}, 
  "swagger": "2.0", 
  "tags": [
    {
      "description": "Servers with block device mapping format (servers)", 
      "name": "block-device-mapping", 
      "summary": "Creates a server with a block device mapping."
    }, 
    {
      "description": "Servers with configuration drive (servers)", 
      "name": "createserverext", 
      "summary": "Extends servers and images with a configuration drive."
    }, 
    {
      "description": "Servers console (servers)", 
      "name": "consoles", 
      "summary": "Gets a console for a server instance."
    }, 
    {
      "description": "Servers console output (servers)", 
      "name": "console-output", 
      "summary": "Gets console output for a server instance."
    }, 
    {
      "description": "Servers extended attributes (servers)", 
      "name": "extended-server-attributes", 
      "summary": "Shows metadata for servers."
    }, 
    {
      "description": "Servers with extended availability zones (servers)", 
      "name": "ext-az", 
      "summary": "Shows the instance availability zone for compute nodes (nova-\ncompute). Internal services appear in their own *internal*\navailability zone."
    }, 
    {
      "description": "Servers extended status (servers)", 
      "name": "extended-status", 
      "summary": "Shows the ``vm_state`` , ``task_state`` , and ``power_state``\nextended status information in detailed server responses."
    }, 
    {
      "description": "Servers with IP type (servers)", 
      "name": "ext-ips", 
      "summary": "Shows the type of the IP addresses that are assigned to an\ninstance. Type is either fixed or floating."
    }, 
    {
      "description": "Servers multiple create (servers)", 
      "name": "multi-server-create", 
      "summary": "Creates one or more servers with an optional reservation ID. The\nrequest and response examples show how to create multiple servers\nwith or without a reservation ID."
    }, 
    {
      "description": "Servers with mac_addr extended attribute (servers)", 
      "name": "server-ext-ips-mac", 
      "summary": "Creates, shows information for, and lists servers with the\n``mac_addr`` extended attribute."
    }, 
    {
      "description": "Servers with scheduler hints (servers)", 
      "name": "scheduler-hints", 
      "summary": "Creates a server with scheduler hints."
    }, 
    {
      "description": "Servers administrative actions (servers, action)", 
      "name": "admin-actions", 
      "summary": "Administrator only. Performs actions on a server. Specify the\naction in the request body."
    }, 
    {
      "description": "Servers deferred delete (servers, action)", 
      "name": "deferred-delete", 
      "summary": "Force-deletes a server and restores a deleted server."
    }, 
    {
      "description": "Servers rescue and unrescue (servers, action)", 
      "name": "rescue", 
      "summary": "Puts a server into rescue mode and unrescues a server in rescue\nmode."
    }, 
    {
      "description": "Servers shelve (servers, action)", 
      "name": "server-shelve", 
      "summary": "Shelves running servers, restores shelved servers, and removes\nshelved servers.\n\nShelving is useful when you have an unused instance that you would\nlike to keep for later use. For example, at the end of a work week\nyou can shelve an instance and at the start of the next week you\ncan unshelve it.\n\nYour cloud provider might bill you for a shelved server.\n\nUse the ``shelve`` action to shelve a server. All associated data\nand resources are kept but anything still in memory is not\nretained.\n\nUse the ``unshelve`` action to restore a shelved instance.\n\nUse the ``shelveOffload`` action to remove a shelved instance that\nyou no longer need."
    }, 
    {
      "description": "Servers start and stop (servers, action)", 
      "name": "server-start-stop", 
      "summary": "Starts a stopped server and stops a running server."
    }, 
    {
      "description": "Servers diagnostics (servers, diagnostics)", 
      "name": "diagnostics", 
      "summary": "Gets the usage data for a server."
    }, 
    {
      "description": "Servers and images with disk config (servers, images)", 
      "name": "disk-config", 
      "summary": "Extends servers with the ``diskConfig`` attribute."
    }, 
    {
      "description": "Servers availability zones (servers, os-availability-zone)", 
      "name": "availability-zone", 
      "summary": "Gets availability zone information."
    }, 
    {
      "description": "Servers instance actions (servers, os-instance-actions)", 
      "name": "instance-actions", 
      "summary": "Lists available actions for a specified server. Administrators can\nget details for a specified action for a specified server."
    }, 
    {
      "description": "Servers password (servers, os-server-password)", 
      "name": "server-password", 
      "summary": "Gets and resets the encrypted administrative password set through\nthe metadata service."
    }, 
    {
      "description": "Servers virtual interfaces (servers, os-virtual-interfaces)", 
      "name": "virtual-interfaces", 
      "summary": "Lists the virtual interfaces for a specified server instance."
    }, 
    {
      "description": "Servers with volume attachments (servers, os-volume_attachments)", 
      "name": "volume-attachments", 
      "summary": "Attaches volumes that are created through the volume API to server\ninstances. Also, lists volume attachments for a server instance,\ngets volume details for a volume attachment, and detaches a volume."
    }, 
    {
      "description": "Server boot from volume (os-volumes_boot)", 
      "name": "os-volume_boot", 
      "summary": "Starts an instance by using a volume with the ``bootable``\nattribute. The image on the volume is used to boot the instance."
    }, 
    {
      "description": "Flavors create and delete (flavors)", 
      "name": "flavormanage", 
      "summary": "Creates, lists, and deletes flavors."
    }, 
    {
      "description": "Flavors with disabled attribute (flavors)", 
      "name": "flv-disabled", 
      "summary": "Lists and gets details for flavors. Includes the ``disabled``\nextended attribute."
    }, 
    {
      "description": "Flavors with extended attributes (flavors)", 
      "name": "flavorextradata", 
      "summary": "Creates, gets details for, and lists details for flavors. Includes\nthe rxtx_factor , OS-FLV-EXT-DATA:ephemeral , and swap extended\nattributes."
    }, 
    {
      "description": "Flavors with rxtx_factor extended attribute (flavors)", 
      "name": "flavor-rxtx", 
      "summary": "Creates, gets details for, and lists details for flavors. Includes\nthe rxtx_factor extended attribute, which is related to configured\nbandwidth cap values."
    }, 
    {
      "description": "Flavors with extra-specs (flavors, os-extra-specs)", 
      "name": "flavor-extra-specs", 
      "summary": "Lists, creates, and updates the extra-specs or keys for a flavor."
    }, 
    {
      "description": "Flavors access (flavors, os-flavor-access)", 
      "name": "flavor-access", 
      "summary": "Creates and gets details for private flavors. Also, lists, adds,\nand removes tenants' access to private flavors."
    }, 
    {
      "description": "Flavors swap (flavors, os-flavor-swap)", 
      "name": "flavor-swap", 
      "summary": "Creates and lists flavors with a swap value. Requires the ``os-\nflavormanage`` extension. The swap value is the amount of swap disk\nspace, in GBs, to allocate to a server."
    }, 
    {
      "description": "Images with size attribute (images)", 
      "name": "ext-img-size", 
      "summary": "Lists details for available images and gets details for a specified\nimage. Includes the ``OS-EXT-IMG-SIZE:size`` extended attribute,\nwhich shows the image size."
    }, 
    {
      "description": "Limits with project usage (limits)", 
      "name": "used-limits", 
      "summary": "Extends limits to show the project usage. Shows information such as\nRAM and instance quotas usage."
    }, 
    {
      "description": "Limits with project usage for administrators (limits)", 
      "name": "used-limits-for-admins", 
      "summary": "Extends limits to enable administrators to show the project usage\nfor a specified customer project ID. Shows information such as RAM\nand instance quotas usage."
    }, 
    {
      "description": "Guest agents (os-agents)", 
      "name": "agents", 
      "summary": "Creates, updates, and deletes guest agents.\n\nUse guest agents to access files on the disk, configure networking,\nand run other applications and scripts in the guest while it runs.\nThis hypervisor-specific extension is not currently enabled for\nKVM. Use of guest agents is possible only if the underlying service\nprovider uses the Xen driver."
    }, 
    {
      "description": "Host aggregates (os-aggregates)", 
      "name": "aggregates", 
      "summary": "Creates and manages host aggregates. An aggregate assigns metadata\nto groups of compute nodes. Aggregates are only visible to the\ncloud provider."
    }, 
    {
      "description": "Bare metal nodes (os-baremetal-nodes)", 
      "name": "baremetal-ext-status", 
      "summary": "Bare metal nodes."
    }, 
    {
      "description": "Root certificates (os-certificates)", 
      "name": "certificates", 
      "summary": "Creates and shows details for a root certificate."
    }, 
    {
      "description": "Cloudpipe (os-cloudpipe)", 
      "name": "cloudpipe", 
      "summary": "Manages virtual VPNs for projects."
    }, 
    {
      "description": "Coverage reports (os-coverage)", 
      "name": "coverage", 
      "summary": "Shows coverage reports."
    }, 
    {
      "description": "Network extended attributes (os-extended-networks)", 
      "name": "extended-networks", 
      "summary": "Creates, shows details for, and lists networks with extended\nattributes."
    }, 
    {
      "description": "Fixed IPs (os-fixed-ips)", 
      "name": "fixed-ips", 
      "summary": "Shows data for a specified fixed IP, such as host name, CIDR, and\naddress. Also, reserves and frees a fixed IP address."
    }, 
    {
      "description": "Floating IP DNS records (os-floating-ip-dns)", 
      "name": "floating-ip-dns", 
      "summary": "Manages DNS records that are associated with IP addresses that are\nallocated by the floating IPs extension. Requests are dispatched to\na DNS driver selected at startup."
    }, 
    {
      "description": "Floating IP pools (os-floating-ip-pools)", 
      "name": "floating-ip-pools", 
      "summary": "Manages groups of floating IPs."
    }, 
    {
      "description": "Floating IPs (os-floating-ips)", 
      "name": "floating-ips", 
      "summary": "Assigns and allocates floating IP addresses to instances that run\nin an OpenStack cloud."
    }, 
    {
      "description": "Floating IPs bulk (os-floating-ips-bulk)", 
      "name": "floating-ips-bulk", 
      "summary": "Bulk-creates, deletes, and lists floating IPs. By default, the pool\nis named nova. Use the os-floating-ip-pools extension to view\navailable pools."
    }, 
    {
      "description": "Hosts (os-hosts)", 
      "name": "hosts", 
      "summary": "Manages physical hosts."
    }, 
    {
      "description": "Hypervisors (os-hypervisors)", 
      "name": "hypervisors", 
      "summary": "Displays extra statistical information from the machine that hosts\nthe hypervisor through the API for the hypervisor (XenAPI or\nKVM/libvirt)."
    }, 
    {
      "description": "Hypervisor with status (os-hypervisor-status)", 
      "name": "hypervisor-status", 
      "summary": "Displays extra statistical information including status from the\nmachine that hosts the hypervisor through the API for the\nhypervisor (XenAPI or KVM/libvirt)."
    }, 
    {
      "description": "Attach interfaces (os-interface)", 
      "name": "interface", 
      "summary": "Creates, lists, gets details for, and deletes port interfaces."
    }, 
    {
      "description": "Keypairs (os-keypairs)", 
      "name": "keypairs", 
      "summary": "Generates, imports, and deletes SSH keys.\n\nTo add a keypair to a server, specify the ``key_name`` parameter in\nthe request body in a create server request."
    }, 
    {
      "description": "Migrations (os-migrations)", 
      "name": "migrations", 
      "summary": "Administrators only. Gets in-progress migrations for a region or\nspecified cell in a region."
    }, 
    {
      "description": "Networks (os-networks)", 
      "name": "networks", 
      "summary": "Shows network information for and deletes networks. Also,\ndisassociates a network from a project in VLAN mode."
    }, 
    {
      "description": "Quota class (os-quota-class-sets)", 
      "name": "quota-class-sets", 
      "summary": "Provides quota classes management support."
    }, 
    {
      "description": "Quota sets (os-quota-sets)", 
      "name": "quota-sets", 
      "summary": "Administrators only, depending on policy settings.\n\nShows quotas for a tenant and shows and updates default quotas."
    }, 
    {
      "description": "Security groups (os-security-groups)", 
      "name": "security-groups", 
      "summary": "Lists, lists by server, creates, shows information for, updates,\nand deletes security groups."
    }, 
    {
      "description": "Rules for security group (os-security-group-rules)", 
      "name": "os-security-group-rules", 
      "summary": "Creates and deletes security group rules."
    }, 
    {
      "description": "Rules for default security group (os-security-group-default-rules)", 
      "name": "security-group-default-rules", 
      "summary": "Lists, shows information for, and creates default security group\nrules."
    }, 
    {
      "description": "Server groups (os-server-groups)", 
      "name": "server-groups", 
      "summary": "Lists, shows information for, creates, and deletes server groups."
    }, 
    {
      "description": "Manage services (os-services)", 
      "name": "services", 
      "summary": "Lists, enables, and disables Compute services in all hosts."
    }, 
    {
      "description": "Usage reports (os-simple-tenant-usage)", 
      "name": "simple-tenant-usage", 
      "summary": "Reports usage statistics on compute and storage resources."
    }, 
    {
      "description": "Volume extension (os-volumes, os-snapshots)", 
      "name": "volume", 
      "summary": "Manages volumes and snapshots for use with the Compute API."
    }
  ]
}