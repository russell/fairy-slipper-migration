{
  "basePath": {}, 
  "definitions": {
    "attachVolume": {
      "properties": {
        "host_name": {
          "description": "The name of the attaching host.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "instance_uuid": {
          "description": "The UUID of the attaching instance.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "mountpoint": {
          "description": "The attaching mount point.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "os-attach": {
          "description": "The ``os-attach`` action.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createBackup": {
      "properties": {
        "backup": {
          "description": "A ``backup`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "container": {
          "description": "The container name or null.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "description": {
          "description": "The backup description or null.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "incremental": {
          "description": "The backup mode. A valid value is ``True`` for incremental backup\nmode or ``False`` for full backup mode. Default is ``False`` .", 
          "format": "", 
          "required": false, 
          "type": "boolean"
        }, 
        "name": {
          "description": "The backup name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "volume_id": {
          "description": "The ID of the volume that you want to back up.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createBackup_202": {
      "properties": {
        "backup": {
          "description": "A ``backup`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The ID of the backup.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "links": {
          "description": "Links for the backup.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "name": {
          "description": "The backup name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createQoSSpec": {
      "properties": {
        "name": {
          "description": "The name of the QoS specification.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "qos_specs": {
          "description": "A ``qos_specs`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "specs": {
          "description": "Specification key and value pairs.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createQoSSpec_202": {
      "properties": {
        "consumer": {
          "description": "The consumer type.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The generated ID for the QoS specification.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "links": {
          "description": "The QoS specification links.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "name": {
          "description": "The name of the QoS specification.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "qos_specs": {
          "description": "A ``qos_specs`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "specs": {
          "description": "A ``specs`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createVolume": {
      "properties": {
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "description": {
          "description": "The volume description.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "imageRef": {
          "description": "The ID of the image from which you want to create the volume.\nRequired to create a bootable volume.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs to associate with the\nvolume.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "name": {
          "description": "The volume name.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "snapshot_id": {
          "description": "To create a volume from an existing snapshot, specify the ID of the\nexisting volume snapshot. The volume is created in same\navailability zone and with same size as the snapshot.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "source_volid": {
          "description": "To create a volume from an existing volume, specify the ID of the\nexisting volume. The volume is created with the same size as the\nsource volume.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "volume_type": {
          "description": "The associated volume type.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createVolumeTypeAccessExt": {
      "properties": {
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "description": {
          "description": "The volume description.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "imageRef": {
          "description": "The ID of the image from which you want to create the volume.\nRequired to create a bootable volume.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs to associate with the\nvolume.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "name": {
          "description": "The volume name.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "os-volume-type-access:is_public": {
          "description": "The volume type access.\n\nSet to ``true`` if access is public. Set to ``false`` if access is\nprivate. Default is ``true`` .", 
          "format": "", 
          "required": false, 
          "type": "boolean"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "snapshot_id": {
          "description": "To create a volume from an existing snapshot, specify the ID of the\nexisting volume snapshot. The volume is created in same\navailability zone and with same size as the snapshot.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "source_volid": {
          "description": "To create a volume from an existing volume, specify the ID of the\nexisting volume. The volume is created with the same size as the\nsource volume.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "volume_type": {
          "description": "The associated volume type.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createVolumeTypeAccessExt_202": {
      "properties": {
        "attachments": {
          "description": "One or more instance attachments.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "created_at": {
          "description": "Date and time when the volume was created.", 
          "format": "date-time", 
          "required": true, 
          "type": "string"
        }, 
        "description": {
          "description": "The volume description.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The volume ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs to associate with the\nvolume.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The volume name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "os-volume-type-access:is_public": {
          "description": "The volume type access.\n\nSet to ``true`` if access is public. Set to ``false`` if access is\nprivate.", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "snapshot_id": {
          "description": "The ID of the source volume snapshot.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "source_volid": {
          "description": "The ID of the source volume.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "status": {
          "description": "The volume status.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "volume_type": {
          "description": "The associated volume type.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "createVolume_202": {
      "properties": {
        "attachments": {
          "description": "One or more instance attachments.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "created_at": {
          "description": "Date and time when the volume was created.", 
          "format": "date-time", 
          "required": true, 
          "type": "string"
        }, 
        "description": {
          "description": "The volume description.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The volume ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs to associate with the\nvolume.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The volume name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "snapshot_id": {
          "description": "The ID of the source volume snapshot.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "source_volid": {
          "description": "The ID of the source volume.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "status": {
          "description": "The volume status.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "volume_type": {
          "description": "The associated volume type.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "extendVolume": {
      "properties": {
        "new_size": {
          "description": "The new size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "forceDeleteBackup": {
      "properties": {
        "os-force_delete": {
          "description": "The ``os-force_delete`` action.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "getBackendCapabilities_200": {
      "properties": {
        "description": {
          "description": "The storage description.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "display_name": {
          "description": "The display name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "driver_version": {
          "description": "The driver version.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "namespace": {
          "description": "The storage name space, such as ``OS::Storage::Capabilities::foo``\n.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "pool_name": {
          "description": "The pool name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "properties": {
          "description": "A set of storage properties, such as QoS, IOPS, and so on.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "storage_protocol": {
          "description": "The storage protocol, such as Fibre Channel, iSCSI, NFS, and so on.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "vendor_name": {
          "description": "The vendor name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "visibility": {
          "description": "Enables public or private visibility. Set to ``True`` to make the\nback end publicly visible.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "volume_backend_name": {
          "description": "Volume back-end storage name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "getDefaults_200": {
      "properties": {
        "gigabytes": {
          "description": "The number of gigabytes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "snapshots": {
          "description": "The number of snapshots allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "volumes": {
          "description": "The number of volumes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "getVolume_200": {
      "properties": {
        "attachments": {
          "description": "One or more instance attachments.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "created_at": {
          "description": "Date and time when the volume was created.", 
          "format": "date-time", 
          "required": true, 
          "type": "string"
        }, 
        "description": {
          "description": "The volume description.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The volume ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs to associate with the\nvolume.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The volume name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "snapshot_id": {
          "description": "The ID of the source volume snapshot.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "source_volid": {
          "description": "The ID of the source volume.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "status": {
          "description": "The volume status.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "volume_type": {
          "description": "The associated volume type.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "getVolumesDetail_200": {
      "properties": {
        "attachments": {
          "description": "One or more instance attachments.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "created_at": {
          "description": "Date and time when the volume was created.", 
          "format": "date-time", 
          "required": true, 
          "type": "string"
        }, 
        "description": {
          "description": "The volume description.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The volume ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs to associate with the\nvolume.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The volume name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "snapshot_id": {
          "description": "The ID of the source volume snapshot.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "source_volid": {
          "description": "The ID of the source volume.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "status": {
          "description": "The volume status.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "volume_type": {
          "description": "The associated volume type.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "getVolumesSimple_200": {
      "properties": {
        "attachments": {
          "description": "One or more instance attachments.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "created_at": {
          "description": "Date and time when the volume was created.", 
          "format": "date-time", 
          "required": true, 
          "type": "string"
        }, 
        "description": {
          "description": "The volume description.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The volume ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs to associate with the\nvolume.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The volume name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "snapshot_id": {
          "description": "The ID of the source volume snapshot.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "source_volid": {
          "description": "The ID of the source volume.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "status": {
          "description": "The volume status.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "volume_type": {
          "description": "The associated volume type.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "listBackupsDetails_200": {
      "properties": {
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "backups": {
          "description": "A ``backups`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "container": {
          "description": "The container name or null.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "created_at": {
          "description": "The date and time when the server, image, or backup was created.\n\nThe date and time stamp format is ISO 8601 :\n\nCCYY-MM-DDThh:mm:ss\u00b1hh:mmFor example, ``2015-08-27T09:49:58-05:00`` .\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nIf the updated-at date and time stamp is not set, its value is\n``null`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "description": {
          "description": "The backup description or null.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "fail_reason": {
          "description": "If the backup failed, the reason for the failure. Otherwise, null.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "has_dependent_backups": {
          "description": "Indicates whether the backup depends on other backups. If this\nvalue is ``True`` , the backup depends on other backups.", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "id": {
          "description": "The ID of the backup.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "is_incremental": {
          "description": "Indicates whether the backup mode is incremental. If this value is\n``True`` , the backup mode is incremental. If this value is\n``False`` , the backup mode is full.", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "links": {
          "description": "Links for the backup.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "name": {
          "description": "The backup name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "object_count": {
          "description": "The number of objects in the backup.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "size": {
          "description": "The size of the backup, in GB.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "status": {
          "description": "The backup status, such as available.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "volume_id": {
          "description": "The ID of the volume from which the backup was created.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "listBackups_200": {
      "properties": {
        "backups": {
          "description": "A ``backups`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The ID of the backup.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "links": {
          "description": "Links for the backup.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "name": {
          "description": "The backup name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "listQoSSpecs_200": {
      "properties": {
        "consumer": {
          "description": "The consumer type.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The generated ID for the QoS specification.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The name of the QoS specification.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "qos_specs": {
          "description": "A ``qos_specs`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "specs": {
          "description": "Specification key and value pairs.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "manageExisting": {
      "properties": {
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "bootable": {
          "description": "Enables or disables the bootable attribute. You can boot an\ninstance from a bootable volume.", 
          "format": "", 
          "required": false, 
          "type": "boolean"
        }, 
        "description": {
          "description": "The volume description.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "host": {
          "description": "The OpenStack Block Storage host where the existing volume resides.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs to associate with the\nvolume.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "name": {
          "description": "The volume name.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "ref": {
          "description": "A reference to the existing volume. The internal structure of this\nreference depends on the volume driver implementation. For details\nabout the required elements in the structure, see the documentation\nfor the volume driver.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "volume": {
          "description": "A ``volume`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "volume_type": {
          "description": "The associated volume type.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "resetVolume": {
      "properties": {
        "attach_status": {
          "description": "The volume attach status.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "migration_status": {
          "description": "The volume migration status.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "status": {
          "description": "The volume status.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "restoreBackup": {
      "properties": {
        "name": {
          "description": "The name of the volume to which you want to restore a backup.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "restore": {
          "description": "The ``restore`` action.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "volume_id": {
          "description": "The ID of the volume to which you want to restore a backup.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "restoreBackup_202": {
      "properties": {
        "backup_id": {
          "description": "The ID of the backup.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "restore": {
          "description": "The ``restore`` action.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "volume_id": {
          "description": "The ID of the volume to which the backup was restored.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "setQoSKey": {
      "properties": {
        "qos_specs": {
          "description": "A ``qos_specs`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "specs": {
          "description": "Specification key and value pairs.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "setVolumeimagemetadata": {
      "properties": {
        "metadata": {
          "description": "The image metadata to add to the volume as a set of metadata key\nand value pairs.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "os-set_image_metadata": {
          "description": "The ``os-set_image_metadata`` action.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "showBackup_200": {
      "properties": {
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "backup": {
          "description": "A ``backup`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "container": {
          "description": "The container name or null.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "created_at": {
          "description": "The date and time when the server, image, or backup was created.\n\nThe date and time stamp format is ISO 8601 :\n\nCCYY-MM-DDThh:mm:ss\u00b1hh:mmFor example, ``2015-08-27T09:49:58-05:00`` .\n\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nIf the updated-at date and time stamp is not set, its value is\n``null`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "description": {
          "description": "The backup description or null.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "fail_reason": {
          "description": "If the backup failed, the reason for the failure. Otherwise, null.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "has_dependent_backups": {
          "description": "Indicates whether the backup depends on other backups. If this\nvalue is ``True`` , the backup depends on other backups.", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "id": {
          "description": "The ID of the backup.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "is_incremental": {
          "description": "Indicates whether the backup mode is incremental. If this value is\n``True`` , the backup mode is incremental. If this value is\n``False`` , the backup mode is full.", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "links": {
          "description": "Links for the backup.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "name": {
          "description": "The backup name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "object_count": {
          "description": "The number of objects in the backup.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "size": {
          "description": "The size of the backup, in GB.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "status": {
          "description": "The backup status, such as available.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "volume_id": {
          "description": "The ID of the volume from which the backup was created.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "showImageMetadataForVolume": {
      "properties": {
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "bootable": {
          "description": "Enables or disables the bootable attribute. You can boot an\ninstance from a bootable volume.", 
          "format": "", 
          "required": false, 
          "type": "boolean"
        }, 
        "description": {
          "description": "The volume description.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "host": {
          "description": "The OpenStack Block Storage host where the existing volume resides.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs to associate with the\nvolume.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "name": {
          "description": "The volume name.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "ref": {
          "description": "A reference to the existing volume. The internal structure of this\nreference is dependent on the implementation of the volume driver,\nsee the specific driver's documentation for details of the required\nelements in the structure.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "volume": {
          "description": "A ``volume`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "volume_type": {
          "description": "The associated volume type.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "showQoSDetails_200": {
      "properties": {
        "consumer": {
          "description": "The consumer type.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The generated ID for the QoS specification.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "links": {
          "description": "The QoS specification links.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "name": {
          "description": "The name of the QoS specification.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "qos_specs": {
          "description": "A ``qos_specs`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "specs": {
          "description": "Specification key and value pairs.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "showQuotaDetailUser_200": {
      "properties": {
        "gigabytes": {
          "description": "The number of gigabytes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "snapshots": {
          "description": "The number of snapshots allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "volumes": {
          "description": "The number of volumes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "showQuotaUser_200": {
      "properties": {
        "gigabytes": {
          "description": "The number of gigabytes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "snapshots": {
          "description": "The number of snapshots allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "volumes": {
          "description": "The number of volumes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "showQuota_200": {
      "properties": {
        "gigabytes": {
          "description": "The number of gigabytes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "in_use": {
          "description": "The in use data size. Visible only if you set the ``usage=True``\nquery parameter.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "reserved": {
          "description": "Reserved volume size. Visible only if you set the ``usage=True``\nquery parameter.", 
          "format": "", 
          "required": false, 
          "type": "integer"
        }, 
        "snapshots": {
          "description": "The number of snapshots allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "volumes": {
          "description": "The number of volumes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "unsetVolumeimagemetadata": {
      "properties": {
        "key": {
          "description": "The metadata key name for the metadata that you want to remove.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "os-unset_image_metadata": {
          "description": "The ``os-unset_image_metadata`` action.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "updateQuota": {
      "properties": {
        "gigabytes": {
          "description": "The number of gigabytes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "snapshots": {
          "description": "The number of snapshots allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "volumes": {
          "description": "The number of volumes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "updateQuotaUser": {
      "properties": {
        "gigabytes": {
          "description": "The number of gigabytes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "snapshots": {
          "description": "The number of snapshots allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "volumes": {
          "description": "The number of volumes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "updateQuotaUser_200": {
      "properties": {
        "gigabytes": {
          "description": "The number of gigabytes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "snapshots": {
          "description": "The number of snapshots allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "volumes": {
          "description": "The number of volumes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "updateQuota_200": {
      "properties": {
        "gigabytes": {
          "description": "The number of gigabytes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "quota_set": {
          "description": "A ``quota_set`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "snapshots": {
          "description": "The number of snapshots allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "volumes": {
          "description": "The number of volumes allowed for each tenant.", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "updateVolumeType": {
      "properties": {
        "volume_type": {
          "description": "A volume type offers a way to categorize or group volumes.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "updateVolumeTypeExtraSpecs": {
      "properties": {
        "extra_specs": {
          "description": "A key:value pair that offers a way to show additional\nspecifications associated with the volume type. Examples include\ncapabilities, capacity, compression, and so on, depending on the\nstorage driver in use.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "volume_type": {
          "description": "A volume type offers a way to categorize or group volumes.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "updateVolume_200": {
      "properties": {
        "attachments": {
          "description": "One or more instance attachments.", 
          "format": "", 
          "required": true, 
          "type": "object"
        }, 
        "availability_zone": {
          "description": "The availability zone.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "created_at": {
          "description": "Date and time when the volume was created.", 
          "format": "date-time", 
          "required": true, 
          "type": "string"
        }, 
        "description": {
          "description": "The volume description.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The volume ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "metadata": {
          "description": "One or more metadata key and value pairs to associate with the\nvolume.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The volume name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "size": {
          "description": "The size of the volume, in gibibytes (GiB).", 
          "format": "", 
          "required": true, 
          "type": "integer"
        }, 
        "snapshot_id": {
          "description": "The ID of the source volume snapshot.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "source_volid": {
          "description": "The ID of the source volume.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "status": {
          "description": "The volume status.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "volume_type": {
          "description": "The associated volume type.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }
  }, 
  "externalDocs": {}, 
  "host": {}, 
  "info": {
    "license": {
      "name": "Apache 2.0", 
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }, 
    "service": "blockstorage", 
    "title": "Block Storage", 
    "version": "v2"
  }, 
  "paths": {
    "/": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "listVersions", 
        "method": "get", 
        "parameters": [], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "versions": [
                  {
                    "id": "v1.0", 
                    "links": [
                      {
                        "href": "http://23.253.228.211:8776/v1/", 
                        "rel": "self"
                      }
                    ], 
                    "status": "CURRENT", 
                    "updated": "2012-01-04T11:33:21Z"
                  }, 
                  {
                    "id": "v2.0", 
                    "links": [
                      {
                        "href": "http://23.253.228.211:8776/v2/", 
                        "rel": "self"
                      }
                    ], 
                    "status": "CURRENT", 
                    "updated": "2012-11-21T11:33:21Z"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "300": {
            "examples": {
              "application/json": {
                "versions": [
                  {
                    "id": "v1.0", 
                    "links": [
                      {
                        "href": "http://23.253.228.211:8776/v1/", 
                        "rel": "self"
                      }
                    ], 
                    "status": "CURRENT", 
                    "updated": "2012-01-04T11:33:21Z"
                  }, 
                  {
                    "id": "v2.0", 
                    "links": [
                      {
                        "href": "http://23.253.228.211:8776/v2/", 
                        "rel": "self"
                      }
                    ], 
                    "status": "CURRENT", 
                    "updated": "2012-11-21T11:33:21Z"
                  }
                ]
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Lists information about all Block Storage API versions.", 
        "tags": [
          "versions"
        ], 
        "title": "List API versions"
      }
    ], 
    "/v2": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "versionDetails", 
        "method": "get", 
        "parameters": [], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "version": {
                  "id": "v1.0", 
                  "links": [
                    {
                      "href": "http://23.253.228.211:8776/v2/", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://jorgew.github.com/block-storage-api/content/os-block-storage-1.0.pdf", 
                      "rel": "describedby", 
                      "type": "application/pdf"
                    }, 
                    {
                      "href": "http://docs.rackspacecloud.com/servers/api/v1.1/application.wadl", 
                      "rel": "describedby", 
                      "type": "application/vnd.sun.wadl+xml"
                    }
                  ], 
                  "media-types": [
                    {
                      "base": "application/xml", 
                      "type": "application/vnd.openstack.volume+xml;version=1"
                    }, 
                    {
                      "base": "application/json", 
                      "type": "application/vnd.openstack.volume+json;version=1"
                    }
                  ], 
                  "status": "CURRENT", 
                  "updated": "2012-01-04T11:33:21Z"
                }
              }
            }, 
            "headers": {}
          }, 
          "203": {
            "examples": {
              "application/json": {
                "version": {
                  "id": "v1.0", 
                  "links": [
                    {
                      "href": "http://23.253.228.211:8776/v2/", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://jorgew.github.com/block-storage-api/content/os-block-storage-1.0.pdf", 
                      "rel": "describedby", 
                      "type": "application/pdf"
                    }, 
                    {
                      "href": "http://docs.rackspacecloud.com/servers/api/v1.1/application.wadl", 
                      "rel": "describedby", 
                      "type": "application/vnd.sun.wadl+xml"
                    }
                  ], 
                  "media-types": [
                    {
                      "base": "application/xml", 
                      "type": "application/vnd.openstack.volume+xml;version=1"
                    }, 
                    {
                      "base": "application/json", 
                      "type": "application/vnd.openstack.volume+json;version=1"
                    }
                  ], 
                  "status": "CURRENT", 
                  "updated": "2012-01-04T11:33:21Z"
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Shows details for Block Storage API v2.", 
        "tags": [
          "versions"
        ], 
        "title": "Show API version details"
      }
    ], 
    "/v2/{tenant_id}/backups": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {
          "application/json": {
            "backup": {
              "container": null, 
              "description": null, 
              "incremental": "True", 
              "name": "backup001", 
              "volume_id": "64f5d2fb-d836-4063-b7e2-544d5c1ff607"
            }
          }
        }, 
        "id": "createBackup", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createBackup"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "backup": {
                  "id": "deac8b8c-35c9-4c71-acaa-889c2d5d5c8e", 
                  "links": [
                    {
                      "href": "http://localhost:8776/v2/c95fc3e4afe248a49a28828f286a7b38/backups/deac8b8c-35c9-4c71-acaa-889c2d5d5c8e", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://localhost:8776/c95fc3e4afe248a49a28828f286a7b38/backups/deac8b8c-35c9-4c71-acaa-889c2d5d5c8e", 
                      "rel": "bookmark"
                    }
                  ], 
                  "name": "backup001"
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Creates a Block Storage backup from a volume.", 
        "tags": [
          "ext-backups"
        ], 
        "title": "Create backup"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "listBackups", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Sorts by the requested image attribute. Accepted values are\n``name`` , ``status`` , ``container_format`` , ``disk_format`` ,\n``size`` , ``id`` , ``created_at`` , and ``updated_at`` . Default\nis ``created_at`` . The API uses the natural sorting direction of\nthe image attribute that is provided as the ``sort_key`` .", 
            "format": "", 
            "in": "query", 
            "name": "sort_key", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Sorts by one or more sets of attribute and sort direction\ncombinations. If you omit the sort direction in a set, default is\n``desc`` .", 
            "format": "", 
            "in": "query", 
            "name": "sort_dir", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a specified page size of returned items from the query.\nReturns a number of items up to the specified limit value. Use the\n``limit`` parameter to make an initial limited request and use the\nID of the last-seen item from the response as the ``marker``\nparameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "Specifies the ID of the last-seen item. Use the ``limit`` parameter\nto make an initial limited request and use the ID of the last-seen\nitem from the response as the ``marker`` parameter value in a\nsubsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "backups": [
                  {
                    "id": "2ef47aee-8844-490c-804d-2a8efe561c65", 
                    "links": [
                      {
                        "href": "http://localhost:8776/v1/c95fc3e4afe248a49a28828f286a7b38/backups/2ef47aee-8844-490c-804d-2a8efe561c65", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://localhost:8776/c95fc3e4afe248a49a28828f286a7b38/backups/2ef47aee-8844-490c-804d-2a8efe561c65", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "backup001"
                  }, 
                  {
                    "id": "4dbf0ec2-0b57-4669-9823-9f7c76f2b4f8", 
                    "links": [
                      {
                        "href": "http://localhost:8776/v1/c95fc3e4afe248a49a28828f286a7b38/backups/4dbf0ec2-0b57-4669-9823-9f7c76f2b4f8", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://localhost:8776/c95fc3e4afe248a49a28828f286a7b38/backups/4dbf0ec2-0b57-4669-9823-9f7c76f2b4f8", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "backup002"
                  }
                ]
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Lists backups defined in Block Storage to which the tenant who submits the request has access.", 
        "tags": [
          "ext-backups"
        ], 
        "title": "List backups"
      }
    ], 
    "/v2/{tenant_id}/backups/detail": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "listBackupsDetails", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Sorts by the requested image attribute. Accepted values are\n``name`` , ``status`` , ``container_format`` , ``disk_format`` ,\n``size`` , ``id`` , ``created_at`` , and ``updated_at`` . Default\nis ``created_at`` . The API uses the natural sorting direction of\nthe image attribute that is provided as the ``sort_key`` .", 
            "format": "", 
            "in": "query", 
            "name": "sort_key", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Sorts by one or more sets of attribute and sort direction\ncombinations. If you omit the sort direction in a set, default is\n``desc`` .", 
            "format": "", 
            "in": "query", 
            "name": "sort_dir", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a specified page size of returned items from the query.\nReturns a number of items up to the specified limit value. Use the\n``limit`` parameter to make an initial limited request and use the\nID of the last-seen item from the response as the ``marker``\nparameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "Specifies the ID of the last-seen item. Use the ``limit`` parameter\nto make an initial limited request and use the ID of the last-seen\nitem from the response as the ``marker`` parameter value in a\nsubsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "backups": [
                  {
                    "availability_zone": "az1", 
                    "container": "volumebackups", 
                    "created_at": "2013-04-02T10:35:27.000000", 
                    "description": null, 
                    "fail_reason": null, 
                    "has_dependent_backups": "False", 
                    "id": "2ef47aee-8844-490c-804d-2a8efe561c65", 
                    "is_incremental": "True", 
                    "links": [
                      {
                        "href": "http://localhost:8776/v1/c95fc3e4afe248a49a28828f286a7b38/backups/2ef47aee-8844-490c-804d-2a8efe561c65", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://localhost:8776/c95fc3e4afe248a49a28828f286a7b38/backups/2ef47aee-8844-490c-804d-2a8efe561c65", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "backup001", 
                    "object_count": 22, 
                    "size": 1, 
                    "status": "available", 
                    "volume_id": "e5185058-943a-4cb4-96d9-72c184c337d6"
                  }, 
                  {
                    "availability_zone": "az1", 
                    "container": "volumebackups", 
                    "created_at": "2013-04-02T10:21:48.000000", 
                    "description": null, 
                    "fail_reason": null, 
                    "has_dependent_backups": "False", 
                    "id": "4dbf0ec2-0b57-4669-9823-9f7c76f2b4f8", 
                    "is_incremental": "True", 
                    "links": [
                      {
                        "href": "http://localhost:8776/v1/c95fc3e4afe248a49a28828f286a7b38/backups/4dbf0ec2-0b57-4669-9823-9f7c76f2b4f8", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://localhost:8776/c95fc3e4afe248a49a28828f286a7b38/backups/4dbf0ec2-0b57-4669-9823-9f7c76f2b4f8", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "backup002", 
                    "object_count": 22, 
                    "size": 1, 
                    "status": "available", 
                    "volume_id": "e5185058-943a-4cb4-96d9-72c184c337d6"
                  }
                ]
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Lists detailed information for backups defined in Block Storage to which the tenant who submits the request has access.", 
        "tags": [
          "ext-backups"
        ], 
        "title": "List backups (detailed)"
      }
    ], 
    "/v2/{tenant_id}/backups/{backup_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "showBackup", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier for a backup.", 
            "format": "", 
            "in": "path", 
            "name": "backup_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "backup": {
                  "availability_zone": "az1", 
                  "container": "volumebackups", 
                  "created_at": "2013-04-02T10:35:27.000000", 
                  "description": null, 
                  "fail_reason": null, 
                  "has_dependent_backups": "False", 
                  "id": "2ef47aee-8844-490c-804d-2a8efe561c65", 
                  "is_incremental": "True", 
                  "links": [
                    {
                      "href": "http://localhost:8776/v1/c95fc3e4afe248a49a28828f286a7b38/backups/2ef47aee-8844-490c-804d-2a8efe561c65", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://localhost:8776/c95fc3e4afe248a49a28828f286a7b38/backups/2ef47aee-8844-490c-804d-2a8efe561c65", 
                      "rel": "bookmark"
                    }
                  ], 
                  "name": "backup001", 
                  "object_count": 22, 
                  "size": 1, 
                  "status": "available", 
                  "volume_id": "e5185058-943a-4cb4-96d9-72c184c337d6"
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Shows details for a specified backup.", 
        "tags": [
          "ext-backups"
        ], 
        "title": "Show backup details"
      }, 
      {
        "consumes": [], 
        "description": "", 
        "examples": {}, 
        "id": "deleteBackup", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier for a backup.", 
            "format": "", 
            "in": "path", 
            "name": "backup_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Deletes a specified backup.", 
        "tags": [
          "ext-backups"
        ], 
        "title": "Delete backup"
      }
    ], 
    "/v2/{tenant_id}/backups/{backup_id}/action": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "The backup and any backup data is deleted.\n\nThe backup driver returns the ``405`` status code if it does not\nsupport this operation.", 
        "examples": {
          "application/json": {
            "os-force_delete": {}
          }
        }, 
        "id": "forceDeleteBackup", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/forceDeleteBackup"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier for a backup.", 
            "format": "", 
            "in": "path", 
            "name": "backup_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Force-deletes a specified backup. Specify the ``os-force_delete`` action in the request body.", 
        "tags": [
          "ext-backups-actions-v2"
        ], 
        "title": "Force-delete backup"
      }
    ], 
    "/v2/{tenant_id}/backups/{backup_id}/restore": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "You must specify either the volume ID or name. If you specify both\nthe volume ID and name, the ID takes priority.", 
        "examples": {
          "application/json": {
            "restore": {
              "name": "vol-01", 
              "volume_id": "64f5d2fb-d836-4063-b7e2-544d5c1ff607"
            }
          }
        }, 
        "id": "restoreBackup", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/restoreBackup"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier for a backup.", 
            "format": "", 
            "in": "path", 
            "name": "backup_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "restore": {
                  "backup_id": "2ef47aee-8844-490c-804d-2a8efe561c65", 
                  "volume_id": "795114e8-7489-40be-a978-83797f2c1dd3"
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Restores a Block Storage backup to an existing or new Block Storage volume.", 
        "tags": [
          "ext-backups"
        ], 
        "title": "Restore backup"
      }
    ], 
    "/v2/{tenant_id}/capabilities/{hostname}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "getBackendCapabilities", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The name of the host that hosts the storage back end.", 
            "format": "", 
            "in": "path", 
            "name": "hostname", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "description": "These are volume type options provided by Cinder LVM driver, blah, blah.", 
                "display_name": "Capabilities of Cinder LVM driver", 
                "driver_version": "2.0.0", 
                "namespace": "OS::Storage::Capabilities::fake", 
                "pool_name": "pool", 
                "properties": {
                  "compression": {
                    "description": "Enables compression.", 
                    "title": "Compression", 
                    "type": "boolean"
                  }, 
                  "qos": {
                    "description": "Enables QoS.", 
                    "title": "QoS", 
                    "type": "boolean"
                  }, 
                  "replication": {
                    "description": "Enables replication.", 
                    "title": "Replication", 
                    "type": "boolean"
                  }, 
                  "thin_provisioning": {
                    "description": "Sets thin provisioning.", 
                    "title": "Thin Provisioning", 
                    "type": "boolean"
                  }
                }, 
                "storage_protocol": "iSCSI", 
                "vendor_name": "OpenStack", 
                "visibility": "public", 
                "volume_backend_name": "lvm"
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Shows capabilities for a specified storage back end.", 
        "tags": [
          "os-backend-capabilities-v2"
        ], 
        "title": "Show back-end capabilities"
      }
    ], 
    "/v2/{tenant_id}/extensions": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "listExtensions-cinder-v2", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "extensions": [
                  {
                    "alias": "OS-SCH-HNT", 
                    "description": "Pass arbitrary key/value pairs to the scheduler.", 
                    "links": [], 
                    "name": "SchedulerHints", 
                    "namespace": "http://docs.openstack.org/block-service/ext/scheduler-hints/api/v2", 
                    "updated": "2013-04-18T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-hosts", 
                    "description": "Admin-only host administration.", 
                    "links": [], 
                    "name": "Hosts", 
                    "namespace": "http://docs.openstack.org/volume/ext/hosts/api/v1.1", 
                    "updated": "2011-06-29T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-vol-tenant-attr", 
                    "description": "Expose the internal project_id as an attribute of a volume.", 
                    "links": [], 
                    "name": "VolumeTenantAttribute", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume_tenant_attribute/api/v1", 
                    "updated": "2011-11-03T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-quota-sets", 
                    "description": "Quota management support.", 
                    "links": [], 
                    "name": "Quotas", 
                    "namespace": "http://docs.openstack.org/volume/ext/quotas-sets/api/v1.1", 
                    "updated": "2011-08-08T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-types-manage", 
                    "description": "Types manage support.", 
                    "links": [], 
                    "name": "TypesManage", 
                    "namespace": "http://docs.openstack.org/volume/ext/types-manage/api/v1", 
                    "updated": "2011-08-24T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-volume-encryption-metadata", 
                    "description": "Volume encryption metadata retrieval support.", 
                    "links": [], 
                    "name": "VolumeEncryptionMetadata", 
                    "namespace": "http://docs.openstack.org/volume/ext/os-volume-encryption-metadata/api/v1", 
                    "updated": "2013-07-10T00:00:00+00:00"
                  }, 
                  {
                    "alias": "backups", 
                    "description": "Backups support.", 
                    "links": [], 
                    "name": "Backups", 
                    "namespace": "http://docs.openstack.org/volume/ext/backups/api/v1", 
                    "updated": "2012-12-12T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-snapshot-actions", 
                    "description": "Enable snapshot manager actions.", 
                    "links": [], 
                    "name": "SnapshotActions", 
                    "namespace": "http://docs.openstack.org/volume/ext/snapshot-actions/api/v1.1", 
                    "updated": "2013-07-16T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-volume-actions", 
                    "description": "Enable volume actions\n    ", 
                    "links": [], 
                    "name": "VolumeActions", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume-actions/api/v1.1", 
                    "updated": "2012-05-31T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-used-limits", 
                    "description": "Provide data on limited resources that are being used.", 
                    "links": [], 
                    "name": "UsedLimits", 
                    "namespace": "http://docs.openstack.org/volume/ext/used-limits/api/v1.1", 
                    "updated": "2013-10-03T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-volume-unmanage", 
                    "description": "Enable volume unmanage operation.", 
                    "links": [], 
                    "name": "VolumeUnmanage", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume-unmanage/api/v1.1", 
                    "updated": "2012-05-31T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-vol-host-attr", 
                    "description": "Expose host as an attribute of a volume.", 
                    "links": [], 
                    "name": "VolumeHostAttribute", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume_host_attribute/api/v1", 
                    "updated": "2011-11-03T00:00:00+00:00"
                  }, 
                  {
                    "alias": "encryption", 
                    "description": "Encryption support for volume types.", 
                    "links": [], 
                    "name": "VolumeTypeEncryption", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume-type-encryption/api/v1", 
                    "updated": "2013-07-01T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-availability-zone", 
                    "description": "Describe Availability Zones.", 
                    "links": [], 
                    "name": "AvailabilityZones", 
                    "namespace": "http://docs.openstack.org/volume/ext/os-availability-zone/api/v1", 
                    "updated": "2013-06-27T00:00:00+00:00"
                  }, 
                  {
                    "alias": "qos-specs", 
                    "description": "QoS specs support.", 
                    "links": [], 
                    "name": "Qos_specs_manage", 
                    "namespace": "http://docs.openstack.org/volume/ext/qos-specs/api/v1", 
                    "updated": "2013-08-02T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-types-extra-specs", 
                    "description": "Type extra specs support.", 
                    "links": [], 
                    "name": "TypesExtraSpecs", 
                    "namespace": "http://docs.openstack.org/volume/ext/types-extra-specs/api/v1", 
                    "updated": "2011-08-24T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-vol-mig-status-attr", 
                    "description": "Expose migration_status as an attribute of a volume.", 
                    "links": [], 
                    "name": "VolumeMigStatusAttribute", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume_mig_status_attribute/api/v1", 
                    "updated": "2013-08-08T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-image-create", 
                    "description": "Allow creating a volume from an image in the Create Volume v1 API.", 
                    "links": [], 
                    "name": "CreateVolumeExtension", 
                    "namespace": "http://docs.openstack.org/volume/ext/image-create/api/v1", 
                    "updated": "2012-08-13T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-extended-services", 
                    "description": "Extended services support.", 
                    "links": [], 
                    "name": "ExtendedServices", 
                    "namespace": "http://docs.openstack.org/volume/ext/extended_services/api/v2", 
                    "updated": "2014-01-10T00:00:00-00:00"
                  }, 
                  {
                    "alias": "os-extended-snapshot-attributes", 
                    "description": "Extended SnapshotAttributes support.", 
                    "links": [], 
                    "name": "ExtendedSnapshotAttributes", 
                    "namespace": "http://docs.openstack.org/volume/ext/extended_snapshot_attributes/api/v1", 
                    "updated": "2012-06-19T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-vol-image-meta", 
                    "description": "Show image metadata associated with the volume.", 
                    "links": [], 
                    "name": "VolumeImageMetadata", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume_image_metadata/api/v1", 
                    "updated": "2012-12-07T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-quota-class-sets", 
                    "description": "Quota classes management support.", 
                    "links": [], 
                    "name": "QuotaClasses", 
                    "namespace": "http://docs.openstack.org/volume/ext/quota-classes-sets/api/v1.1", 
                    "updated": "2012-03-12T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-volume-transfer", 
                    "description": "Volume transfer management support.", 
                    "links": [], 
                    "name": "VolumeTransfer", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume-transfer/api/v1.1", 
                    "updated": "2013-05-29T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-volume-manage", 
                    "description": "Allows existing backend storage to be 'managed' by Cinder.", 
                    "links": [], 
                    "name": "VolumeManage", 
                    "namespace": "http://docs.openstack.org/volume/ext/os-volume-manage/api/v1", 
                    "updated": "2014-02-10T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-admin-actions", 
                    "description": "Enable admin actions.", 
                    "links": [], 
                    "name": "AdminActions", 
                    "namespace": "http://docs.openstack.org/volume/ext/admin-actions/api/v1.1", 
                    "updated": "2012-08-25T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-services", 
                    "description": "Services support.", 
                    "links": [], 
                    "name": "Services", 
                    "namespace": "http://docs.openstack.org/volume/ext/services/api/v2", 
                    "updated": "2012-10-28T00:00:00-00:00"
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "300": {
            "examples": {
              "application/json": {
                "extensions": [
                  {
                    "alias": "OS-SCH-HNT", 
                    "description": "Pass arbitrary key/value pairs to the scheduler.", 
                    "links": [], 
                    "name": "SchedulerHints", 
                    "namespace": "http://docs.openstack.org/block-service/ext/scheduler-hints/api/v2", 
                    "updated": "2013-04-18T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-hosts", 
                    "description": "Admin-only host administration.", 
                    "links": [], 
                    "name": "Hosts", 
                    "namespace": "http://docs.openstack.org/volume/ext/hosts/api/v1.1", 
                    "updated": "2011-06-29T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-vol-tenant-attr", 
                    "description": "Expose the internal project_id as an attribute of a volume.", 
                    "links": [], 
                    "name": "VolumeTenantAttribute", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume_tenant_attribute/api/v1", 
                    "updated": "2011-11-03T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-quota-sets", 
                    "description": "Quota management support.", 
                    "links": [], 
                    "name": "Quotas", 
                    "namespace": "http://docs.openstack.org/volume/ext/quotas-sets/api/v1.1", 
                    "updated": "2011-08-08T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-types-manage", 
                    "description": "Types manage support.", 
                    "links": [], 
                    "name": "TypesManage", 
                    "namespace": "http://docs.openstack.org/volume/ext/types-manage/api/v1", 
                    "updated": "2011-08-24T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-volume-encryption-metadata", 
                    "description": "Volume encryption metadata retrieval support.", 
                    "links": [], 
                    "name": "VolumeEncryptionMetadata", 
                    "namespace": "http://docs.openstack.org/volume/ext/os-volume-encryption-metadata/api/v1", 
                    "updated": "2013-07-10T00:00:00+00:00"
                  }, 
                  {
                    "alias": "backups", 
                    "description": "Backups support.", 
                    "links": [], 
                    "name": "Backups", 
                    "namespace": "http://docs.openstack.org/volume/ext/backups/api/v1", 
                    "updated": "2012-12-12T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-snapshot-actions", 
                    "description": "Enable snapshot manager actions.", 
                    "links": [], 
                    "name": "SnapshotActions", 
                    "namespace": "http://docs.openstack.org/volume/ext/snapshot-actions/api/v1.1", 
                    "updated": "2013-07-16T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-volume-actions", 
                    "description": "Enable volume actions\n    ", 
                    "links": [], 
                    "name": "VolumeActions", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume-actions/api/v1.1", 
                    "updated": "2012-05-31T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-used-limits", 
                    "description": "Provide data on limited resources that are being used.", 
                    "links": [], 
                    "name": "UsedLimits", 
                    "namespace": "http://docs.openstack.org/volume/ext/used-limits/api/v1.1", 
                    "updated": "2013-10-03T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-volume-unmanage", 
                    "description": "Enable volume unmanage operation.", 
                    "links": [], 
                    "name": "VolumeUnmanage", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume-unmanage/api/v1.1", 
                    "updated": "2012-05-31T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-vol-host-attr", 
                    "description": "Expose host as an attribute of a volume.", 
                    "links": [], 
                    "name": "VolumeHostAttribute", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume_host_attribute/api/v1", 
                    "updated": "2011-11-03T00:00:00+00:00"
                  }, 
                  {
                    "alias": "encryption", 
                    "description": "Encryption support for volume types.", 
                    "links": [], 
                    "name": "VolumeTypeEncryption", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume-type-encryption/api/v1", 
                    "updated": "2013-07-01T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-availability-zone", 
                    "description": "Describe Availability Zones.", 
                    "links": [], 
                    "name": "AvailabilityZones", 
                    "namespace": "http://docs.openstack.org/volume/ext/os-availability-zone/api/v1", 
                    "updated": "2013-06-27T00:00:00+00:00"
                  }, 
                  {
                    "alias": "qos-specs", 
                    "description": "QoS specs support.", 
                    "links": [], 
                    "name": "Qos_specs_manage", 
                    "namespace": "http://docs.openstack.org/volume/ext/qos-specs/api/v1", 
                    "updated": "2013-08-02T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-types-extra-specs", 
                    "description": "Type extra specs support.", 
                    "links": [], 
                    "name": "TypesExtraSpecs", 
                    "namespace": "http://docs.openstack.org/volume/ext/types-extra-specs/api/v1", 
                    "updated": "2011-08-24T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-vol-mig-status-attr", 
                    "description": "Expose migration_status as an attribute of a volume.", 
                    "links": [], 
                    "name": "VolumeMigStatusAttribute", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume_mig_status_attribute/api/v1", 
                    "updated": "2013-08-08T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-image-create", 
                    "description": "Allow creating a volume from an image in the Create Volume v1 API.", 
                    "links": [], 
                    "name": "CreateVolumeExtension", 
                    "namespace": "http://docs.openstack.org/volume/ext/image-create/api/v1", 
                    "updated": "2012-08-13T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-extended-services", 
                    "description": "Extended services support.", 
                    "links": [], 
                    "name": "ExtendedServices", 
                    "namespace": "http://docs.openstack.org/volume/ext/extended_services/api/v2", 
                    "updated": "2014-01-10T00:00:00-00:00"
                  }, 
                  {
                    "alias": "os-extended-snapshot-attributes", 
                    "description": "Extended SnapshotAttributes support.", 
                    "links": [], 
                    "name": "ExtendedSnapshotAttributes", 
                    "namespace": "http://docs.openstack.org/volume/ext/extended_snapshot_attributes/api/v1", 
                    "updated": "2012-06-19T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-vol-image-meta", 
                    "description": "Show image metadata associated with the volume.", 
                    "links": [], 
                    "name": "VolumeImageMetadata", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume_image_metadata/api/v1", 
                    "updated": "2012-12-07T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-quota-class-sets", 
                    "description": "Quota classes management support.", 
                    "links": [], 
                    "name": "QuotaClasses", 
                    "namespace": "http://docs.openstack.org/volume/ext/quota-classes-sets/api/v1.1", 
                    "updated": "2012-03-12T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-volume-transfer", 
                    "description": "Volume transfer management support.", 
                    "links": [], 
                    "name": "VolumeTransfer", 
                    "namespace": "http://docs.openstack.org/volume/ext/volume-transfer/api/v1.1", 
                    "updated": "2013-05-29T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-volume-manage", 
                    "description": "Allows existing backend storage to be 'managed' by Cinder.", 
                    "links": [], 
                    "name": "VolumeManage", 
                    "namespace": "http://docs.openstack.org/volume/ext/os-volume-manage/api/v1", 
                    "updated": "2014-02-10T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-admin-actions", 
                    "description": "Enable admin actions.", 
                    "links": [], 
                    "name": "AdminActions", 
                    "namespace": "http://docs.openstack.org/volume/ext/admin-actions/api/v1.1", 
                    "updated": "2012-08-25T00:00:00+00:00"
                  }, 
                  {
                    "alias": "os-services", 
                    "description": "Services support.", 
                    "links": [], 
                    "name": "Services", 
                    "namespace": "http://docs.openstack.org/volume/ext/services/api/v2", 
                    "updated": "2012-10-28T00:00:00-00:00"
                  }
                ]
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Lists Block Storage API extensions.", 
        "tags": [
          "extensions"
        ], 
        "title": "List API extensions"
      }
    ], 
    "/v2/{tenant_id}/limits": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "An absolute limit value of ``-1`` indicates that the absolute limit\nfor the item is infinite.", 
        "examples": {}, 
        "id": "showAbsoluteLimits", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant or project in a multi-tenancy cloud.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "limits": {
                  "absolute": {
                    "maxTotalSnapshots": 10, 
                    "maxTotalVolumeGigabytes": 1000, 
                    "maxTotalVolumes": 10, 
                    "totalGigabytesUsed": 0, 
                    "totalSnapshotsUsed": 0, 
                    "totalVolumesUsed": 0
                  }, 
                  "rate": []
                }
              }
            }, 
            "headers": {}
          }, 
          "203": {
            "examples": {
              "application/json": {
                "limits": {
                  "absolute": {
                    "maxTotalSnapshots": 10, 
                    "maxTotalVolumeGigabytes": 1000, 
                    "maxTotalVolumes": 10, 
                    "totalGigabytesUsed": 0, 
                    "totalSnapshotsUsed": 0, 
                    "totalVolumesUsed": 0
                  }, 
                  "rate": []
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Shows absolute limits for a tenant.", 
        "tags": [
          "limits"
        ], 
        "title": "Show absolute limits"
      }
    ], 
    "/v2/{tenant_id}/os-quota-sets/defaults": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "getDefaults", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant for which you want to show or update quotas.\nThis ID is different from the first tenant ID that you specify in\nthe URI: That ID is for the admin tenant.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "quota_set": {
                  "gigabytes": 5, 
                  "snapshots": 10, 
                  "volumes": 20
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Gets default quotas for a tenant.", 
        "tags": [
          "quota-sets"
        ], 
        "title": "Get default quotas"
      }
    ], 
    "/v2/{tenant_id}/os-quota-sets/{tenant_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "showQuota", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant for which you want to show or update quotas.\nThis ID is different from the first tenant ID that you specify in\nthe URI: That ID is for the admin tenant.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Set to ``usage=True`` to show quota usage. Default is ``False`` .", 
            "format": "", 
            "in": "query", 
            "name": "usage", 
            "required": false, 
            "type": "boolean"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "quota_set": {
                  "gigabytes": 5, 
                  "snapshots": 10, 
                  "volumes": 20
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Shows quotas for a tenant.", 
        "tags": [
          "quota-sets"
        ], 
        "title": "Show quotas"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {
          "application/json": {
            "quota_set": {
              "snapshots": 45
            }
          }
        }, 
        "id": "updateQuota", 
        "method": "put", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateQuota"
            }
          }, 
          {
            "description": "The ID for the tenant for which you want to show or update quotas.\nThis ID is different from the first tenant ID that you specify in\nthe URI: That ID is for the admin tenant.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "quota_set": {
                  "snapshots": 45
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Updates quotas for a tenant.", 
        "tags": [
          "quota-sets"
        ], 
        "title": "Update quotas"
      }, 
      {
        "consumes": [], 
        "description": "", 
        "examples": {}, 
        "id": "deleteQuotas", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The ID for the tenant for which you want to show or update quotas.\nThis ID is different from the first tenant ID that you specify in\nthe URI: That ID is for the admin tenant.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "200": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Deletes quotas for a tenant so the quotas revert to default values.", 
        "tags": [
          "quota-sets"
        ], 
        "title": "Delete quotas"
      }
    ], 
    "/v2/{tenant_id}/os-quota-sets/{tenant_id}/detail/{user_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "showQuotaDetailUser", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant for which you want to show or update quotas.\nThis ID is different from the first tenant ID that you specify in\nthe URI: That ID is for the admin tenant.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The user ID. Specify in the URI as a query string:\n``user_id={user_id}`` .", 
            "format": "", 
            "in": "path", 
            "name": "user_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "quota_set": {
                  "snapshots": 45
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Shows details for quotas for a specified tenant and user.", 
        "tags": [
          "quota-sets"
        ], 
        "title": "Show quota details for user"
      }
    ], 
    "/v2/{tenant_id}/os-quota-sets/{tenant_id}/{user_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "showQuotaUser", 
        "method": "get", 
        "parameters": [
          {
            "description": "The ID for the tenant for which you want to show or update quotas.\nThis ID is different from the first tenant ID that you specify in\nthe URI: That ID is for the admin tenant.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The user ID. Specify in the URI as a query string:\n``user_id={user_id}`` .", 
            "format": "", 
            "in": "path", 
            "name": "user_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "quota_set": {
                  "snapshots": 45
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Enables an admin user to show quotas for a specified tenant and user.", 
        "tags": [
          "quota-sets"
        ], 
        "title": "Show quotas for user"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {
          "application/json": {
            "quota_set": {
              "snapshots": 45
            }
          }
        }, 
        "id": "updateQuotaUser", 
        "method": "put", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateQuotaUser"
            }
          }, 
          {
            "description": "The ID for the tenant for which you want to show or update quotas.\nThis ID is different from the first tenant ID that you specify in\nthe URI: That ID is for the admin tenant.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The user ID. Specify in the URI as a query string:\n``user_id={user_id}`` .", 
            "format": "", 
            "in": "path", 
            "name": "user_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "quota_set": {
                  "snapshots": 45
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Updates quotas for a specified tenant/project and user.", 
        "tags": [
          "quota-sets"
        ], 
        "title": "Update quotas for user"
      }, 
      {
        "consumes": [], 
        "description": "", 
        "examples": {}, 
        "id": "deleteQuotasUser", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The ID for the tenant for which you want to show or update quotas.\nThis ID is different from the first tenant ID that you specify in\nthe URI: That ID is for the admin tenant.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The user ID. Specify in the URI as a query string:\n``user_id={user_id}`` .", 
            "format": "", 
            "in": "path", 
            "name": "user_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "200": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Deletes quotas for a user so that the quotas revert to default values.", 
        "tags": [
          "quota-sets"
        ], 
        "title": "Delete quotas for user"
      }
    ], 
    "/v2/{tenant_id}/os-vol-image-meta": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "When the request is made, the caller must specify (in the ref\nelement) a reference to an existing storage volume. Each storage\ndriver may interpret the existing storage volume reference\ndifferently, but should accept a reference structure containing\neither a source-volume-id or source-volume-name element if\npossible.", 
        "examples": {
          "application/json": {
            "volume": {
              "availability_zone": "az2", 
              "bootable": "True", 
              "description": "Volume imported from existingLV", 
              "host": "geraint-VirtualBox", 
              "metadata": {
                "key1": "value1", 
                "key2": "value2"
              }, 
              "name": "New Volume", 
              "ref": {
                "source-volume-id": "1234", 
                "source-volume-name": "existingLV"
              }, 
              "volume_type": null
            }
          }
        }, 
        "id": "showImageMetadataForVolume", 
        "method": "get", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/showImageMetadataForVolume"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "volume": {
                  "attachments": [], 
                  "availability_zone": "az2", 
                  "bootable": "false", 
                  "created_at": "2014-07-18T00:12:54.000000", 
                  "description": "Volume imported from existingLV", 
                  "encrypted": "false", 
                  "id": "23cf872b-c781-4cd4-847d-5f2ec8cbd91c", 
                  "links": [
                    {
                      "href": "http://10.0.2.15:8776/v2/87c8522052ca4eed98bc672b4c1a3ddb/volumes/23cf872b-c781-4cd4-847d-5f2ec8cbd91c", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://10.0.2.15:8776/87c8522052ca4eed98bc672b4c1a3ddb/volumes/23cf872b-c781-4cd4-847d-5f2ec8cbd91c", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "key1": "value1", 
                    "key2": "value2"
                  }, 
                  "name": "New Volume", 
                  "os-vol-tenant-attr:tenant_id": "87c8522052ca4eed98bc672b4c1a3ddb", 
                  "size": 0, 
                  "snapshot_id": null, 
                  "source_volid": null, 
                  "status": "creating", 
                  "user_id": "eae1472b5fc5496998a3d06550929e7e", 
                  "volume_type": null
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Shows image metadata that is associated with a specified volume.", 
        "tags": [
          "os-vol-image-meta-v2"
        ], 
        "title": "Show image metadata for volume"
      }
    ], 
    "/v2/{tenant_id}/os-volume-manage": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "The caller must specify a reference to an existing storage volume\nin the ref parameter in the request. Although each storage driver\nmight interpret this reference differently, the driver should\naccept a reference structure that contains either a source-volume-\nid or source-volume-name element, if possible.\n\nThe API chooses the size of the volume by rounding up the size of\nthe existing storage volume to the next gibibyte (GiB).", 
        "examples": {
          "application/json": {
            "volume": {
              "availability_zone": "az2", 
              "bootable": "True", 
              "description": "Volume imported from existingLV", 
              "host": "geraint-VirtualBox", 
              "metadata": {
                "key1": "value1", 
                "key2": "value2"
              }, 
              "name": "New Volume", 
              "ref": {
                "source-volume-id": "1234", 
                "source-volume-name": "existingLV"
              }, 
              "volume_type": null
            }
          }
        }, 
        "id": "manageExisting", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/manageExisting"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "volume": {
                  "attachments": [], 
                  "availability_zone": "az2", 
                  "bootable": "false", 
                  "created_at": "2014-07-18T00:12:54.000000", 
                  "description": "Volume imported from existingLV", 
                  "encrypted": "false", 
                  "id": "23cf872b-c781-4cd4-847d-5f2ec8cbd91c", 
                  "links": [
                    {
                      "href": "http://10.0.2.15:8776/v2/87c8522052ca4eed98bc672b4c1a3ddb/volumes/23cf872b-c781-4cd4-847d-5f2ec8cbd91c", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://10.0.2.15:8776/87c8522052ca4eed98bc672b4c1a3ddb/volumes/23cf872b-c781-4cd4-847d-5f2ec8cbd91c", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "key1": "value1", 
                    "key2": "value2"
                  }, 
                  "name": "New Volume", 
                  "os-vol-tenant-attr:tenant_id": "87c8522052ca4eed98bc672b4c1a3ddb", 
                  "size": 0, 
                  "snapshot_id": null, 
                  "source_volid": null, 
                  "status": "creating", 
                  "user_id": "eae1472b5fc5496998a3d06550929e7e", 
                  "volume_type": null
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Creates a Block Storage volume by using existing storage rather than allocating new storage.", 
        "tags": [
          "volume-manage"
        ], 
        "title": "Manage existing volume"
      }
    ], 
    "/v2/{tenant_id}/qos-specs": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {
          "application/json": {
            "qos_specs": {
              "availability": "100", 
              "name": "reliability-spec", 
              "numberOfFailures": "0"
            }
          }
        }, 
        "id": "createQoSSpec", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createQoSSpec"
            }
          }, 
          {
            "description": "The unique ID of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "links": [
                  {
                    "href": "http://23.253.228.211:8776/v2/e1cf63117ae74309a5bcc2002a23be8b/qos_specs/0388d6c6-d5d4-42a3-b289-95205c50dd15", 
                    "rel": "self"
                  }, 
                  {
                    "href": "http://23.253.228.211:8776/e1cf63117ae74309a5bcc2002a23be8b/qos_specs/0388d6c6-d5d4-42a3-b289-95205c50dd15", 
                    "rel": "bookmark"
                  }
                ], 
                "qos_specs": {
                  "consumer": "back-end", 
                  "id": "0388d6c6-d5d4-42a3-b289-95205c50dd15", 
                  "name": "reliability-spec", 
                  "specs": {
                    "availability": "100", 
                    "numberOfFailures": "0"
                  }
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Creates a QoS specification.", 
        "tags": [
          "qos-v2-qos-specs"
        ], 
        "title": "Create QoS specification"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "listQoSSpecs", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique ID of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "qos_specs": [
                  {
                    "consumer": "back-end", 
                    "id": "0388d6c6-d5d4-42a3-b289-95205c50dd15", 
                    "name": "reliability-spec", 
                    "specs": {
                      "availability": "100", 
                      "numberOfFailures": "0"
                    }
                  }, 
                  {
                    "consumer": "back-end", 
                    "id": "ecfc6e2e-7117-44a4-8eec-f84d04f531a8", 
                    "name": "performance-spec", 
                    "specs": {
                      "delay": "0", 
                      "throughput": "100"
                    }
                  }
                ]
              }
            }, 
            "headers": {}
          }, 
          "300": {
            "examples": {
              "application/json": {
                "qos_specs": [
                  {
                    "consumer": "back-end", 
                    "id": "0388d6c6-d5d4-42a3-b289-95205c50dd15", 
                    "name": "reliability-spec", 
                    "specs": {
                      "availability": "100", 
                      "numberOfFailures": "0"
                    }
                  }, 
                  {
                    "consumer": "back-end", 
                    "id": "ecfc6e2e-7117-44a4-8eec-f84d04f531a8", 
                    "name": "performance-spec", 
                    "specs": {
                      "delay": "0", 
                      "throughput": "100"
                    }
                  }
                ]
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Lists quality of service (QoS) specifications.", 
        "tags": [
          "qos-v2-qos-specs"
        ], 
        "title": "List QoS specs"
      }
    ], 
    "/v2/{tenant_id}/qos-specs/{qos_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "showQoSDetails", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique ID of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the QoS specification.", 
            "format": "", 
            "in": "path", 
            "name": "qos_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "links": [
                  {
                    "href": "http://23.253.228.211:8776/v2/e1cf63117ae74309a5bcc2002a23be8b/qos_specs/0388d6c6-d5d4-42a3-b289-95205c50dd15", 
                    "rel": "self"
                  }, 
                  {
                    "href": "http://23.253.228.211:8776/e1cf63117ae74309a5bcc2002a23be8b/qos_specs/0388d6c6-d5d4-42a3-b289-95205c50dd15", 
                    "rel": "bookmark"
                  }
                ], 
                "qos_specs": {
                  "consumer": "back-end", 
                  "id": "0388d6c6-d5d4-42a3-b289-95205c50dd15", 
                  "name": "reliability-spec", 
                  "specs": {
                    "availability": "100", 
                    "numberOfFailures": "0"
                  }
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Shows details for a specified QoS specification.", 
        "tags": [
          "qos-v2-qos-specs"
        ], 
        "title": "Show QoS specification details"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {
          "application/json": {
            "qos_specs": {
              "delay": "1"
            }
          }
        }, 
        "id": "setQoSKey", 
        "method": "put", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/setQoSKey"
            }
          }, 
          {
            "description": "The unique ID of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the QoS specification.", 
            "format": "", 
            "in": "path", 
            "name": "qos_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "qos_specs": {
                  "delay": "1"
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Sets or unsets keys in a specified QoS specification.", 
        "tags": [
          "qos-v2-qos-specs"
        ], 
        "title": "Set or unset keys in QoS specification"
      }, 
      {
        "consumes": [], 
        "description": "", 
        "examples": {}, 
        "id": "deleteQoSSpec", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The unique ID of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the QoS specification.", 
            "format": "", 
            "in": "path", 
            "name": "qos_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique ID of the QoS specification.", 
            "format": "", 
            "in": "path", 
            "name": "qos_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Optional flag that indicates whether to delete the specified QoS\nspecification even if it is in-use.", 
            "format": "", 
            "in": "path", 
            "name": "force", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Deletes a specified QoS specification.", 
        "tags": [
          "qos-v2-qos-specs"
        ], 
        "title": "Delete QoS specification"
      }
    ], 
    "/v2/{tenant_id}/qos-specs/{qos_id}/associate": [
      {
        "consumes": [], 
        "description": "", 
        "examples": {}, 
        "id": "associateQoSSpec", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique ID of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the QoS specification.", 
            "format": "", 
            "in": "path", 
            "name": "qos_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Associates a QoS specification with a specified volume type.", 
        "tags": [
          "qos-v2-qos-specs"
        ], 
        "title": "Associate QoS specification with volume type"
      }
    ], 
    "/v2/{tenant_id}/qos-specs/{qos_id}/associations": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "getQoSAssociations", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique ID of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the QoS specification.", 
            "format": "", 
            "in": "path", 
            "name": "qos_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "qos_associations": [
                  {
                    "association_type": "volume_type", 
                    "id": "a12983c2-83bd-4afa-be9f-ad796573ead6", 
                    "name": "reliability-type"
                  }
                ]
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Gets all associations for a specified QoS specification.", 
        "tags": [
          "qos-v2-qos-specs"
        ], 
        "title": "Get all associations for QoS specification"
      }
    ], 
    "/v2/{tenant_id}/qos-specs/{qos_id}/disassociate": [
      {
        "consumes": [], 
        "description": "", 
        "examples": {}, 
        "id": "disassociateQoSSpec", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique ID of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the QoS specification.", 
            "format": "", 
            "in": "path", 
            "name": "qos_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Disassociates a QoS specification from a specified volume type.", 
        "tags": [
          "qos-v2-qos-specs"
        ], 
        "title": "Disassociate QoS specification from volume type"
      }
    ], 
    "/v2/{tenant_id}/qos-specs/{qos_id}/disassociate_all": [
      {
        "consumes": [], 
        "description": "", 
        "examples": {}, 
        "id": "disassociateQoSSpecAll", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique ID of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The UUID for the QoS specification.", 
            "format": "", 
            "in": "path", 
            "name": "qos_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Disassociates a specified QoS specification from all associations.", 
        "tags": [
          "qos-v2-qos-specs"
        ], 
        "title": "Disassociate QoS specification from all associations"
      }
    ], 
    "/v2/{tenant_id}/snapshots": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {
          "application/json": {
            "snapshot": {
              "description": "Daily backup", 
              "force": true, 
              "name": "snap-001", 
              "volume_id": "5aa119a8-d25b-45a7-8d1b-88e127885635"
            }
          }
        }, 
        "id": "createSnapshot", 
        "method": "post", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "A partial representation of a snapshot used in the creation\nprocess.", 
            "format": "", 
            "in": "query", 
            "name": "snapshot", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "To create a snapshot from an existing volume, specify the ID of the\nexisting volume.", 
            "format": "", 
            "in": "query", 
            "name": "volume_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "[True/False] Indicate whether to snapshot, even if the volume is\nattached. Default==False.", 
            "format": "", 
            "in": "query", 
            "name": "force", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "Name of the snapshot. Default==None.", 
            "format": "", 
            "in": "query", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Description of snapshot. Default==None.", 
            "format": "", 
            "in": "query", 
            "name": "description", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "snapshot": {
                  "created_at": "2013-02-25T03:56:53.081642", 
                  "description": "Daily backup", 
                  "id": "ffa9bc5e-1172-4021-acaf-cdcd78a9584d", 
                  "metadata": {}, 
                  "name": "snap-001", 
                  "size": 1, 
                  "status": "creating", 
                  "volume_id": "5aa119a8-d25b-45a7-8d1b-88e127885635"
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Creates a snapshot, which is a point-in-time complete copy of a volume. You can create a volume from the snapshot.", 
        "tags": [
          "snapshots"
        ], 
        "title": "Create snapshot"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "getSnapshotsSimple", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Sorts by the requested image attribute. Accepted values are\n``name`` , ``status`` , ``container_format`` , ``disk_format`` ,\n``size`` , ``id`` , ``created_at`` , and ``updated_at`` . Default\nis ``created_at`` . The API uses the natural sorting direction of\nthe image attribute that is provided as the ``sort_key`` .", 
            "format": "", 
            "in": "query", 
            "name": "sort_key", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Sorts by one or more sets of attribute and sort direction\ncombinations. If you omit the sort direction in a set, default is\n``desc`` .", 
            "format": "", 
            "in": "query", 
            "name": "sort_dir", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a specified page size of returned items from the query.\nReturns a number of items up to the specified limit value. Use the\n``limit`` parameter to make an initial limited request and use the\nID of the last-seen item from the response as the ``marker``\nparameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "Specifies the ID of the last-seen item. Use the ``limit`` parameter\nto make an initial limited request and use the ID of the last-seen\nitem from the response as the ``marker`` parameter value in a\nsubsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "snapshots": [
                  {
                    "created_at": "2013-02-25T04:13:17.000000", 
                    "description": "Very important", 
                    "id": "2bb856e1-b3d8-4432-a858-09e4ce939389", 
                    "metadata": {}, 
                    "name": "snap-001", 
                    "size": 1, 
                    "status": "available", 
                    "volume_id": "5aa119a8-d25b-45a7-8d1b-88e127885635"
                  }, 
                  {
                    "created_at": "2013-02-25T07:20:38.000000", 
                    "description": "Weekly backup", 
                    "id": "e820db06-58b5-439d-bac6-c01faa3f6499", 
                    "metadata": {}, 
                    "name": "snap-002", 
                    "size": 1, 
                    "status": "available", 
                    "volume_id": "806092e3-7551-4fff-a005-49016f4943b1"
                  }
                ]
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Lists summary information for all Block Storage snapshots that the tenant who submits the request can access.", 
        "tags": [
          "snapshots"
        ], 
        "title": "List snapshots"
      }
    ], 
    "/v2/{tenant_id}/snapshots/detail": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "getSnapshotsDetail", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "snapshots": [
                  {
                    "created_at": "2013-02-25T07:30:12.000000", 
                    "description": "Daily backup", 
                    "id": "43f20e0e-2c2c-4770-9d4e-c3d769ae5470", 
                    "metadata": {}, 
                    "name": "snap-001", 
                    "os-extended-snapshot-attributes:progress": "100%", 
                    "os-extended-snapshot-attributes:project_id": "0c2eba2c5af04d3f9e9d0d410b371fde", 
                    "size": 30, 
                    "status": "available", 
                    "volume_id": "5aa119a8-d25b-45a7-8d1b-88e127885635"
                  }, 
                  {
                    "created_at": "2013-02-25T07:20:38.000000", 
                    "description": "Weekly backup", 
                    "id": "e820db06-58b5-439d-bac6-c01faa3f6499", 
                    "metadata": {}, 
                    "name": "snap-002", 
                    "os-extended-snapshot-attributes:progress": "100%", 
                    "os-extended-snapshot-attributes:project_id": "0c2eba2c5af04d3f9e9d0d410b371fde", 
                    "size": 1, 
                    "status": "available", 
                    "volume_id": "806092e3-7551-4fff-a005-49016f4943b1"
                  }
                ]
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Lists detailed information for all Block Storage snapshots that the tenant who submits the request can access.", 
        "tags": [
          "snapshots"
        ], 
        "title": "List snapshots (detailed)"
      }
    ], 
    "/v2/{tenant_id}/snapshots/{snapshot_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "getSnapshot", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier of an existing snapshot.", 
            "format": "", 
            "in": "path", 
            "name": "snapshot_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "snapshot": {
                  "created_at": "2013-02-25T04:13:17.000000", 
                  "description": "Daily backup", 
                  "id": "2bb856e1-b3d8-4432-a858-09e4ce939389", 
                  "metadata": {}, 
                  "name": "snap-001", 
                  "os-extended-snapshot-attributes:progress": "100%", 
                  "os-extended-snapshot-attributes:project_id": "0c2eba2c5af04d3f9e9d0d410b371fde", 
                  "size": 1, 
                  "status": "available", 
                  "volume_id": "5aa119a8-d25b-45a7-8d1b-88e127885635"
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Shows information for a specified snapshot.", 
        "tags": [
          "snapshots"
        ], 
        "title": "Show snapshot information"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {
          "application/json": {
            "snapshot": {
              "description": "This is yet, another snapshot.", 
              "name": "snap-002"
            }
          }
        }, 
        "id": "updateSnapshot", 
        "method": "put", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier of an existing snapshot.", 
            "format": "", 
            "in": "path", 
            "name": "snapshot_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "snapshot": {
                  "created_at": "2013-02-20T08:11:34.000000", 
                  "description": "This is yet, another snapshot", 
                  "id": "4b502fcb-1f26-45f8-9fe5-3b9a0a52eaf2", 
                  "name": "snap-002", 
                  "size": 1, 
                  "status": "available", 
                  "volume_id": "2402b902-0b7a-458c-9c07-7435a826f794"
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Updates a specified snapshot.", 
        "tags": [
          "snapshots"
        ], 
        "title": "Update snapshot"
      }, 
      {
        "consumes": [], 
        "description": "", 
        "examples": {}, 
        "id": "deleteSnapshot", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier of an existing snapshot.", 
            "format": "", 
            "in": "path", 
            "name": "snapshot_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Deletes a specified snapshot.", 
        "tags": [
          "snapshots"
        ], 
        "title": "Delete snapshot"
      }
    ], 
    "/v2/{tenant_id}/snapshots/{snapshot_id}/metadata": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "showSnapshotMetadata", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier of an existing snapshot.", 
            "format": "", 
            "in": "path", 
            "name": "snapshot_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "snapshot": {
                  "created_at": "2014-05-06T17:59:52.000000", 
                  "description": null, 
                  "id": "dfcd17fe-3b64-44ba-b95f-1c9c7109ef95", 
                  "metadata": {
                    "key": "v2"
                  }, 
                  "name": "my-snapshot", 
                  "os-extended-snapshot-attributes:progress": "0%", 
                  "os-extended-snapshot-attributes:project_id": "7e0105e19cd2466193729ef78b604f79", 
                  "size": 10, 
                  "status": "available", 
                  "volume_id": "ebd80b99-bc3d-4154-9d28-5583baa80580"
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Shows the metadata for a specified snapshot.", 
        "tags": [
          "snapshots"
        ], 
        "title": "Show snapshot metadata"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {
          "application/json": {
            "metadata": {
              "key": "v2"
            }
          }
        }, 
        "id": "updateSnapshotMetadata", 
        "method": "put", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier of an existing snapshot.", 
            "format": "", 
            "in": "path", 
            "name": "snapshot_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "metadata": {
                  "key": "v2"
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Updates the metadata for a specified snapshot.", 
        "tags": [
          "snapshots"
        ], 
        "title": "Update snapshot metadata"
      }
    ], 
    "/v2/{tenant_id}/types": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "getVolumeTypes", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "volume_types": [
                  {
                    "extra_specs": {
                      "capabilities": "gpu"
                    }, 
                    "id": "6685584b-1eac-4da6-b5c3-555430cf68ff", 
                    "name": "SSD"
                  }, 
                  {
                    "extra_specs": {}, 
                    "id": "8eb69a46-df97-4e41-9586-9a40a7533803", 
                    "name": "SATA"
                  }
                ]
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Lists volume types.", 
        "tags": [
          "types"
        ], 
        "title": "List volume types"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {
          "application/json": {
            "volume_type": {
              "extra_specs": {
                "capabilities": "gpu"
              }, 
              "name": "vol-type-001"
            }
          }
        }, 
        "id": "createVolumeType", 
        "method": "post", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "volume_type": {
                  "extra_specs": {
                    "capabilities": "gpu"
                  }, 
                  "id": "6685584b-1eac-4da6-b5c3-555430cf68ff", 
                  "name": "vol-type-001"
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Creates a volume type.", 
        "tags": [
          "types"
        ], 
        "title": "Create volume type"
      }
    ], 
    "/v2/{tenant_id}/types/{volume_type_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {
          "application/json": {
            "volume_type": {
              "extra_specs": {
                "capabilities": "gpu"
              }, 
              "name": "vol-type-001"
            }
          }
        }, 
        "id": "updateVolumeType", 
        "method": "put", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateVolumeType"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier for an existing volume type.", 
            "format": "", 
            "in": "path", 
            "name": "volume_type_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "volume_type": {
                  "extra_specs": {
                    "capabilities": "gpu"
                  }, 
                  "id": "289da7f8-6440-407c-9fb4-7db01ec49164", 
                  "name": "vol-type-001"
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Updates a volume type.", 
        "tags": [
          "types"
        ], 
        "title": "Update volume type"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {
          "application/json": {
            "volume_type": {
              "extra_specs": {
                "capabilities": "gpu"
              }, 
              "name": "vol-type-001"
            }
          }
        }, 
        "id": "updateVolumeTypeExtraSpecs", 
        "method": "put", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/updateVolumeTypeExtraSpecs"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier for an existing volume type.", 
            "format": "", 
            "in": "path", 
            "name": "volume_type_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "volume_type": {
                  "extra_specs": {
                    "capabilities": "gpu"
                  }, 
                  "id": "289da7f8-6440-407c-9fb4-7db01ec49164", 
                  "name": "vol-type-001"
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Updates the extra specifications assigned to a volume type.", 
        "tags": [
          "types"
        ], 
        "title": "Update extra specs for a volume type"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "getVolumeType", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier for an existing volume type.", 
            "format": "", 
            "in": "path", 
            "name": "volume_type_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "volume_type": {
                  "extra_specs": {
                    "capabilities": "gpu"
                  }, 
                  "id": "6685584b-1eac-4da6-b5c3-555430cf68ff", 
                  "name": "vol-type-001"
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Shows information about a specified volume type.", 
        "tags": [
          "types"
        ], 
        "title": "Show volume type information"
      }, 
      {
        "consumes": [], 
        "description": "", 
        "examples": {}, 
        "id": "deleteVolumeType", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier for an existing volume type.", 
            "format": "", 
            "in": "path", 
            "name": "volume_type_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Deletes a specified volume type.", 
        "tags": [
          "types"
        ], 
        "title": "Delete volume type"
      }
    ], 
    "/v2/{tenant_id}/volumes": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {
          "application/json": {
            "volume": {
              "availability_zone": null, 
              "description": null, 
              "imageRef": null, 
              "metadata": {}, 
              "name": "my_volume", 
              "os-volume-type-access: is_public": false, 
              "size": 10, 
              "snapshot_id": null, 
              "source_volid": null, 
              "volume_type": null
            }
          }
        }, 
        "id": "createVolumeTypeAccessExt", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createVolumeTypeAccessExt"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "volume": {
                  "attachments": [], 
                  "availability_zone": "nova", 
                  "bootable": "false", 
                  "created_at": "2014-02-21T19: 52: 04.949734", 
                  "description": null, 
                  "id": "93c2e2aa-7744-4fd6-a31a-80c4726b08d7", 
                  "metadata": {}, 
                  "name": "my_volume", 
                  "os-volume-type-access: is_public": false, 
                  "size": 10, 
                  "snapshot_id": null, 
                  "source_volid": null, 
                  "status": "creating", 
                  "volume_type": "None"
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Creates a private Block Storage volume.", 
        "tags": [
          "volume-type-access"
        ], 
        "title": "Create private volume"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "To create a bootable volume, include the ID of the image from which\nyou want to create the volume in the ``imageRef`` attribute in the\nrequest body.\n\nPreconditions\n\n- You must have enough volume storage quota remaining to create a\n  volume of size requested.\n\nAsynchronous Postconditions\n\n- With correct permissions, you can see the volume status as\n  ``available`` through API calls.\n\n- With correct access, you can see the created volume in the storage\n  system that OpenStack Block Storage manages.\n\nTroubleshooting\n\n- If volume status remains ``creating`` or shows another error\n  status, the request failed. Ensure you meet the preconditions\n  then investigate the storage back end.\n\n- Volume is not created in the storage system which OpenStack Block\n  Storage manages.\n\n- The storage node needs enough free storage space to match the\n  specified size of the volume creation request.", 
        "examples": {
          "application/json": {
            "volume": {
              "attach_status": "detached", 
              "availability_zone": null, 
              "consistencygroup_id": null, 
              "description": null, 
              "imageRef": null, 
              "metadata": {}, 
              "name": null, 
              "project_id": null, 
              "size": 10, 
              "snapshot_id": null, 
              "source_replica": null, 
              "source_volid": null, 
              "status": "creating", 
              "user_id": null, 
              "volume_type": null
            }
          }
        }, 
        "id": "createVolume", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/createVolume"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {
              "application/json": {
                "volume": {
                  "attachments": [], 
                  "availability_zone": "nova", 
                  "bootable": "false", 
                  "consistencygroup_id": null, 
                  "created_at": "2015-05-17T18:14:34.000000", 
                  "description": null, 
                  "encrypted": false, 
                  "id": "7449e332-9715-4185-b191-1cfd91d75d48", 
                  "links": [
                    {
                      "href": "http://volume.example.com:8776/v2/{tenant_id}/volumes/{volume_id}", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://volume.example.com:8776/{tenant_id}/volumes/{volume_id}", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {}, 
                  "name": null, 
                  "os-vol-tenant-attr:tenant_id": "{tenant_id}", 
                  "os-volume-replication:driver_data": null, 
                  "os-volume-replication:extended_status": null, 
                  "replication_status": "disabled", 
                  "size": 10, 
                  "snapshot_id": null, 
                  "source_volid": null, 
                  "status": "creating", 
                  "user_id": "{user_id}", 
                  "volume_type": "lvmdriver-1"
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Creates a volume.", 
        "tags": [
          "volumes"
        ], 
        "title": "Create volume"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "getVolumesSimple", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Comma-separated list of sort keys and optional sort directions in\nthe form of < key > [: < direction > ]. A valid direction is\n``asc`` (ascending) or ``desc`` (descending).", 
            "format": "", 
            "in": "query", 
            "name": "sort", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a specified page size of returned items from the query.\nReturns a number of items up to the specified limit value. Use the\n``limit`` parameter to make an initial limited request and use the\nID of the last-seen item from the response as the ``marker``\nparameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "Specifies the ID of the last-seen item. Use the ``limit`` parameter\nto make an initial limited request and use the ID of the last-seen\nitem from the response as the ``marker`` parameter value in a\nsubsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "volumes": [
                  {
                    "id": "45baf976-c20a-4894-a7c3-c94b7376bf55", 
                    "links": [
                      {
                        "href": "http://localhost:8776/v2/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/45baf976-c20a-4894-a7c3-c94b7376bf55", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://localhost:8776/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/45baf976-c20a-4894-a7c3-c94b7376bf55", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "vol-004"
                  }, 
                  {
                    "id": "5aa119a8-d25b-45a7-8d1b-88e127885635", 
                    "links": [
                      {
                        "href": "http://localhost:8776/v2/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/5aa119a8-d25b-45a7-8d1b-88e127885635", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://localhost:8776/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/5aa119a8-d25b-45a7-8d1b-88e127885635", 
                        "rel": "bookmark"
                      }
                    ], 
                    "name": "vol-003"
                  }
                ]
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Lists summary information for all Block Storage volumes that the tenant who submits the request can access.", 
        "tags": [
          "volumes"
        ], 
        "title": "List volumes"
      }
    ], 
    "/v2/{tenant_id}/volumes/detail": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "getVolumesDetail", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Comma-separated list of sort keys and optional sort directions in\nthe form of < key > [: < direction > ]. A valid direction is\n``asc`` (ascending) or ``desc`` (descending).", 
            "format": "", 
            "in": "query", 
            "name": "sort", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Requests a specified page size of returned items from the query.\nReturns a number of items up to the specified limit value. Use the\n``limit`` parameter to make an initial limited request and use the\nID of the last-seen item from the response as the ``marker``\nparameter value in a subsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "Specifies the ID of the last-seen item. Use the ``limit`` parameter\nto make an initial limited request and use the ID of the last-seen\nitem from the response as the ``marker`` parameter value in a\nsubsequent limited request.", 
            "format": "", 
            "in": "query", 
            "name": "marker", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "volumes": [
                  {
                    "attachments": [], 
                    "availability_zone": "nova", 
                    "created_at": "2013-02-25T06:36:28.000000", 
                    "description": "Another volume.", 
                    "id": "45baf976-c20a-4894-a7c3-c94b7376bf55", 
                    "links": [
                      {
                        "href": "http://localhost:8776/v2/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/45baf976-c20a-4894-a7c3-c94b7376bf55", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://localhost:8776/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/45baf976-c20a-4894-a7c3-c94b7376bf55", 
                        "rel": "bookmark"
                      }
                    ], 
                    "metadata": {
                      "contents": "junk"
                    }, 
                    "name": "vol-004", 
                    "os-vol-host-attr:host": "ip-10-168-107-25", 
                    "os-vol-tenant-attr:tenant_id": "0c2eba2c5af04d3f9e9d0d410b371fde", 
                    "size": 1, 
                    "snapshot_id": null, 
                    "source_volid": null, 
                    "status": "available", 
                    "volume_type": "None"
                  }, 
                  {
                    "attachments": [], 
                    "availability_zone": "nova", 
                    "created_at": "2013-02-25T02:40:21.000000", 
                    "description": "This is yet, another volume.", 
                    "id": "5aa119a8-d25b-45a7-8d1b-88e127885635", 
                    "links": [
                      {
                        "href": "http://localhost:8776/v2/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/5aa119a8-d25b-45a7-8d1b-88e127885635", 
                        "rel": "self"
                      }, 
                      {
                        "href": "http://localhost:8776/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/5aa119a8-d25b-45a7-8d1b-88e127885635", 
                        "rel": "bookmark"
                      }
                    ], 
                    "metadata": {
                      "contents": "not junk"
                    }, 
                    "name": "vol-003", 
                    "os-vol-host-attr:host": "ip-10-168-107-25", 
                    "os-vol-tenant-attr:tenant_id": "0c2eba2c5af04d3f9e9d0d410b371fde", 
                    "size": 1, 
                    "snapshot_id": null, 
                    "source_volid": null, 
                    "status": "available", 
                    "volume_type": "None"
                  }
                ]
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Lists detailed information for all Block Storage volumes that the tenant who submits the request can access.", 
        "tags": [
          "volumes"
        ], 
        "title": "List volumes (detailed)"
      }
    ], 
    "/v2/{tenant_id}/volumes/{volume_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Preconditions\n\n- The specified volume must exist.", 
        "examples": {}, 
        "id": "getVolume", 
        "method": "get", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier of an existing volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "volume": {
                  "attachments": [], 
                  "availability_zone": "nova", 
                  "bootable": "false", 
                  "created_at": "2013-02-25T02:40:21.000000", 
                  "description": "Super volume.", 
                  "id": "5aa119a8-d25b-45a7-8d1b-88e127885635", 
                  "links": [
                    {
                      "href": "http://localhost:8776/v2/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/5aa119a8-d25b-45a7-8d1b-88e127885635", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://localhost:8776/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/5aa119a8-d25b-45a7-8d1b-88e127885635", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "contents": "not junk"
                  }, 
                  "name": "vol-002", 
                  "os-vol-host-attr:host": "ip-10-168-107-25", 
                  "os-vol-tenant-attr:tenant_id": "0c2eba2c5af04d3f9e9d0d410b371fde", 
                  "size": 1, 
                  "snapshot_id": null, 
                  "source_volid": null, 
                  "status": "available", 
                  "volume_type": "None"
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Shows information about a specified volume.", 
        "tags": [
          "volumes"
        ], 
        "title": "Show volume information"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {
          "application/json": {
            "volume": {
              "description": "This is yet, another volume.", 
              "name": "vol-003"
            }
          }
        }, 
        "id": "updateVolume", 
        "method": "put", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier of an existing volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "volume": {
                  "attachments": [], 
                  "availability_zone": "nova", 
                  "created_at": "2013-02-25T02:40:21.000000", 
                  "description": "This is yet, another volume.", 
                  "id": "5aa119a8-d25b-45a7-8d1b-88e127885635", 
                  "links": [
                    {
                      "href": "http://localhost:8776/v2/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/5aa119a8-d25b-45a7-8d1b-88e127885635", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://localhost:8776/0c2eba2c5af04d3f9e9d0d410b371fde/volumes/5aa119a8-d25b-45a7-8d1b-88e127885635", 
                      "rel": "bookmark"
                    }
                  ], 
                  "metadata": {
                    "contents": "not junk"
                  }, 
                  "name": "vol-003", 
                  "size": 1, 
                  "snapshot_id": null, 
                  "source_volid": null, 
                  "status": "available", 
                  "volume_type": "None"
                }
              }
            }, 
            "headers": {}
          }
        }, 
        "summary": "Updates a volume.", 
        "tags": [
          "volumes"
        ], 
        "title": "Update volume"
      }, 
      {
        "consumes": [], 
        "description": "Preconditions\n\n- Volume status must be ``available`` , ``in-use`` , ``error`` , or\n  ``error_restoring`` .\n\n- You cannot already have a snapshot related to the specified\n  volume.\n\n- You cannot delete a volume that is in a migration.\n\nAsynchronous Postconditions\n\n- The volume is deleted in volume index.\n\n- The volume managed by OpenStack Block Storage is deleted in\n  storage node.\n\nTroubleshooting\n\n- If volume status remains in ``deleting`` or becomes\n  ``error_deleting`` the request failed. Ensure you meet the\n  preconditions then investigate the storage back end.\n\n- The volume managed by OpenStack Block Storage is not deleted from\n  the storage system.", 
        "examples": {}, 
        "id": "deleteVolume", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier of an existing volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Deletes a specified volume.", 
        "tags": [
          "volumes"
        ], 
        "title": "Delete volume"
      }
    ], 
    "/v2/{tenant_id}/volumes/{volume_id}/action": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Preconditions\n\n- Volume status must be ``available`` .\n\n- Sufficient amount of storage must exist to extend the volume.\n\n- The user quota must have sufficient volume storage.\n\nTroubleshooting\n\n- An ``error_extending`` volume status indicates that the request\n  failed. Ensure that you meet the preconditions and retry the\n  request. If the request fails again, investigate the storage back\n  end.", 
        "examples": {
          "application/json": {
            "os-extend": {
              "new_size": 3
            }
          }
        }, 
        "id": "extendVolume", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/extendVolume"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier of an existing volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Extends the size of a specified volume to a new size requested in gibibytes (GiB). Specify the ``os-extend`` action in the request body.", 
        "tags": [
          "volume-api-v2-volumes-actions"
        ], 
        "title": "Extend volume"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {
          "application/json": {
            "os-reset_status": {
              "attach_status": "detached", 
              "migration_status": "migrating", 
              "status": "available"
            }
          }
        }, 
        "id": "resetVolume", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/resetVolume"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier of an existing volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Resets the status, attach status, and migration status for a specified volume. Specify the ``os-reset_status`` action in the request body.", 
        "tags": [
          "volume-api-v2-volumes-actions"
        ], 
        "title": "Reset volume statuses"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {
          "application/json": {
            "os-set_image_metadata": {
              "metadata": {
                "image_id": "521752a6-acf6-4b2d-bc7a-119f9148cd8c", 
                "image_name": "image", 
                "kernel_id": "155d900f-4e14-4e4c-a73d-069cbf4541e6", 
                "ramdisk_id": "somedisk"
              }
            }
          }
        }, 
        "id": "setVolumeimagemetadata", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/setVolumeimagemetadata"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier of an existing volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Sets the image metadata for a specified volume. Specify the ``os-set_image_metadata`` action in the request body.", 
        "tags": [
          "volume-api-v2-volumes-actions"
        ], 
        "title": "Set image metadata for volume"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {
          "application/json": {
            "os-unset_image_metadata": {
              "key": "ramdisk_id"
            }
          }
        }, 
        "id": "unsetVolumeimagemetadata", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/unsetVolumeimagemetadata"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier of an existing volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Removes image metadata, by key, from a specified volume. Specify the ``os-unset_image_metadata`` action in the request body and the ``key`` for the metadata key and value pair that you want to remove.", 
        "tags": [
          "volume-api-v2-volumes-actions"
        ], 
        "title": "Remove image metadata from volume"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Preconditions\n\n- Volume status must be ``available`` .\n\n- You should set ``instance_uuid`` or ``host_name`` .", 
        "examples": {
          "application/json": {
            "os-attach": {
              "host_name": "cinder-2", 
              "instance_uuid": "95D9EF50-507D-11E5-B970-0800200C9A66", 
              "mountpoint": "/dev/vdc"
            }
          }
        }, 
        "id": "attachVolume", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/attachVolume"
            }
          }, 
          {
            "description": "The unique identifier of the tenant or account.", 
            "format": "", 
            "in": "path", 
            "name": "tenant_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The unique identifier of an existing volume.", 
            "format": "", 
            "in": "path", 
            "name": "volume_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "202": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Attaches the specified volume to the specified server. Specify the ``os-attach`` action in the request body.", 
        "tags": [
          "volume-api-v2-volumes-actions"
        ], 
        "title": "Attach volume"
      }
    ]
  }, 
  "schemes": {}, 
  "securityDefinitions": {}, 
  "swagger": "2.0", 
  "tags": [
    {
      "description": "API versions", 
      "name": "versions", 
      "summary": ""
    }, 
    {
      "description": "API extensions (extensions)", 
      "name": "extensions", 
      "summary": ""
    }, 
    {
      "description": "Limits (limits)", 
      "name": "limits", 
      "summary": "Shows absolute limits for a tenant.\n\nAn absolute limit value of ``-1`` indicates that the absolute limit\nfor the item is infinite."
    }, 
    {
      "description": "Volumes (volumes)", 
      "name": "volumes", 
      "summary": "A volume is a detachable block storage device similar to a USB hard\ndrive. You can attach a volume to one instance at a time.\n\nThe ``snapshot_id`` and ``source_volid`` parameters specify the ID\nof the snapshot or volume from which this volume originates. If the\nvolume was not created from a snapshot or source volume, these\nvalues are null.\n\nWhen you create, list, update, or delete volumes, the possible\nstatus values are:\n\nVolume statuses\n\n+------------------+----------------------------------------------------------+\n| Status           | Description                                              |\n+------------------+----------------------------------------------------------+\n| creating         | The volume is being created.                             |\n+------------------+----------------------------------------------------------+\n| available        | The volume is ready to be attached to an instance.       |\n+------------------+----------------------------------------------------------+\n| attaching        | The volume is attaching to an instance.                  |\n+------------------+----------------------------------------------------------+\n| in-use           | The volume is attached to an instance.                   |\n+------------------+----------------------------------------------------------+\n| deleting         | The volume is being deleted.                             |\n+------------------+----------------------------------------------------------+\n| error            | An error occurred during volume creation.                |\n+------------------+----------------------------------------------------------+\n| error_deleting   | An error occurred during volume deletion.                |\n+------------------+----------------------------------------------------------+\n| backing-up       | The volume is being backed up.                           |\n+------------------+----------------------------------------------------------+\n| restoring-backup | A backup is being restored to the volume.                |\n+------------------+----------------------------------------------------------+\n| error_restoring  | An error occurred during backup restoration to a volume. |\n+------------------+----------------------------------------------------------+\n| error_extending  | An error occurred while attempting to extend a volume.   |\n+------------------+----------------------------------------------------------+"
    }, 
    {
      "description": "Volume type access (volumes)", 
      "name": "volume-type-access", 
      "summary": "Creates private volumes.\n\nBy default, volumes are public. To create a private volume, set the\n``is_public`` boolean field to ``false`` at volume creation time.\nTo control access to a private volume, you add a project to or\nremove a project from the volume. Private volume types without\nprojects are only accessible by users with the administrative role\nand context."
    }, 
    {
      "description": "Volume actions (volumes, action)", 
      "name": "volume-api-v2-volumes-actions", 
      "summary": "Performs actions for a specified volume. Extends the size, resets\nstatuses for, sets image metadata, or removes image metadata from a\nvolume."
    }, 
    {
      "description": "Backups (backups)", 
      "name": "ext-backups", 
      "summary": "A backup is a full copy of a volume stored in an external service.\nThe service can be configured. The only supported service is Object\nStorage. A backup can subsequently be restored from the external\nservice to either the same volume that the backup was originally\ntaken from or to a new volume. Backup and restore operations can\nonly be carried out on volumes that are in an unattached and\navailable state.\n\nWhen you create, list, or delete backups, these status values are\npossible:\n\nBackup statuses\n\n+-----------------+----------------------------------------------------------+\n| Status          | Description                                              |\n+-----------------+----------------------------------------------------------+\n| creating        | The backup is being created.                             |\n+-----------------+----------------------------------------------------------+\n| available       | The backup is ready to be restored to a volume.          |\n+-----------------+----------------------------------------------------------+\n| deleting        | The backup is being deleted.                             |\n+-----------------+----------------------------------------------------------+\n| error           | An error has occurred with the backup.                   |\n+-----------------+----------------------------------------------------------+\n| restoring       | The backup is being restored to a volume.                |\n+-----------------+----------------------------------------------------------+\n| error_restoring | An error occurred during backup restoration to a volume. |\n+-----------------+----------------------------------------------------------+\n\n\n\nIn the event of an error, more information about the error can be\nfound in the fail_reason field for the backup."
    }, 
    {
      "description": "Backup actions (backups, action)", 
      "name": "ext-backups-actions-v2", 
      "summary": "Force-deletes a backup."
    }, 
    {
      "description": "Capabilities for storage back ends (capabilities)", 
      "name": "os-backend-capabilities-v2", 
      "summary": "Shows capabilities for a storage back end."
    }, 
    {
      "description": "Quota sets extension (os-quota-sets)", 
      "name": "quota-sets", 
      "summary": "Administrators only, depending on policy settings.\n\nShows, updates, and deletes quotas for a tenant."
    }, 
    {
      "description": "Quality of service (QoS) specifications (qos-specs)", 
      "name": "qos-v2-qos-specs", 
      "summary": "Administrators only, depending on policy settings.\n\nCreates, lists, shows details for, associates, disassociates, sets\nkeys, unsets keys, and deletes quality of service (QoS)\nspecifications."
    }, 
    {
      "description": "Volume types (types)", 
      "name": "types", 
      "summary": ""
    }, 
    {
      "description": "Volume snapshots (snapshots)", 
      "name": "snapshots", 
      "summary": "A snapshot is a point-in-time copy of the data that a volume\ncontains.\n\nWhen you create, list, or delete snapshots, these status values are\npossible:\n\nSnapshot statuses\n\n+----------------+---------------------------------------------+\n| Status         | Description                                 |\n+----------------+---------------------------------------------+\n| creating       | The snapshot is being created.              |\n+----------------+---------------------------------------------+\n| available      | The snapshot is ready to be used.           |\n+----------------+---------------------------------------------+\n| deleting       | The snapshot is being deleted.              |\n+----------------+---------------------------------------------+\n| error          | An error occurred during snapshot creation. |\n+----------------+---------------------------------------------+\n| error_deleting | An error occurred during snapshot deletion. |\n+----------------+---------------------------------------------+"
    }, 
    {
      "description": "Volume manage extension (os-volume-manage)", 
      "name": "volume-manage", 
      "summary": "Creates volumes by using existing storage instead of allocating new\nstorage."
    }, 
    {
      "description": "Volume image metadata extension (os-vol-image-meta)", 
      "name": "os-vol-image-meta-v2", 
      "summary": "Shows image metadata that is associated with a specified volume."
    }
  ]
}