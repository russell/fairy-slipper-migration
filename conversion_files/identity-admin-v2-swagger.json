{
  "basePath": {}, 
  "definitions": {
    "admin-authenticate": {
      "properties": {
        "id": {
          "description": "The token ID. This is a required field in the ``token`` object.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "password": {
          "description": "The password of the user. Required if you include the\n``passwordCredentials`` object. If you do not provide a password\ncredentials, you must provide a token.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "passwordCredentials": {
          "description": "A ``passwordCredentials`` object. To authenticate, you must provide\neither a user ID and password or a token.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "tenantId": {
          "description": "The tenant ID. Both the ``tenantId`` and ``tenantName`` attributes\nare optional, but should not be specified together. If both\nattributes are specified, the server responds with a ``400`` ``Bad\nRequest`` .", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "tenantName": {
          "description": "The tenant name. Both the ``tenantId`` and ``tenantName``\nattributes are optional, but should not be specified together. If\nboth attributes are specified, the server responds with a ``400``\n``Bad Request`` .", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "token": {
          "description": "A ``token`` object. Required if you do not provide password\ncredentials.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }, 
        "username": {
          "description": "The user name. Required if you include the ``passwordCredentials``\nobject. If you do not provide a password credentials, you must\nprovide a token.", 
          "format": "", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "admin-authenticate_200": {
      "properties": {
        "access": {
          "description": "An ``access`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "description": {
          "description": "The description of the tenant. If not set, this value is ``null`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "enabled": {
          "description": "Indicates whether the tenant is enabled or disabled.", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "endpoints": {
          "description": "One or more ``endpoints`` objects. Each object shows the\n``adminURL`` , ``region`` , ``internalURL`` , ``id`` , and\n``publicURL`` for the endpoint.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "endpoints_links": {
          "description": "Links for the endpoint.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "expires": {
          "description": "The date and time when the token expires.\n\nThe date and time stamp format is ISO 8601 :\n\n::\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nFor example, ``2015-08-27T09:49:58-05:00`` .\n\nA ``null`` value indicates that the token never expires.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "id": {
          "description": "The tenant ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "issued_at": {
          "description": "The date and time when the token was issued.\n\nThe date and time stamp format is ISO 8601 :\n\n::\n   CCYY-MM-DDThh:mm:ss\u00b1hh:mm\nThe ``\u00b1hh:mm`` value, if included, is the time zone as an offset\nfrom UTC.\n\nFor example, ``2015-08-27T09:49:58-05:00`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "metadata": {
          "description": "A ``metadata`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "Endpoint name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "serviceCatalog": {
          "description": "A ``serviceCatalog`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "tenant": {
          "description": "A ``tenant`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "token": {
          "description": "A ``token`` object.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "type": {
          "description": "Endpoint type.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "user": {
          "description": "A ``user`` object, which shows the ``username`` , ``roles_links`` ,\n``id`` , ``roles`` , and ``name`` .", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "admin-createUser": {
      "properties": {
        "email": {
          "description": "The user email.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "enabled": {
          "description": "Indicates whether the user is enabled (true) or disabled (false).", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "name": {
          "description": "The user name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "password": {
          "description": "The user password.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "tenantId": {
          "description": "The tenant ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "admin-createUser_201": {
      "properties": {
        "email": {
          "description": "The user email.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "enabled": {
          "description": "Indicates whether the user is enabled (true) or disabled (false).", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "id": {
          "description": "The user ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The user name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "username": {
          "description": "The user username.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "admin-getVersionInfo_200": {
      "properties": {
        "location": {
          "description": "", 
          "format": "uri", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "admin-listExtensions-v2.0_200": {
      "properties": {
        "next": {
          "description": "Moves to the next item in the list.", 
          "format": "uri", 
          "required": false, 
          "type": "string"
        }, 
        "previous": {
          "description": "Moves to the previous item in the list.", 
          "format": "uri", 
          "required": false, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "admin-updateUser": {
      "properties": {
        "email": {
          "description": "The user email.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "enabled": {
          "description": "Indicates whether the user is enabled (true) or disabled (false).", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "id": {
          "description": "The user ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The user name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "admin-updateUser_201": {
      "properties": {
        "email": {
          "description": "The user email.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "enabled": {
          "description": "Indicates whether the user is enabled (true) or disabled (false).", 
          "format": "", 
          "required": true, 
          "type": "boolean"
        }, 
        "id": {
          "description": "The user ID.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }, 
        "name": {
          "description": "The user name.", 
          "format": "", 
          "required": true, 
          "type": "string"
        }
      }, 
      "type": "object"
    }
  }, 
  "externalDocs": {}, 
  "host": {}, 
  "info": {
    "license": {
      "name": "Apache 2.0", 
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }, 
    "service": "identity-admin", 
    "title": "Identity Admin", 
    "version": "v2"
  }, 
  "paths": {
    "/v2.0": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Gets detailed information about a specified version of the Identity\nAPI.", 
        "examples": {}, 
        "id": "admin-getVersionInfo", 
        "method": "get", 
        "parameters": [], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "version": {
                  "id": "v2.0", 
                  "links": [
                    {
                      "href": "http://localhost:5000/v2.0/", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://docs.openstack.org/", 
                      "rel": "describedby", 
                      "type": "text/html"
                    }
                  ], 
                  "media-types": [
                    {
                      "base": "application/json", 
                      "type": "application/vnd.openstack.identity-v2.0+json"
                    }
                  ], 
                  "status": "stable", 
                  "updated": "2014-04-17T00:00:00Z"
                }
              }
            }, 
            "headers": {}
          }, 
          "203": {
            "examples": {
              "application/json": {
                "version": {
                  "id": "v2.0", 
                  "links": [
                    {
                      "href": "http://localhost:5000/v2.0/", 
                      "rel": "self"
                    }, 
                    {
                      "href": "http://docs.openstack.org/", 
                      "rel": "describedby", 
                      "type": "text/html"
                    }
                  ], 
                  "media-types": [
                    {
                      "base": "application/json", 
                      "type": "application/vnd.openstack.identity-v2.0+json"
                    }
                  ], 
                  "status": "stable", 
                  "updated": "2014-04-17T00:00:00Z"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "tags": [
          "admin-versions"
        ], 
        "title": "Get version details"
      }
    ], 
    "/v2.0/extensions": [], 
    "/v2.0/extensions/{alias}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Specify the extension alias in the URI.", 
        "examples": {}, 
        "id": "admin-getExtension-v2.0", 
        "method": "get", 
        "parameters": [
          {
            "description": "The extension name.", 
            "format": "", 
            "in": "path", 
            "name": "alias", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "extension": {
                  "alias": "s3tokens", 
                  "description": "OpenStack S3 API.", 
                  "links": [
                    {
                      "href": "https://github.com/openstack/identity-api", 
                      "rel": "describedby", 
                      "type": "text/html"
                    }
                  ], 
                  "name": "OpenStack S3 API", 
                  "namespace": "http://docs.openstack.org/identity/api/ext/s3tokens/v1.0", 
                  "updated": "2013-07-07T12:00:0-00:00"
                }
              }
            }, 
            "headers": {}
          }, 
          "203": {
            "examples": {
              "application/json": {
                "extension": {
                  "alias": "s3tokens", 
                  "description": "OpenStack S3 API.", 
                  "links": [
                    {
                      "href": "https://github.com/openstack/identity-api", 
                      "rel": "describedby", 
                      "type": "text/html"
                    }
                  ], 
                  "name": "OpenStack S3 API", 
                  "namespace": "http://docs.openstack.org/identity/api/ext/s3tokens/v1.0", 
                  "updated": "2013-07-07T12:00:0-00:00"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Gets detailed information for a specified extension.", 
        "tags": [
          "admin-versions"
        ], 
        "title": "Get extension details"
      }
    ], 
    "/v2.0/tenants": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "admin-listTenants", 
        "method": "get", 
        "parameters": [], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "tenants": [
                  {
                    "description": "A description ...", 
                    "enabled": true, 
                    "id": "1234", 
                    "name": "ACME Corp"
                  }, 
                  {
                    "description": "A description ...", 
                    "enabled": true, 
                    "id": "3456", 
                    "name": "Iron Works"
                  }
                ], 
                "tenants_links": []
              }
            }, 
            "headers": {}
          }, 
          "203": {
            "examples": {
              "application/json": {
                "tenants": [
                  {
                    "description": "A description ...", 
                    "enabled": true, 
                    "id": "1234", 
                    "name": "ACME Corp"
                  }, 
                  {
                    "description": "A description ...", 
                    "enabled": true, 
                    "id": "3456", 
                    "name": "Iron Works"
                  }
                ], 
                "tenants_links": []
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Lists all tenants.", 
        "tags": [
          "admin-tenants"
        ], 
        "title": "List tenants"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "admin-getTenantByName", 
        "method": "get", 
        "parameters": [
          {
            "description": "The name of the tenant.", 
            "format": "", 
            "in": "query", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "tenant": {
                  "description": "A description ...", 
                  "enabled": true, 
                  "id": "1234", 
                  "name": "ACME corp"
                }
              }
            }, 
            "headers": {}
          }, 
          "203": {
            "examples": {
              "application/json": {
                "tenant": {
                  "description": "A description ...", 
                  "enabled": true, 
                  "id": "1234", 
                  "name": "ACME corp"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Gets detailed information about a specified tenant by name.", 
        "tags": [
          "admin-tenants"
        ], 
        "title": "Get tenant information by name"
      }
    ], 
    "/v2.0/tenants/{tenantId}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "admin-getTenantById", 
        "method": "get", 
        "parameters": [
          {
            "description": "The tenant ID.", 
            "format": "", 
            "in": "path", 
            "name": "tenantId", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "tenant": {
                  "description": "A description ...", 
                  "enabled": true, 
                  "id": "1234", 
                  "name": "ACME corp"
                }
              }
            }, 
            "headers": {}
          }, 
          "203": {
            "examples": {
              "application/json": {
                "tenant": {
                  "description": "A description ...", 
                  "enabled": true, 
                  "id": "1234", 
                  "name": "ACME corp"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Gets detailed information about a specified tenant by ID.", 
        "tags": [
          "admin-tenants"
        ], 
        "title": "Get tenant information by ID"
      }
    ], 
    "/v2.0/tenants/{tenantId}/users/{userId}/roles": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "admin-listRolesForUserOnTenant", 
        "method": "get", 
        "parameters": [
          {
            "description": "The user ID.", 
            "format": "", 
            "in": "path", 
            "name": "userId", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "The tenant ID.", 
            "format": "", 
            "in": "path", 
            "name": "tenantId", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "roles": [
                  {
                    "description": "Nova Administrator", 
                    "id": "123", 
                    "name": "compute:admin"
                  }
                ], 
                "roles_links": []
              }
            }, 
            "headers": {}
          }, 
          "203": {
            "examples": {
              "application/json": {
                "roles": [
                  {
                    "description": "Nova Administrator", 
                    "id": "123", 
                    "name": "compute:admin"
                  }
                ], 
                "roles_links": []
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Lists roles for a specified user on a specified tenant. Excludes global roles.", 
        "tags": [
          "admin-tenants"
        ], 
        "title": "List roles for user"
      }
    ], 
    "/v2.0/tokens": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "A REST interface provides client authentication by using the POST\nmethod with ``v2.0/tokens`` as the path. Include a payload of\ncredentials in the body.\n\nThe Identity API is a RESTful web service. It is the entry point to\nall service APIs. To access the Identity API, you must know its\nURL.\n\nEach REST request against the Identity Service requires the ``X\n-Auth-Token`` header. Clients obtain this token and the URL\nendpoints for other service APIs by supplying their valid\ncredentials to the authentication service.\n\nIf the authentication token has expired, this call returns the HTTP\n``401`` status code.\n\nIf the token specified in the request body has expired, this call\nreturns the HTTP ``404`` status code.\n\nThe Identity API treats expired tokens as no longer valid tokens.\n\nThe deployment determines how long expired tokens are stored.", 
        "examples": {
          "application/json": {
            "auth": {
              "tenantName": "demo", 
              "token": {
                "id": "cbc36478b0bd8e67e89469c7749d4127"
              }
            }
          }
        }, 
        "id": "admin-authenticate", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/admin-authenticate"
            }
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "access": {
                  "metadata": {
                    "is_admin": 0, 
                    "roles": [
                      "8341d3603a1d4d5985bff09f10704d4d", 
                      "2e66d57df76946fdbe034bc4da6fdec0"
                    ]
                  }, 
                  "serviceCatalog": [
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:8774/v2/73f0aa26640f4971864919d0eb0f0880", 
                          "id": "2dad48f09e2a447a9bf852bcd93548ef", 
                          "internalURL": "http://23.253.72.207:8774/v2/73f0aa26640f4971864919d0eb0f0880", 
                          "publicURL": "http://23.253.72.207:8774/v2/73f0aa26640f4971864919d0eb0f0880", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "nova", 
                      "type": "compute"
                    }, 
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:9696/", 
                          "id": "97c526db8d7a4c88bbb8d68db1bdcdb8", 
                          "internalURL": "http://23.253.72.207:9696/", 
                          "publicURL": "http://23.253.72.207:9696/", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "neutron", 
                      "type": "network"
                    }, 
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:8776/v2/73f0aa26640f4971864919d0eb0f0880", 
                          "id": "93f86dfcbba143a39a33d0c2cd424870", 
                          "internalURL": "http://23.253.72.207:8776/v2/73f0aa26640f4971864919d0eb0f0880", 
                          "publicURL": "http://23.253.72.207:8776/v2/73f0aa26640f4971864919d0eb0f0880", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "cinder", 
                      "type": "volumev2"
                    }, 
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:8774/v3", 
                          "id": "3eb274b12b1d47b2abc536038d87339e", 
                          "internalURL": "http://23.253.72.207:8774/v3", 
                          "publicURL": "http://23.253.72.207:8774/v3", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "nova", 
                      "type": "computev3"
                    }, 
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:3333", 
                          "id": "957f1e54afc64d33a62099faa5e980a2", 
                          "internalURL": "http://23.253.72.207:3333", 
                          "publicURL": "http://23.253.72.207:3333", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "s3", 
                      "type": "s3"
                    }, 
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:9292", 
                          "id": "27d5749f36864c7d96bebf84a5ec9767", 
                          "internalURL": "http://23.253.72.207:9292", 
                          "publicURL": "http://23.253.72.207:9292", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "glance", 
                      "type": "image"
                    }, 
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:8776/v1/73f0aa26640f4971864919d0eb0f0880", 
                          "id": "37c83a2157f944f1972e74658aa0b139", 
                          "internalURL": "http://23.253.72.207:8776/v1/73f0aa26640f4971864919d0eb0f0880", 
                          "publicURL": "http://23.253.72.207:8776/v1/73f0aa26640f4971864919d0eb0f0880", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "cinder", 
                      "type": "volume"
                    }, 
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:8773/services/Admin", 
                          "id": "289b59289d6048e2912b327e5d3240ca", 
                          "internalURL": "http://23.253.72.207:8773/services/Cloud", 
                          "publicURL": "http://23.253.72.207:8773/services/Cloud", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "ec2", 
                      "type": "ec2"
                    }, 
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:8080", 
                          "id": "16b76b5e5b7d48039a6e4cc3129545f3", 
                          "internalURL": "http://23.253.72.207:8080/v1/AUTH_73f0aa26640f4971864919d0eb0f0880", 
                          "publicURL": "http://23.253.72.207:8080/v1/AUTH_73f0aa26640f4971864919d0eb0f0880", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "swift", 
                      "type": "object-store"
                    }, 
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:35357/v2.0", 
                          "id": "26af053673df4ef3a2340c4239e21ea2", 
                          "internalURL": "http://23.253.72.207:5000/v2.0", 
                          "publicURL": "http://23.253.72.207:5000/v2.0", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "keystone", 
                      "type": "identity"
                    }
                  ], 
                  "token": {
                    "expires": "2014-01-31T17:09:57Z", 
                    "id": "admin_id", 
                    "issued_at": "2014-01-30T17:09:57.647795", 
                    "tenant": {
                      "description": null, 
                      "enabled": true, 
                      "id": "73f0aa26640f4971864919d0eb0f0880", 
                      "name": "admin"
                    }
                  }, 
                  "user": {
                    "id": "1f568815cb8148688e6ee9b2f7527dcc", 
                    "name": "admin", 
                    "roles": [
                      {
                        "name": "service"
                      }, 
                      {
                        "name": "admin"
                      }
                    ], 
                    "roles_links": [], 
                    "username": "admin"
                  }
                }
              }
            }, 
            "headers": {}
          }, 
          "203": {
            "examples": {
              "application/json": {
                "access": {
                  "metadata": {
                    "is_admin": 0, 
                    "roles": [
                      "8341d3603a1d4d5985bff09f10704d4d", 
                      "2e66d57df76946fdbe034bc4da6fdec0"
                    ]
                  }, 
                  "serviceCatalog": [
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:8774/v2/73f0aa26640f4971864919d0eb0f0880", 
                          "id": "2dad48f09e2a447a9bf852bcd93548ef", 
                          "internalURL": "http://23.253.72.207:8774/v2/73f0aa26640f4971864919d0eb0f0880", 
                          "publicURL": "http://23.253.72.207:8774/v2/73f0aa26640f4971864919d0eb0f0880", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "nova", 
                      "type": "compute"
                    }, 
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:9696/", 
                          "id": "97c526db8d7a4c88bbb8d68db1bdcdb8", 
                          "internalURL": "http://23.253.72.207:9696/", 
                          "publicURL": "http://23.253.72.207:9696/", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "neutron", 
                      "type": "network"
                    }, 
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:8776/v2/73f0aa26640f4971864919d0eb0f0880", 
                          "id": "93f86dfcbba143a39a33d0c2cd424870", 
                          "internalURL": "http://23.253.72.207:8776/v2/73f0aa26640f4971864919d0eb0f0880", 
                          "publicURL": "http://23.253.72.207:8776/v2/73f0aa26640f4971864919d0eb0f0880", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "cinder", 
                      "type": "volumev2"
                    }, 
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:8774/v3", 
                          "id": "3eb274b12b1d47b2abc536038d87339e", 
                          "internalURL": "http://23.253.72.207:8774/v3", 
                          "publicURL": "http://23.253.72.207:8774/v3", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "nova", 
                      "type": "computev3"
                    }, 
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:3333", 
                          "id": "957f1e54afc64d33a62099faa5e980a2", 
                          "internalURL": "http://23.253.72.207:3333", 
                          "publicURL": "http://23.253.72.207:3333", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "s3", 
                      "type": "s3"
                    }, 
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:9292", 
                          "id": "27d5749f36864c7d96bebf84a5ec9767", 
                          "internalURL": "http://23.253.72.207:9292", 
                          "publicURL": "http://23.253.72.207:9292", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "glance", 
                      "type": "image"
                    }, 
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:8776/v1/73f0aa26640f4971864919d0eb0f0880", 
                          "id": "37c83a2157f944f1972e74658aa0b139", 
                          "internalURL": "http://23.253.72.207:8776/v1/73f0aa26640f4971864919d0eb0f0880", 
                          "publicURL": "http://23.253.72.207:8776/v1/73f0aa26640f4971864919d0eb0f0880", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "cinder", 
                      "type": "volume"
                    }, 
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:8773/services/Admin", 
                          "id": "289b59289d6048e2912b327e5d3240ca", 
                          "internalURL": "http://23.253.72.207:8773/services/Cloud", 
                          "publicURL": "http://23.253.72.207:8773/services/Cloud", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "ec2", 
                      "type": "ec2"
                    }, 
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:8080", 
                          "id": "16b76b5e5b7d48039a6e4cc3129545f3", 
                          "internalURL": "http://23.253.72.207:8080/v1/AUTH_73f0aa26640f4971864919d0eb0f0880", 
                          "publicURL": "http://23.253.72.207:8080/v1/AUTH_73f0aa26640f4971864919d0eb0f0880", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "swift", 
                      "type": "object-store"
                    }, 
                    {
                      "endpoints": [
                        {
                          "adminURL": "http://23.253.72.207:35357/v2.0", 
                          "id": "26af053673df4ef3a2340c4239e21ea2", 
                          "internalURL": "http://23.253.72.207:5000/v2.0", 
                          "publicURL": "http://23.253.72.207:5000/v2.0", 
                          "region": "RegionOne"
                        }
                      ], 
                      "endpoints_links": [], 
                      "name": "keystone", 
                      "type": "identity"
                    }
                  ], 
                  "token": {
                    "expires": "2014-01-31T17:09:57Z", 
                    "id": "admin_id", 
                    "issued_at": "2014-01-30T17:09:57.647795", 
                    "tenant": {
                      "description": null, 
                      "enabled": true, 
                      "id": "73f0aa26640f4971864919d0eb0f0880", 
                      "name": "admin"
                    }
                  }, 
                  "user": {
                    "id": "1f568815cb8148688e6ee9b2f7527dcc", 
                    "name": "admin", 
                    "roles": [
                      {
                        "name": "service"
                      }, 
                      {
                        "name": "admin"
                      }
                    ], 
                    "roles_links": [], 
                    "username": "admin"
                  }
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Authenticates and generates a token.", 
        "tags": [
          "admin-tokens"
        ], 
        "title": "Authenticate for admin API"
      }
    ], 
    "/v2.0/tokens/{tokenId}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "Returns the permissions relevant to a particular client. Valid\ntokens are in the ``/tokens/{tokenId}`` path. A user should expect\nan ``itemNotFound (404)`` fault for an token that is not valid.", 
        "examples": {}, 
        "id": "admin-validateToken", 
        "method": "get", 
        "parameters": [
          {
            "description": "Required. The token ID.", 
            "format": "", 
            "in": "path", 
            "name": "tokenId", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "access": {
                  "token": {
                    "expires": "2010-11-01T03:32:15-05:00", 
                    "id": "ab48a9efdfedb23ty3494", 
                    "tenant": {
                      "id": "345", 
                      "name": "My Project"
                    }
                  }, 
                  "user": {
                    "id": "123", 
                    "name": "jqsmith", 
                    "roles": [
                      {
                        "id": "234", 
                        "name": "compute:admin"
                      }, 
                      {
                        "id": "234", 
                        "name": "object-store:admin", 
                        "tenantId": "1"
                      }
                    ], 
                    "roles_links": []
                  }
                }
              }
            }, 
            "headers": {}
          }, 
          "203": {
            "examples": {
              "application/json": {
                "access": {
                  "token": {
                    "expires": "2010-11-01T03:32:15-05:00", 
                    "id": "ab48a9efdfedb23ty3494", 
                    "tenant": {
                      "id": "345", 
                      "name": "My Project"
                    }
                  }, 
                  "user": {
                    "id": "123", 
                    "name": "jqsmith", 
                    "roles": [
                      {
                        "id": "234", 
                        "name": "compute:admin"
                      }, 
                      {
                        "id": "234", 
                        "name": "object-store:admin", 
                        "tenantId": "1"
                      }
                    ], 
                    "roles_links": []
                  }
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Validates a token and confirms that it belongs to a specified tenant.", 
        "tags": [
          "admin-tokens"
        ], 
        "title": "Validate token"
      }, 
      {
        "consumes": [], 
        "description": "", 
        "examples": {}, 
        "id": "admin-checkToken", 
        "method": "head", 
        "parameters": [
          {
            "description": "Required. The token ID.", 
            "format": "", 
            "in": "path", 
            "name": "tokenId", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "200": {
            "examples": {}, 
            "headers": {}
          }, 
          "203": {
            "examples": {}, 
            "headers": {}
          }, 
          "204": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Validates a token and confirms that it belongs to a specified tenant, for performance.", 
        "tags": [
          "admin-tokens"
        ], 
        "title": "Validate token (admin)"
      }
    ], 
    "/v2.0/tokens/{tokenId}/endpoints": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "admin-listEndpointsForToken", 
        "method": "get", 
        "parameters": [
          {
            "description": "Required. The token ID.", 
            "format": "", 
            "in": "path", 
            "name": "tokenId", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "endpoints": [
                  {
                    "adminURL": "https://nova.region-one.internal.com/v2/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "id": "11b41ee1b00841128b7333d4bf1a6140", 
                    "internalURL": "https://nova.region-one.internal.com/v2/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "name": "nova", 
                    "publicURL": "https://nova.region-one.public.com/v2/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "region": "RegionOne", 
                    "type": "compute"
                  }, 
                  {
                    "adminURL": "https://neutron.region-one.internal.com/", 
                    "id": "cdbfa3c416d741a9b5c968f2dc628acb", 
                    "internalURL": "https://neutron.region-one.internal.com/", 
                    "name": "neutron", 
                    "publicURL": "https://neutron.region-one.public.com/", 
                    "region": "RegionOne", 
                    "type": "network"
                  }, 
                  {
                    "adminURL": "https://cinderv2.region-one.internal.com/v2/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "id": "6de282e4132747ecb48f6fd8c525c6f6", 
                    "internalURL": "https://cinderv2.region-one.internal.com/v2/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "name": "cinderv2", 
                    "publicURL": "https://cinderv2.region-one.public.com/v2/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "region": "RegionOne", 
                    "type": "cinderv2v2"
                  }, 
                  {
                    "adminURL": "https://trove.region-one.internal.com/v1.0/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "id": "4bfad53a0c684bd981d093099eb7799b", 
                    "internalURL": "https://trove.region-one.internal.com/v1.0/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "name": "trove", 
                    "publicURL": "https://trove.region-one.public.com/v1.0/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "region": "RegionOne", 
                    "type": "database"
                  }, 
                  {
                    "adminURL": "https://s3.region-one.internal.com", 
                    "id": "50fb6b43cde44bb6b0e471a682dc42dd", 
                    "internalURL": "https://s3.region-one.internal.com", 
                    "name": "s3", 
                    "publicURL": "https://s3.region-one.public.com", 
                    "region": "RegionOne", 
                    "type": "s3"
                  }, 
                  {
                    "adminURL": "https://glance.region-one.internal.com", 
                    "id": "838a338171164c3c8f56e6b5882267ff", 
                    "internalURL": "https://glance.region-one.internal.com", 
                    "name": "glance", 
                    "publicURL": "https://glance.region-one.public.com", 
                    "region": "RegionOne", 
                    "type": "glance"
                  }, 
                  {
                    "adminURL": "https://novav3.region-one.internal.com/v3", 
                    "id": "b437edd03d244bf4be605b9b8c8689e0", 
                    "internalURL": "https://novav3.region-one.internal.com/v3", 
                    "name": "novav3", 
                    "publicURL": "https://novav3.region-one.public.com/v3", 
                    "region": "RegionOne", 
                    "type": "computev3"
                  }, 
                  {
                    "adminURL": "https://heat.region-one.internal.comv1", 
                    "id": "7a0f6f37344d488fa596a1325e0fcf10", 
                    "internalURL": "https://heat.region-one.internal.comv1", 
                    "name": "heat", 
                    "publicURL": "https://heat.region-one.public.comv1", 
                    "region": "RegionOne", 
                    "type": "cloudformation"
                  }, 
                  {
                    "adminURL": "https://cinder.region-one.internal.com/v1/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "id": "d4f251065dce4ce3946d3c1b87e167f2", 
                    "internalURL": "https://cinder.region-one.internal.com/v1/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "name": "cinder", 
                    "publicURL": "https://cinder.region-one.public.com/v1/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "region": "RegionOne", 
                    "type": "cinderv2"
                  }, 
                  {
                    "adminURL": "https://ec2.region-one.internal.com/services/Admin", 
                    "id": "44c6bf28d9bd4d63bfb00d66f22439a8", 
                    "internalURL": "https://ec2.region-one.internal.com/services/Cloud", 
                    "name": "ec2", 
                    "publicURL": "https://ec2.region-one.public.com/services/Cloud", 
                    "region": "RegionOne", 
                    "type": "ec2"
                  }, 
                  {
                    "adminURL": "https://heat.region-one.internal.com/v1/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "id": "21aaace3f33c46b8aaea2b17d41ffd54", 
                    "internalURL": "https://heat.region-one.internal.com/v1/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "name": "heat", 
                    "publicURL": "https://heat.region-one.public.com/v1/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "region": "RegionOne", 
                    "type": "orchestration"
                  }, 
                  {
                    "adminURL": "https://swift.region-one.internal.com", 
                    "id": "35f7aca3be384580a3b1df43a97c2eb2", 
                    "internalURL": "https://swift.region-one.internal.com/v1/AUTH_be1319401cfa4a0aa590b97cc7b64d8d", 
                    "name": "swift", 
                    "publicURL": "https://swift.region-one.public.com/v1/AUTH_be1319401cfa4a0aa590b97cc7b64d8d", 
                    "region": "RegionOne", 
                    "type": "object-store"
                  }, 
                  {
                    "adminURL": "https://keystone.region-one.internal.com/v2.0", 
                    "id": "48da758fb58c47dcaf02000a4409a265", 
                    "internalURL": "https://keystone.region-one.internal.com/v2.0", 
                    "name": "keystone", 
                    "publicURL": "https://keystone.region-one.public.com/v2.0", 
                    "region": "RegionOne", 
                    "type": "identity"
                  }
                ], 
                "endpoints_links": []
              }
            }, 
            "headers": {}
          }, 
          "203": {
            "examples": {
              "application/json": {
                "endpoints": [
                  {
                    "adminURL": "https://nova.region-one.internal.com/v2/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "id": "11b41ee1b00841128b7333d4bf1a6140", 
                    "internalURL": "https://nova.region-one.internal.com/v2/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "name": "nova", 
                    "publicURL": "https://nova.region-one.public.com/v2/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "region": "RegionOne", 
                    "type": "compute"
                  }, 
                  {
                    "adminURL": "https://neutron.region-one.internal.com/", 
                    "id": "cdbfa3c416d741a9b5c968f2dc628acb", 
                    "internalURL": "https://neutron.region-one.internal.com/", 
                    "name": "neutron", 
                    "publicURL": "https://neutron.region-one.public.com/", 
                    "region": "RegionOne", 
                    "type": "network"
                  }, 
                  {
                    "adminURL": "https://cinderv2.region-one.internal.com/v2/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "id": "6de282e4132747ecb48f6fd8c525c6f6", 
                    "internalURL": "https://cinderv2.region-one.internal.com/v2/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "name": "cinderv2", 
                    "publicURL": "https://cinderv2.region-one.public.com/v2/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "region": "RegionOne", 
                    "type": "cinderv2v2"
                  }, 
                  {
                    "adminURL": "https://trove.region-one.internal.com/v1.0/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "id": "4bfad53a0c684bd981d093099eb7799b", 
                    "internalURL": "https://trove.region-one.internal.com/v1.0/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "name": "trove", 
                    "publicURL": "https://trove.region-one.public.com/v1.0/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "region": "RegionOne", 
                    "type": "database"
                  }, 
                  {
                    "adminURL": "https://s3.region-one.internal.com", 
                    "id": "50fb6b43cde44bb6b0e471a682dc42dd", 
                    "internalURL": "https://s3.region-one.internal.com", 
                    "name": "s3", 
                    "publicURL": "https://s3.region-one.public.com", 
                    "region": "RegionOne", 
                    "type": "s3"
                  }, 
                  {
                    "adminURL": "https://glance.region-one.internal.com", 
                    "id": "838a338171164c3c8f56e6b5882267ff", 
                    "internalURL": "https://glance.region-one.internal.com", 
                    "name": "glance", 
                    "publicURL": "https://glance.region-one.public.com", 
                    "region": "RegionOne", 
                    "type": "glance"
                  }, 
                  {
                    "adminURL": "https://novav3.region-one.internal.com/v3", 
                    "id": "b437edd03d244bf4be605b9b8c8689e0", 
                    "internalURL": "https://novav3.region-one.internal.com/v3", 
                    "name": "novav3", 
                    "publicURL": "https://novav3.region-one.public.com/v3", 
                    "region": "RegionOne", 
                    "type": "computev3"
                  }, 
                  {
                    "adminURL": "https://heat.region-one.internal.comv1", 
                    "id": "7a0f6f37344d488fa596a1325e0fcf10", 
                    "internalURL": "https://heat.region-one.internal.comv1", 
                    "name": "heat", 
                    "publicURL": "https://heat.region-one.public.comv1", 
                    "region": "RegionOne", 
                    "type": "cloudformation"
                  }, 
                  {
                    "adminURL": "https://cinder.region-one.internal.com/v1/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "id": "d4f251065dce4ce3946d3c1b87e167f2", 
                    "internalURL": "https://cinder.region-one.internal.com/v1/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "name": "cinder", 
                    "publicURL": "https://cinder.region-one.public.com/v1/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "region": "RegionOne", 
                    "type": "cinderv2"
                  }, 
                  {
                    "adminURL": "https://ec2.region-one.internal.com/services/Admin", 
                    "id": "44c6bf28d9bd4d63bfb00d66f22439a8", 
                    "internalURL": "https://ec2.region-one.internal.com/services/Cloud", 
                    "name": "ec2", 
                    "publicURL": "https://ec2.region-one.public.com/services/Cloud", 
                    "region": "RegionOne", 
                    "type": "ec2"
                  }, 
                  {
                    "adminURL": "https://heat.region-one.internal.com/v1/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "id": "21aaace3f33c46b8aaea2b17d41ffd54", 
                    "internalURL": "https://heat.region-one.internal.com/v1/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "name": "heat", 
                    "publicURL": "https://heat.region-one.public.com/v1/be1319401cfa4a0aa590b97cc7b64d8d", 
                    "region": "RegionOne", 
                    "type": "orchestration"
                  }, 
                  {
                    "adminURL": "https://swift.region-one.internal.com", 
                    "id": "35f7aca3be384580a3b1df43a97c2eb2", 
                    "internalURL": "https://swift.region-one.internal.com/v1/AUTH_be1319401cfa4a0aa590b97cc7b64d8d", 
                    "name": "swift", 
                    "publicURL": "https://swift.region-one.public.com/v1/AUTH_be1319401cfa4a0aa590b97cc7b64d8d", 
                    "region": "RegionOne", 
                    "type": "object-store"
                  }, 
                  {
                    "adminURL": "https://keystone.region-one.internal.com/v2.0", 
                    "id": "48da758fb58c47dcaf02000a4409a265", 
                    "internalURL": "https://keystone.region-one.internal.com/v2.0", 
                    "name": "keystone", 
                    "publicURL": "https://keystone.region-one.public.com/v2.0", 
                    "region": "RegionOne", 
                    "type": "identity"
                  }
                ], 
                "endpoints_links": []
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Lists the endpoints associated with a specified token.", 
        "tags": [
          "admin-tokens"
        ], 
        "title": "List endoints for token"
      }
    ], 
    "/v2.0/users": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {
          "application/json": {
            "user": {
              "email": "john.smith@example.org", 
              "enabled": true, 
              "name": "jqsmith", 
              "password": "null", 
              "tenantId": "null"
            }
          }
        }, 
        "id": "admin-createUser", 
        "method": "post", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/admin-createUser"
            }
          }, 
          {
            "description": "A valid authentication token for an administrative user.", 
            "format": "", 
            "in": "header", 
            "name": "X-Auth-Token", 
            "required": true, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "201": {
            "examples": {
              "application/json": {
                "user": {
                  "email": "john.smith@example.org", 
                  "enabled": true, 
                  "id": "u1000", 
                  "name": "jqsmith", 
                  "username": "jqsmith"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Creates a user.", 
        "tags": [
          "admin-users"
        ], 
        "title": "Create user"
      }, 
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "admin-getUserByName", 
        "method": "get", 
        "parameters": [], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "user": {
                  "email": "john.smith@example.org", 
                  "enabled": true, 
                  "id": "u1000", 
                  "name": "jqsmith", 
                  "username": "jqsmith"
                }
              }
            }, 
            "headers": {}
          }, 
          "203": {
            "examples": {
              "application/json": {
                "user": {
                  "email": "john.smith@example.org", 
                  "enabled": true, 
                  "id": "u1000", 
                  "name": "jqsmith", 
                  "username": "jqsmith"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Gets detailed information about a specified user by user name.", 
        "tags": [
          "admin-users"
        ], 
        "title": "Get user information by name"
      }
    ], 
    "/v2.0/users/{userId}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {
          "application/json": {
            "user": {
              "email": "john.smith@example.org", 
              "enabled": true, 
              "id": "u1000", 
              "name": "jqsmith", 
              "username": "jqsmith"
            }
          }
        }, 
        "id": "admin-updateUser", 
        "method": "put", 
        "parameters": [
          {
            "description": "", 
            "in": "body", 
            "name": "body", 
            "required": false, 
            "schema": {
              "$ref": "#/definitions/admin-updateUser"
            }
          }, 
          {
            "description": "The user ID.", 
            "format": "", 
            "in": "path", 
            "name": "userId", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "201": {
            "examples": {
              "application/json": {
                "user": {
                  "email": "john.smith@example.org", 
                  "enabled": true, 
                  "id": "u1000", 
                  "name": "jqsmith", 
                  "username": "jqsmith"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "415": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Updates a user.", 
        "tags": [
          "admin-users"
        ], 
        "title": "Update user"
      }, 
      {
        "consumes": [], 
        "description": "", 
        "examples": {}, 
        "id": "admin-deleteUser", 
        "method": "delete", 
        "parameters": [
          {
            "description": "The user ID.", 
            "format": "", 
            "in": "path", 
            "name": "userId", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [], 
        "responses": {
          "204": {
            "examples": {}, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Deletes a user.", 
        "tags": [
          "admin-users"
        ], 
        "title": "Delete user"
      }
    ], 
    "/v2.0/users/{user_id}": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "admin-getUserById", 
        "method": "get", 
        "parameters": [
          {
            "description": "The user ID.", 
            "format": "", 
            "in": "path", 
            "name": "user_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "user": {
                  "email": "john.smith@example.org", 
                  "enabled": true, 
                  "id": "u1000", 
                  "name": "jqsmith", 
                  "username": "jqsmith"
                }
              }
            }, 
            "headers": {}
          }, 
          "203": {
            "examples": {
              "application/json": {
                "user": {
                  "email": "john.smith@example.org", 
                  "enabled": true, 
                  "id": "u1000", 
                  "name": "jqsmith", 
                  "username": "jqsmith"
                }
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Gets detailed information about a specified user by user ID.", 
        "tags": [
          "admin-users"
        ], 
        "title": "Get user information by ID"
      }
    ], 
    "/v2.0/users/{user_id}/roles": [
      {
        "consumes": [
          "application/json"
        ], 
        "description": "", 
        "examples": {}, 
        "id": "admin-listUserGlobalRoles", 
        "method": "get", 
        "parameters": [
          {
            "description": "The user ID.", 
            "format": "", 
            "in": "path", 
            "name": "user_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "produces": [
          "application/json"
        ], 
        "responses": {
          "200": {
            "examples": {
              "application/json": {
                "roles": [
                  {
                    "description": "Nova Administrator", 
                    "id": "123", 
                    "name": "compute:admin"
                  }
                ], 
                "roles_links": []
              }
            }, 
            "headers": {}
          }, 
          "203": {
            "examples": {
              "application/json": {
                "roles": [
                  {
                    "description": "Nova Administrator", 
                    "id": "123", 
                    "name": "compute:admin"
                  }
                ], 
                "roles_links": []
              }
            }, 
            "headers": {}
          }, 
          "400": {
            "examples": {}, 
            "headers": {}
          }, 
          "401": {
            "examples": {}, 
            "headers": {}
          }, 
          "403": {
            "examples": {}, 
            "headers": {}
          }, 
          "404": {
            "examples": {}, 
            "headers": {}
          }, 
          "405": {
            "examples": {}, 
            "headers": {}
          }, 
          "413": {
            "examples": {}, 
            "headers": {}
          }, 
          "503": {
            "examples": {}, 
            "headers": {}
          }
        }, 
        "summary": "Lists global roles for a specified user. Excludes tenant roles.", 
        "tags": [
          "admin-users"
        ], 
        "title": "List user global roles"
      }
    ]
  }, 
  "schemes": {}, 
  "securityDefinitions": {}, 
  "swagger": "2.0", 
  "tags": [
    {
      "description": "Versions", 
      "name": "admin-versions", 
      "summary": ""
    }, 
    {
      "description": "Tokens", 
      "name": "admin-tokens", 
      "summary": ""
    }, 
    {
      "description": "Users", 
      "name": "admin-users", 
      "summary": ""
    }, 
    {
      "description": "Tenants", 
      "name": "admin-tenants", 
      "summary": ""
    }
  ]
}