.. http:get:: /info
   :title: List activated capabilities
   :synopsis: Lists the activated capabilities for this version of the OpenStack Object Storage API.

   

   :responseexample 200: v1/examples/infoDiscoverability_resp_200.json
   :accepts: application/json
   :produces: application/json
   :tag: storage_info
   :statuscode 200: 


.. http:get:: /v1/{account}/{container}/{object}
   :title: Get object content and metadata
   :synopsis: Downloads the object content and gets the object metadata.

   This operation returns the object metadata in the response headers
   and the object content in the response body.
   
   If this is a large object, the response body contains the
   concatenated content of the segment objects. To get the manifest
   instead of concatenated segment objects for a static large object,
   use the ``multipart-manifest`` query parameter.
   
   Example requests and responses:
   
   - Show object details for the ``goodbye`` object in the
     ``marktwain`` container: ``curl -i $publicURL/marktwain/goodbye
     -X GET -H "X-Auth-Token: $token"``
     ::     HTTP/1.1 200 OK    Content-Length: 14    Accept-Ranges:
     bytes    Last-Modified: Wed, 15 Jan 2014 16:41:49 GMT    Etag:
     451e372e48e0f6b1114fa0724aa79fa1    X-Timestamp: 1389804109.39027
     X-Object-Meta-Orig-Filename: goodbyeworld.txt    Content-Type:
     application/octet-stream    X-Trans-Id:
     tx8145a190241f4cf6b05f5-0052d82a34    Date: Thu, 16 Jan 2014
     18:51:32 GMT    Goodbye World!
   
   - Show object details for the ``goodbye`` object, which does not
     exist, in the ``janeausten`` container:
     ``curl -i $publicURL/janeausten/goodbye -X GET -H "X-Auth-Token:
     $token"``
     ::     HTTP/1.1 404 Not Found    Content-Length: 70    Content-
     Type: text/html; charset=UTF-8    X-Trans-Id:
     tx073f7cbb850c4c99934b9-0052d82b04    Date: Thu, 16 Jan 2014
     18:55:00 GMT    <    html>    <    h1>Not Found    <    /h1>    <
     p>The resource could not be found.    <    /p>    <    /html>

   :tag: storage-object-services
   :parameter account: The unique name for the account. An account is
                       also known as the project or tenant.
   :parameter object: The unique name for the object.
   :parameter container: The unique name for the container.  The
                         container name must be from 1 to 256
                         characters long and can start with any
                         character and contain any pattern. Character
                         set must be UTF-8. The container name cannot
                         contain a slash ( ``/`` ) character because
                         this character delimits the container and
                         object name. For example,
                         ``/account/container/object`` .
   :statuscode 200: 
   :statuscode 404: 


.. http:put:: /v1/{account}/{container}/{object}
   :title: Create or replace object
   :synopsis: Creates an object with specified data content and metadata, or replaces an existing object with specified data content and metadata.

   The PUT operation always creates an object. If you use this
   operation on an existing object, you replace the existing object
   and metadata rather than modifying the object. Consequently, this
   operation returns a ``201 Created`` status code.
   
   If you use this operation to copy a manifest object, the new object
   is a normal object and not a copy of the manifest. Instead it is a
   concatenation of all the segment objects. This means that you
   cannot copy objects larger than 5 GB.
   
   Example requests and responses:
   
   - Create object:
     ``curl -i $publicURL/janeausten/helloworld.txt -X PUT -H
     "Content-Length: 1" -H "Content-Type: text/html; charset=UTF-8"
     -H "X-Auth-Token: $token"``
     ::     HTTP/1.1 201 Created    Last-Modified: Fri, 17 Jan 2014
     17:28:35 GMT    Content-Length: 116    Etag:
     d41d8cd98f00b204e9800998ecf8427e    Content-Type: text/html;
     charset=UTF-8    X-Trans-Id: tx4d5e4f06d357462bb732f-0052d96843
     Date: Fri, 17 Jan 2014 17:28:35 GMT
   
   - Replace object:
     ``curl -i $publicURL/janeausten/helloworld -X PUT -H "Content-
     Length: 0" -H "X-Auth-Token: $token"``::     HTTP/1.1 201 Created
     Last-Modified: Fri, 17 Jan 2014 17:28:35 GMT    Content-Length:
     116    Etag: d41d8cd98f00b204e9800998ecf8427e    Content-Type:
     text/html; charset=UTF-8    X-Trans-Id: tx4d5e4f06d357462bb732f-
     0052d96843    Date: Fri, 17 Jan 2014 17:28:35 GMT
   
   The ``201 Created`` status code indicates a successful write.
   
   If the request times out, the operation returns the ``408 Request
   Timeout`` error code.
   
   The ``411 Length Required`` error code indicates a missing
   ``Transfer-Encoding`` or ``Content-Length`` request header.
   
   If the MD5 checksum of the data that is written to the object store
   does not match the optional ``ETag`` value, the operation returns
   the ``422 Unprocessable Entity`` error code.

   :tag: storage-object-services
   :parameter account: The unique name for the account. An account is
                       also known as the project or tenant.
   :parameter object: The unique name for the object.
   :parameter container: The unique name for the container.  The
                         container name must be from 1 to 256
                         characters long and can start with any
                         character and contain any pattern. Character
                         set must be UTF-8. The container name cannot
                         contain a slash ( ``/`` ) character because
                         this character delimits the container and
                         object name. For example,
                         ``/account/container/object`` .
   :statuscode 201: 
   :statuscode 422: 
   :statuscode 411: 
   :statuscode 408: 


.. http:copy:: /v1/{account}/{container}/{object}
   :title: Copy object
   :synopsis: Copies an object to another object in the object store.

   You can copy an object to a new object with the same name. Copying
   to the same name is an alternative to using POST to add metadata to
   an object. With POST , you must specify all the metadata. With COPY
   , you can add additional metadata to the object.
   
   With COPY , you can set the ``X-Fresh-Metadata`` header to ``True``
   to copy the object without any existing metadata.
   
   Alternatively, you can use PUT with the ``X-Copy-From`` request
   header to accomplish the same operation as the COPY object
   operation.
   
   The PUT operation always creates an object. If you use this
   operation on an existing object, you replace the existing object
   and metadata rather than modifying the object. Consequently, this
   operation returns a ``201 Created`` success node.
   
   If you use this operation to copy a manifest object, the new object
   is a normal object and not a copy of the manifest. Instead it is a
   concatenation of all the segment objects. This means that you
   cannot copy objects larger than 5 GB in size. All metadata is
   preserved during the object copy. If you specify metadata on the
   request to copy the object, either PUT or COPY , the metadata
   overwrites any conflicting keys on the target (new) object.
   
   Example requests and responses:
   
   - Copy the ``goodbye`` object from the ``marktwain`` container to
     the ``janeausten`` container: ``curl -i
     $publicURL/marktwain/goodbye -X COPY -H "X-Auth-Token: $token" -H
     "Destination: janeausten/goodbye"``::     HTTP/1.1 201 Created
     Content-Length: 0    X-Copied-From-Last-Modified: Thu, 16 Jan
     2014 21:19:45 GMT    X-Copied-From: marktwain/goodbye    Last-
     Modified: Fri, 17 Jan 2014 18:22:57 GMT    Etag:
     451e372e48e0f6b1114fa0724aa79fa1    Content-Type: text/html;
     charset=UTF-8    X-Object-Meta-Movie: AmericanPie    X-Trans-Id:
     txdcb481ad49d24e9a81107-0052d97501    Date: Fri, 17 Jan 2014
     18:22:57 GMT
   
   - Alternatively, you can use PUT to copy the ``goodbye`` object from
     the ``marktwain`` container to the ``janeausten`` container. This
     request requires a ``Content-Length`` header even if it is set to
     zero (0).
     ``curl -i $publicURL/janeausten/goodbye -X PUT -H "X-Auth-Token:
     $token" -H "X-Copy-From: /marktwain/goodbye" -H "Content-Length:
     0"``
     ::     HTTP/1.1 201 Created    Content-Length: 0    X-Copied-
     From-Last-Modified: Thu, 16 Jan 2014 21:19:45 GMT    X-Copied-
     From: marktwain/goodbye    Last-Modified: Fri, 17 Jan 2014
     18:22:57 GMT    Etag: 451e372e48e0f6b1114fa0724aa79fa1
     Content-Type: text/html; charset=UTF-8    X-Object-Meta-Movie:
     AmericanPie    X-Trans-Id: txdcb481ad49d24e9a81107-0052d97501
     Date: Fri, 17 Jan 2014 18:22:57 GMT
   
   When several replicas exist, the system copies from the most recent
   replica. That is, the COPY operation behaves as though the
   ``X-Newest`` header is in the request.

   :tag: storage-object-services
   :parameter account: The unique name for the account. An account is
                       also known as the project or tenant.
   :parameter object: The unique name for the object.
   :parameter container: The unique name for the container.  The
                         container name must be from 1 to 256
                         characters long and can start with any
                         character and contain any pattern. Character
                         set must be UTF-8. The container name cannot
                         contain a slash ( ``/`` ) character because
                         this character delimits the container and
                         object name. For example,
                         ``/account/container/object`` .
   :statuscode 201: 


.. http:delete:: /v1/{account}/{container}/{object}
   :title: Delete object
   :synopsis: Permanently deletes an object from the object store.

   You can use the COPY method to copy the object to a new location.
   Then, use the DELETE method to delete the original object.
   
   Object deletion occurs immediately at request time. Any subsequent
   GET , HEAD , POST , or DELETE operations return a ``404 Not Found``
   error code.
   
   For static large object manifests, you can add the ``?multipart-
   manifest=delete`` query parameter. This operation deletes the
   segment objects and if all deletions succeed, this operation
   deletes the manifest object.
   
   Example request and response:
   
   - Delete the ``helloworld`` object from the ``marktwain`` container:
     ``curl -i $publicURL/marktwain/helloworld -X DELETE -H "X-Auth-
     Token: $token"``
     ::     HTTP/1.1 204 No Content    Content-Length: 0    Content-
     Type: text/html; charset=UTF-8    X-Trans-Id:
     tx36c7606fcd1843f59167c-0052d6fdac    Date: Wed, 15 Jan 2014
     21:29:16 GMT
   
   Normally the DELETE operation does not return a response body.
   However, with the ``multipart-manifest=delete`` query parameter,
   the response body contains a list of manifest and segment objects
   and the status of their DELETE operations.

   :tag: storage-object-services
   :parameter account: The unique name for the account. An account is
                       also known as the project or tenant.
   :parameter object: The unique name for the object.
   :parameter container: The unique name for the container.  The
                         container name must be from 1 to 256
                         characters long and can start with any
                         character and contain any pattern. Character
                         set must be UTF-8. The container name cannot
                         contain a slash ( ``/`` ) character because
                         this character delimits the container and
                         object name. For example,
                         ``/account/container/object`` .


.. http:head:: /v1/{account}/{container}/{object}
   :title: Show object metadata
   :synopsis: Shows object metadata.

   If the ``Content-Length`` response header is non-zero, the example
   cURL command stalls after it prints the response headers because it
   is waiting for a response body. However, the Object Storage system
   does not return a response body for the HEAD operation.
   
   Example requests and responses:
   
   - Show object metadata:
     ``curl -i $publicURL/marktwain/goodbye -X HEAD -H "X-Auth-Token:
     $token"``
     ::     HTTP/1.1 200 OK    Content-Length: 14    Accept-Ranges:
     bytes    Last-Modified: Thu, 16 Jan 2014 21:12:31 GMT    Etag:
     451e372e48e0f6b1114fa0724aa79fa1    X-Timestamp: 1389906751.73463
     X-Object-Meta-Book: GoodbyeColumbus    Content-Type: application
     /octet-stream    X-Trans-Id: tx37ea34dcd1ed48ca9bc7d-0052d84b6f
     Date: Thu, 16 Jan 2014 21:13:19 GMT
   
   If the request succeeds, the operation returns the 204 status code.

   :tag: storage-object-services
   :parameter account: The unique name for the account. An account is
                       also known as the project or tenant.
   :parameter object: The unique name for the object.
   :parameter container: The unique name for the container.  The
                         container name must be from 1 to 256
                         characters long and can start with any
                         character and contain any pattern. Character
                         set must be UTF-8. The container name cannot
                         contain a slash ( ``/`` ) character because
                         this character delimits the container and
                         object name. For example,
                         ``/account/container/object`` .
   :statuscode 204: 


.. http:post:: /v1/{account}/{container}/{object}
   :title: Create or update object metadata
   :synopsis: Creates or updates object metadata.

   To create or update custom metadata, use the ``X-Object-
   Meta-{name}`` header, where ``{name}`` is the name of the metadata
   item.
   
   In addition to the custom metadata, you can also update these
   system metadata items: ``Content-Type`` ``Content-Encoding``
   ``Content-Disposition`` ``X-Delete-At`` . However you cannot update
   other system metadata such as ``Content-Length`` or ``Last-
   Modified`` .
   
   You can use COPY as an alternate to the POST operation by copying
   to the same object. With the POST operation you must specify all
   metadata items, whereas with the COPY operation, you need to
   specify only changed or additional items.
   
   All metadata is preserved during the object copy. If you specify
   metadata on the request to copy the object, either PUT or COPY ,
   the metadata overwrites any conflicting keys on the target (new)
   object.
   
   A POST request deletes any existing custom metadata that you added
   with a previous PUT or POST request. Consequently, you must specify
   all custom metadata in the request. However, system metadata is
   unchanged by the POST request unless you explicitly supply it in a
   request header.
   
   You can also set the ``X-Delete-At`` or ``X-Delete-After`` header
   to define when to expire the object.
   
   When used as described in this section, the POST operation creates
   or replaces metadata. This form of the operation has no request
   body.
   
   You can also use the `form POST feature
   <http://docs.openstack.org/kilo/config-reference/content/object-
   storage-form-post.html>`_ to upload objects.
   
   Example requests and responses:
   
   - Create object metadata:
     ::     curl -i $publicURL/marktwain/goodbye -X POST -H "X
     -Auth-Token: $token" -H "X-Object-Meta-Book: GoodbyeColumbus"
     ::     HTTP/1.1 202 Accepted    Content-Length: 76    Content-
     Type: text/html; charset=UTF-8    X-Trans-Id:
     txb5fb5c91ba1f4f37bb648-0052d84b3f    Date: Thu, 16 Jan 2014
     21:12:31 GMT    <    html>    <    h1>Accepted    <    /h1>    <
     p>The request is accepted for processing.    <    /p>    <
     /html>
   
   - Update object metadata:
     ::     curl -i $publicURL/marktwain/goodbye -X POST -H "X-Auth-
     Token: $token" H "X-Object-Meta-Book: GoodbyeOldFriend"
     ::     HTTP/1.1 202 Accepted    Content-Length: 76    Content-
     Type: text/html; charset=UTF-8    X-Trans-Id:
     tx5ec7ab81cdb34ced887c8-0052d84ca4    Date: Thu, 16 Jan 2014
     21:18:28 GMT    <    html>    <    h1>Accepted    <    /h1>    <
     p>The request is accepted for processing.    <    /p>    <
     /html>

   :tag: storage-object-services
   :parameter account: The unique name for the account. An account is
                       also known as the project or tenant.
   :parameter object: The unique name for the object.
   :parameter container: The unique name for the container.  The
                         container name must be from 1 to 256
                         characters long and can start with any
                         character and contain any pattern. Character
                         set must be UTF-8. The container name cannot
                         contain a slash ( ``/`` ) character because
                         this character delimits the container and
                         object name. For example,
                         ``/account/container/object`` .
   :statuscode 202: 


.. http:get:: /v1/endpoints
   :title: List endpoints
   :synopsis: Lists endpoints for an object, account, or container.

   When the cloud provider has enabled middleware to list the
   endpoints path, software that needs data location information can
   use this call to avoid network overhead. The cloud provider can
   customize the /endpoints/ path to another resource, so this exact
   resource may vary from provider to provider. Because it goes
   straight to the middleware, the call is not authenticated, so be
   sure you have tightly secured the environment and network when
   using this call.

   :responseexample 201: v1/examples/listEndpoints_resp_201.json
   :accepts: application/json
   :produces: application/json
   :tag: storage_endpoints
   :statuscode 201: 


.. http:get:: /v1/{account}/{container}
   :title: Show container details and list objects
   :synopsis: Shows details for a specified container and lists objects, sorted by name, in the container.

   Specify query parameters in the request to filter the list and
   return a subset of object names. Omit query parameters to return
   the complete list of object names that are stored in the container,
   up to 10,000 names. The 10,000 maximum value is configurable. To
   view the value for the cluster, issue a GET ``/info`` request.
   
   Example requests and responses:
   
   - Show container details for and list objects in the ``marktwain``
     container, and ask for a JSON response:
     ``curl -i $publicURL/marktwain?format=json -X GET -H "X-Auth-
     Token: $token"``
   
   - Show container details for and list objects in the ``marktwain``
     container, and ask for an XML response:
     ``curl -i $publicURL/marktwain?format=xml -X GET -H "X-Auth-
     Token: $token"``
   
   If you use query parameters to page through a long list of objects,
   you have reached the end of the list if the number of items in the
   returned list is less than the request ``limit`` value. The list
   contains more items if the number of items in the returned list
   equals the ``limit`` value.
   
   If the request succeeds, the operation returns one of these status
   codes:
   
   - 200 . Success. The response body lists the objects.
   
   - 204 . Success. The response body shows no objects. Either the
     container has no objects or you are paging through a long list of
     names by using the ``marker`` , ``limit`` , or ``end_marker``
     query parameters, and you have reached the end of the list.
   
   If the container does not exist, the 404 Not Found error code is
   returned.

   :responseexample 200: v1/examples/showContainerDetails_resp_200.json
   :responseexample 200: v1/examples/showContainerDetails_resp_200.txt
   :responseexample 204: v1/examples/showContainerDetails_resp_204.json
   :responseexample 204: v1/examples/showContainerDetails_resp_204.txt
   :accepts: application/json
   :produces: application/json
   :tag: storage-container-services
   :parameter account: The unique name for the account. An account is
                       also known as the project or tenant.
   :parameter container: The unique name for the container.  The
                         container name must be from 1 to 256
                         characters long and can start with any
                         character and contain any pattern. Character
                         set must be UTF-8. The container name cannot
                         contain a slash ( ``/`` ) character because
                         this character delimits the container and
                         object name. For example,
                         ``/account/container/object`` .
   :query limit: For an integer value n , limits the number of results
                 to n .
   :query marker: For a string value x , returns container names that
                  are greater in value than the specified marker.
   :query end_marker: For a string value x , returns container names
                      that are less in value than the specified
                      marker.
   :query prefix: Prefix value. Named items in the response begin with
                  this value.
   :query format: The response format. Valid values are ``json`` ,
                  ``xml`` , or ``plain`` . The default is ``plain`` .
                  If you append the ``format=xml`` or ``format=json``
                  query parameter to the storage account URL, the
                  response shows extended container information
                  serialized in the specified format.  If you append
                  the ``format=plain`` query parameter, the response
                  lists the container names separated by newlines.
   :query delimiter: Delimiter value, which returns the object names
                     that are nested in the container.
   :query path: For a string value, returns the object names that are
                nested in the pseudo path. Equivalent to setting
                delimiter to ``/`` and ``prefix`` to the path with a
                ``/`` at the end.
   :reqheader X-Auth-Token: Authentication token.
   :reqheader X-Newest: If set to True , Object Storage queries all
                        replicas to return the most recent one. If you
                        omit this header, Object Storage responds
                        faster after it finds one valid replica.
                        Because setting this header to True is more
                        expensive for the back end, use it only when
                        it is absolutely needed.
   :reqheader Accept: Instead of using the ``format`` query parameter,
                      set this header to ``application/json`` ,
                      ``application/xml`` , or ``text/xml`` .
   :statuscode 200: 
   :statuscode 404: 
   :statuscode 204: 


.. http:put:: /v1/{account}/{container}
   :title: Create container
   :synopsis: Creates a container.

   You do not need to check whether a container already exists before
   issuing a PUT operation because the operation is idempotent: It
   creates a container or updates an existing container, as
   appropriate.
   
   Example requests and responses:
   
   - Create a container with no metadata: ``curl -i $publicURL/steven
     -X PUT -H "Content-Length: 0" -H "X-Auth-Token: $token"``
     ::     HTTP/1.1 201 Created    Content-Length: 0    Content-Type:
     text/html; charset=UTF-8    X-Trans-Id:
     tx7f6b7fa09bc2443a94df0-0052d58b56    Date: Tue, 14 Jan 2014
     19:09:10 GMT
   
   - Create a container with metadata:
     ``curl -i $publicURL/marktwain -X PUT -H "X-Auth-Token: $token"
     -H "X-Container-Meta-Book: TomSawyer"``
     ::     HTTP/1.1 201 Created    Content-Length: 0    Content-Type:
     text/html; charset=UTF-8    X-Trans-Id:
     tx06021f10fc8642b2901e7-0052d58f37    Date: Tue, 14 Jan 2014
     19:25:43 GMT

   :tag: storage-container-services
   :parameter account: The unique name for the account. An account is
                       also known as the project or tenant.
   :parameter container: The unique name for the container.  The
                         container name must be from 1 to 256
                         characters long and can start with any
                         character and contain any pattern. Character
                         set must be UTF-8. The container name cannot
                         contain a slash ( ``/`` ) character because
                         this character delimits the container and
                         object name. For example,
                         ``/account/container/object`` .
   :statuscode 201: 
   :statuscode 204: 


.. http:post:: /v1/{account}/{container}
   :title: Create, update, or delete container metadata
   :synopsis: Creates, updates, or deletes custom metadata for a container.

   To create, update, or delete a custom metadata item, use the ``X
   -Container-Meta-{name}`` header, where ``{name}`` is the name of
   the metadata item.
   
   Subsequent requests for the same key and value pair overwrite the
   previous value.
   
   To delete container metadata, send an empty value for that header,
   such as for the ``X-Container-Meta-Book`` header. If the tool you
   use to communicate with Object Storage, such as an older version of
   cURL, does not support empty headers, send the ``X-Remove-
   Container-Meta-{name}`` : arbitrary value header. For example, ``X
   -Remove-Container-Meta-Book: x`` . The operation ignores the
   arbitrary value.
   
   If the container already has other custom metadata items, a request
   to create, update, or delete metadata does not affect those items.
   
   This operation does not accept a request body.
   
   Example requests and responses:
   
   - Create container metadata:
     ``curl -i $publicURL/marktwain -X POST -H "X-Auth-Token: $token"
     -H "X-Container-Meta-Author: MarkTwain" -H "X-Container-Meta-Web-
     Directory-Type: text/directory" -H "X-Container-Meta-Century:
     Nineteenth"``
     ::     HTTP/1.1 204 No Content    Content-Length: 0    Content-
     Type: text/html; charset=UTF-8    X-Trans-Id:
     tx05dbd434c651429193139-0052d82635    Date: Thu, 16 Jan 2014
     18:34:29 GMT
   
   - Update container metadata:
     ``curl -i $publicURL/marktwain -X POST -H "X-Auth-Token: $token"
     -H "X-Container-Meta-Author: SamuelClemens"``
     ::     HTTP/1.1 204 No Content    Content-Length: 0    Content-
     Type: text/html; charset=UTF-8    X-Trans-Id:
     txe60c7314bf614bb39dfe4-0052d82653    Date: Thu, 16 Jan 2014
     18:34:59 GMT
   
   - Delete container metadata:
     ``curl -i $publicURL/marktwain -X POST -H "X-Auth-Token: $token"
     -H "X-Remove-Container-Meta-Century: x"``
     ::     HTTP/1.1 204 No Content    Content-Length: 0    Content-
     Type: text/html; charset=UTF-8    X-Trans-Id:
     tx7997e18da2a34a9e84ceb-0052d826d0    Date: Thu, 16 Jan 2014
     18:37:04 GMT
   
   If the request succeeds, the operation returns the 204 status code.
   
   To confirm your changes, issue a show container metadata request.

   :tag: storage-container-services
   :parameter account: The unique name for the account. An account is
                       also known as the project or tenant.
   :parameter container: The unique name for the container.  The
                         container name must be from 1 to 256
                         characters long and can start with any
                         character and contain any pattern. Character
                         set must be UTF-8. The container name cannot
                         contain a slash ( ``/`` ) character because
                         this character delimits the container and
                         object name. For example,
                         ``/account/container/object`` .
   :statuscode 204: 


.. http:head:: /v1/{account}/{container}
   :title: Show container metadata
   :synopsis: Shows container metadata, including the number of objects and the total bytes of all objects stored in the container.

   Show container metadata request:
   
   ``curl -i $publicURL/marktwain -X HEAD -H "X-Auth-Token: $token"``
   
   ::     HTTP/1.1 204 No Content    Content-Length: 0    X-Container-
   Object-Count: 1    Accept-Ranges: bytes    X-Container-Meta-Book:
   TomSawyer    X-Timestamp: 1389727543.65372    X-Container-Meta-
   Author: SamuelClemens    X-Container-Bytes-Used: 14    Content-
   Type: text/plain; charset=utf-8    X-Trans-Id:
   tx0287b982a268461b9ec14-0052d826e2    Date: Thu, 16 Jan 2014
   18:37:22 GMT
   
   If the request succeeds, the operation returns the 204 status code.

   :tag: storage-container-services
   :parameter account: The unique name for the account. An account is
                       also known as the project or tenant.
   :parameter container: The unique name for the container.  The
                         container name must be from 1 to 256
                         characters long and can start with any
                         character and contain any pattern. Character
                         set must be UTF-8. The container name cannot
                         contain a slash ( ``/`` ) character because
                         this character delimits the container and
                         object name. For example,
                         ``/account/container/object`` .
   :statuscode 204: 


.. http:delete:: /v1/{account}/{container}
   :title: Delete container
   :synopsis: Deletes an empty container.

   This operation fails unless the container is empty. An empty
   container has no objects.
   
   Delete the ``steven`` container:
   
   ``curl -i $publicURL/steven -X DELETE -H "X-Auth-Token: $token"``
   
   If the container does not exist, the response is:
   
   ::     HTTP/1.1 404 Not Found    Content-Length: 70    Content-
   Type: text/html; charset=UTF-8    X-Trans-Id:
   tx4d728126b17b43b598bf7-0052d81e34    Date: Thu, 16 Jan 2014
   18:00:20 GMT
   
   If the container exists and the deletion succeeds, the response is:
   
   ::     HTTP/1.1 204 No Content    Content-Length: 0    Content-
   Type: text/html; charset=UTF-8    X-Trans-Id:
   txf76c375ebece4df19c84c-0052d81f14    Date: Thu, 16 Jan 2014
   18:04:04 GMT
   
   If the container exists but is not empty, the response is:
   
   ::     HTTP/1.1 409 Conflict    Content-Length: 95    Content-Type:
   text/html; charset=UTF-8    X-Trans-Id:
   tx7782dc6a97b94a46956b5-0052d81f6b    Date: Thu, 16 Jan 2014
   18:05:31 GMT    <    html>    <    h1>Conflict    <    /h1>    <
   p>There was a conflict when trying to complete your request.    <
   /p>    <    /html>

   :tag: storage-container-services
   :parameter account: The unique name for the account. An account is
                       also known as the project or tenant.
   :parameter container: The unique name for the container.  The
                         container name must be from 1 to 256
                         characters long and can start with any
                         character and contain any pattern. Character
                         set must be UTF-8. The container name cannot
                         contain a slash ( ``/`` ) character because
                         this character delimits the container and
                         object name. For example,
                         ``/account/container/object`` .
   :statuscode 404: 
   :statuscode 204: 
   :statuscode 409: 


.. http:get:: /v1/{account}
   :title: Show account details and list containers
   :synopsis: Shows details for a specified account and lists containers, sorted by name, in the account.

   The sort order for the name is based on a binary comparison, a
   single built-in collating sequence that compares string data by
   using the SQLite memcmp() function, regardless of text encoding.
   See `Collating Sequences
   <http://www.sqlite.org/datatype3.html#collation>`_.
   
   This operation does not accept a request body.
   
   Example requests and responses:
   
   - Show account details and list containers, and ask for a JSON
     response:
     ``curl -i $publicURL?format=json -X GET -H "X-Auth-Token:
     $token"``
     See the example response below.
   
   - List containers and ask for an XML response: ``curl -i
     $publicURL?format=xml -X GET -H "X-Auth-Token: $token"``
     See the example response below.
   
   The response body returns a list of containers. The default
   response ( ``text/plain`` ) returns one container per line.
   
   If you use query parameters to page through a long list of
   containers, you have reached the end of the list if the number of
   items in the returned list is less than the request ``limit``
   value. The list contains more items if the number of items in the
   returned list equals the ``limit`` value.
   
   When asking for a list of containers and there are none, the
   response behavior changes depending on whether the request format
   is text, JSON, or XML. For a text response, you get a 204 , because
   there is no content. However, for a JSON or XML response, you get a
   200 with content indicating an empty array.
   
   If the request succeeds, the operation returns one of these status
   codes:
   
   - 200 . Success. The response body lists the containers.
   
   - 204 . Success. The response body shows no containers. Either the
     account has no containers or you are paging through a long list
     of names by using the ``marker`` , ``limit`` , or ``end_marker``
     query parameters, and you have reached the end of the list.

   :responseexample 200: v1/examples/showAccountDetails_resp_200.json
   :responseexample 200: v1/examples/showAccountDetails_resp_200.txt
   :responseexample 204: v1/examples/showAccountDetails_resp_204.json
   :responseexample 204: v1/examples/showAccountDetails_resp_204.txt
   :accepts: application/json
   :produces: application/json
   :tag: storage-account-services
   :parameter account: The unique name for the account. An account is
                       also known as the project or tenant.
   :query limit: For an integer value n , limits the number of results
                 to n .
   :query marker: For a string value x , returns container names that
                  are greater in value than the specified marker.
   :query end_marker: For a string value x , returns container names
                      that are less in value than the specified
                      marker.
   :query format: The response format. Valid values are ``json`` ,
                  ``xml`` , or ``plain`` . The default is ``plain`` .
                  If you append the ``format=xml`` or ``format=json``
                  query parameter to the storage account URL, the
                  response shows extended container information
                  serialized in the specified format.  If you append
                  the ``format=plain`` query parameter, the response
                  lists the container names separated by newlines.
   :query prefix: Prefix value. Named items in the response begin with
                  this value.
   :query delimiter: Delimiter value, which returns the object names
                     that are nested in the container.
   :reqheader X-Auth-Token: Authentication token.
   :reqheader X-Newest: If set to True , Object Storage queries all
                        replicas to return the most recent one. If you
                        omit this header, Object Storage responds
                        faster after it finds one valid replica.
                        Because setting this header to True is more
                        expensive for the back end, use it only when
                        it is absolutely needed.
   :reqheader Accept: Instead of using the ``format`` query parameter,
                      set this header to ``application/json`` ,
                      ``application/xml`` , or ``text/xml`` .
   :statuscode 200: 
   :statuscode 204: 


.. http:post:: /v1/{account}
   :title: Create, update, or delete account metadata
   :synopsis: Creates, updates, or deletes account metadata.

   To create, update, or delete metadata, use the ``X-Account-
   Meta-{name}`` header, where ``{name}`` is the name of the metadata
   item.
   
   Subsequent requests for the same key and value pair overwrite the
   previous value.
   
   To delete a metadata header, send an empty value for that
   particular header, such as for the ``X-Account-Meta-Book`` header.
   If the tool you use to communicate with Object Storage, such as an
   older version of cURL, does not support empty headers, send the ``X
   -Remove-Account-Meta-{name}`` : arbitrary value header. For
   example, ``X-Remove-Account-Meta-Book: x`` . The operation ignores
   the arbitrary value.
   
   If the container already has other custom metadata items, a request
   to create, update, or delete metadata does not affect those items.
   
   This operation does not accept a request body.
   
   Example requests and responses:
   
   - Create account metadata:
     ``curl -i $publicURL -X POST -H "X-Auth-Token: $token" -H "X
     -Account-Meta-Book: MobyDick" -H "X-Account-Meta-Subject:
     Literature"``
     ::     HTTP/1.1 204 No Content    Content-Length: 0    Content-
     Type: text/html; charset=UTF-8    X-Trans-Id:
     tx8c2dd6aee35442a4a5646-0052d954fb    Date: Fri, 17 Jan 2014
     16:06:19 GMT
   
   - Update account metadata:
     ``curl -i $publicURL -X POST -H "X-Auth-Token: $token" -H "X
     -Account-Meta-Subject: AmericanLiterature"``
     ::     HTTP/1.1 204 No Content    Content-Length: 0    Content-
     Type: text/html; charset=UTF-8    X-Trans-Id:
     tx1439b96137364ab581156-0052d95532    Date: Fri, 17 Jan 2014
     16:07:14 GMT
   
   - Delete account metadata:
     ``curl -i $publicURL -X POST -H "X-Auth-Token: $token" -H "X
     -Remove-Account-Meta-Subject: x"``
     ::     HTTP/1.1 204 No Content    Content-Length: 0    Content-
     Type: text/html; charset=UTF-8    X-Trans-Id:
     tx411cf57701424da99948a-0052d9556f    Date: Fri, 17 Jan 2014
     16:08:15 GMT
   
   If the request succeeds, the operation returns the 204 status code.
   
   To confirm your changes, issue a show account metadata request.

   :tag: storage-account-services
   :parameter account: The unique name for the account. An account is
                       also known as the project or tenant.
   :statuscode 204: 


.. http:head:: /v1/{account}
   :title: Show account metadata
   :synopsis: Shows metadata for a specified account.

   Metadata for the account includes:
   
   - Number of containers
   
   - Number of objects
   
   - Total number of bytes that are stored in Object Storage for the
     account
   
   Because the storage system can store large amounts of data, take
   care when you represent the total bytes response as an integer;
   when possible, convert it to a 64-bit unsigned integer if your
   platform supports that primitive type.
   
   This operation does not accept a request body.
   
   Do not include metadata headers in this request.
   
   Show account metadata request:
   
   ``curl -i $publicURL -X HEAD -H "X-Auth-Token: $token"``
   
   ::     HTTP/1.1 204 No Content    Content-Length: 0    X-Account-
   Object-Count: 1    X-Account-Meta-Book: MobyDick    X-Timestamp:
   1389453423.35964    X-Account-Bytes-Used: 14    X-Account-
   Container-Count: 2    Content-Type: text/plain; charset=utf-8
   Accept-Ranges: bytes    X-Trans-Id:
   txafb3504870144b8ca40f7-0052d955d4    Date: Fri, 17 Jan 2014
   16:09:56 GMT
   
   If the account or authentication token is not valid, the operation
   returns the 401 Unauthorized error code.

   :tag: storage-account-services
   :parameter account: The unique name for the account. An account is
                       also known as the project or tenant.
   :statuscode 204: 
   :statuscode 401: 


