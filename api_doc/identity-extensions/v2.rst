.. http:put:: /v2.0/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}
   :title: Grant roles to user on tenant
   :synopsis: Grants a specified role to a specified user for a specified tenant.

   

   :tag: ksadm-admin
   :parameter userId: The user ID.
   :parameter roleId: The role ID.
   :parameter tenantId: The tenant ID.
   :statuscode 201: 
   :statuscode 413: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:delete:: /v2.0/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}
   :title: Revoke role from user on tenant
   :synopsis: Revokes a specified role from a specified user for a specified tenant.

   

   :tag: ksadm-admin
   :parameter userId: The user ID.
   :parameter roleId: The role ID.
   :parameter tenantId: The tenant ID.
   :statuscode 204: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/services/{serviceId}
   :title: Shows service information by ID
   :synopsis: Shows information for a specified service, by ID.

   

   :responseexample 200: v2/examples/showServiceByID_resp_200.json
   :responseexample 203: v2/examples/showServiceByID_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: ksadm-admin
   :parameter serviceId: The service ID.
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:delete:: /v2.0/services/{serviceId}
   :title: Delete service
   :synopsis: Deletes a specified service.

   

   :tag: ksadm-admin
   :parameter serviceId: The service ID.
   :statuscode 204: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/OS-KSVALIDATE/token/endpoints
   :title: List endpoints for token
   :synopsis: Lists endpoints associated with a specific token.

   

   :responseexample 200: v2/examples/listEndpointsForToken_resp_200.json
   :responseexample 203: v2/examples/listEndpointsForToken_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: ksvalidate
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/users/{userId}/OS-KSS3/credentials/s3credentials/{type}
   :title: List credentials by type
   :synopsis: Lists credentials by type.

   

   :responseexample 200: v2/examples/listCredentialsByType_resp_200.json
   :responseexample 203: v2/examples/listCredentialsByType_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: kss3-admin
   :parameter type: The credential type.
   :parameter userId: The user ID.
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/OS-KSVALIDATE/token/validate
   :title: Validate token
   :synopsis: Checks that a token is valid and that it belongs to a specified tenant and service IDs. Returns the permissions for a particular client.

   Behavior is similar to ``/tokens/{tokenId}`` . An itemNotFound (
   ``404`` ) fault is returned for a token that is not valid.
   
   This extension might decrypt ``X-Subject-Token`` header and
   internally call the normal validation for Identity, passing in all
   headers and query parameters. It should therefore support all
   existing calls on ``/tokens/{tokenId}`` , including extensions such
   as HP-IDM.

   :responseexample 200: v2/examples/validateToken_resp_200.json
   :responseexample 203: v2/examples/validateToken_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: ksvalidate
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:head:: /v2.0/OS-KSVALIDATE/token/validate
   :title: Check token
   :synopsis: Checks that a token is valid and that it belongs to a specified tenant and service IDs, for performance.

   Behavior is similar to ``/tokens/{tokenId}`` . An itemNotFound (
   ``404`` ) fault is returned for a token that is not valid.
   
   This extension might decrypt ``X-Subject-Token`` header and
   internally call the normal validation for Identity, passing in all
   headers and query parameters. It should therefore support all
   existing calls on ``/tokens/{tokenId}`` , including extensions such
   as HP-IDM.

   :tag: ksvalidate
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/tenants/{tenantId}/users
   :title: List users on a tenant
   :synopsis: Lists all users for a specified tenant.

   

   :responseexample 200: v2/examples/listUsersForTenant_resp_200.json
   :responseexample 203: v2/examples/listUsersForTenant_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: ksadm-admin
   :parameter tenantId: The tenant ID.
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:put:: /v2.0/users/{userId}/OS-KSADM/enabled
   :title: Enable user
   :synopsis: Enables a specified user.

   

   :requestexample: v2/examples/enableUser_req.json
   :responseexample 200: v2/examples/enableUser_resp_200.json
   :accepts: application/json
   :produces: application/json
   :tag: ksadm-admin
   :parameter userId: The user ID.
   :statuscode 200: 
   :statuscode 413: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/OS-KSADM/
   :title: List roles
   :synopsis: Lists all roles.

   

   :responseexample 200: v2/examples/listRoles_resp_200.json
   :responseexample 203: v2/examples/listRoles_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: ksadm-admin
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/users
   :title: List users
   :synopsis: Lists all users.

   

   :responseexample 200: v2/examples/listUsers_resp_200.json
   :responseexample 203: v2/examples/listUsers_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: ksadm-admin
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:post:: /v2.0/users
   :title: Create user
   :synopsis: Creates a user.

   

   :requestexample: v2/examples/createUser_req.json
   :responseexample 201: v2/examples/createUser_resp_201.json
   :accepts: application/json
   :produces: application/json
   :tag: ksadm-admin
   :statuscode 201: 
   :statuscode 413: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/OS-KSADM/roles/{role_name}
   :title: Show role information by name
   :synopsis: Shows information for a specified role, by name.

   

   :responseexample 200: v2/examples/showRoleByName_resp_200.json
   :responseexample 203: v2/examples/showRoleByName_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: ksadm-admin
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:put:: /v2.0/users/{userId}/roles/OS-KSADM/{roleId}
   :title: Grant global role to user
   :synopsis: Grants a specified global role to a specified user.

   

   :tag: ksadm-admin
   :parameter userId: The user ID.
   :parameter roleId: The role ID.
   :statuscode 201: 
   :statuscode 413: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:delete:: /v2.0/users/{userId}/roles/OS-KSADM/{roleId}
   :title: Delete global role from user
   :synopsis: Deletes a specified global role from a specified user.

   

   :tag: ksadm-admin
   :parameter userId: The user ID.
   :parameter roleId: The role ID.
   :statuscode 204: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:post:: /v2.0/users/{userId}/OS-KSS3/credentials/s3credentials
   :title: Update user credentials
   :synopsis: Updates credentials.

   

   :requestexample: v2/examples/updateUserCredential_req.json
   :responseexample 200: v2/examples/updateUserCredential_resp_200.json
   :accepts: application/json
   :produces: application/json
   :tag: kss3-admin
   :parameter userId: The user ID.
   :statuscode 200: 
   :statuscode 413: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:delete:: /v2.0/users/{userId}/OS-KSS3/credentials/s3credentials
   :title: Revoke user credentials
   :synopsis: Revokes user credentials.

   

   :tag: kss3-admin
   :parameter userId: The user ID.
   :statuscode 204: 
   :statuscode 413: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/users/{userId}/OS-KSS3/credentials/s3credentials
   :title: Get user credentials
   :synopsis: Gets user credentials.

   

   :responseexample 200: v2/examples/getUserCredential_resp_200.json
   :responseexample 203: v2/examples/getUserCredential_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: kss3-admin
   :parameter userId: The user ID.
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:post:: /v2.0/users/{userId}/OS-KSADM/credentials
   :title: Grant credential to user
   :synopsis: Grants a specified credential to a specified user.

   

   :requestexample: v2/examples/grantCredentialToUser_req.json
   :responseexample 201: v2/examples/grantCredentialToUser_resp_201.json
   :accepts: application/json
   :produces: application/json
   :tag: ksec2-admin
   :parameter userId: The user ID.
   :statuscode 201: 
   :statuscode 413: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/users/{userId}/OS-KSADM/credentials
   :title: List credentials
   :synopsis: Lists credentials.

   

   :responseexample 200: v2/examples/listCredentials_resp_200.json
   :responseexample 203: v2/examples/listCredentials_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: ksec2-admin
   :parameter userId: The user ID.
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/services
   :title: List services
   :synopsis: Lists all services.

   

   :responseexample 200: v2/examples/listServices_resp_200.json
   :responseexample 203: v2/examples/listServices_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: ksadm-admin
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:post:: /v2.0/services
   :title: Create service
   :synopsis: Creates a service.

   

   :requestexample: v2/examples/createService_req.json
   :responseexample 201: v2/examples/createService_resp_201.json
   :accepts: application/json
   :produces: application/json
   :tag: ksadm-admin
   :statuscode 201: 
   :statuscode 413: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/services/{serviceName}
   :title: Show service information by name
   :synopsis: Shows information for a specified service, by name.

   

   :responseexample 200: v2/examples/showServiceByName_resp_200.json
   :responseexample 203: v2/examples/showServiceByName_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: ksadm-admin
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:post:: /v2.0/users/{userId}/OS-KSADM/credentials/OS-KSEC2:ec2Credentials
   :title: Update user credentials
   :synopsis: Updates credentials for a specified user.

   

   :requestexample: v2/examples/updateUserCredential_req.json
   :responseexample 200: v2/examples/updateUserCredential_resp_200.json
   :accepts: application/json
   :produces: application/json
   :tag: ksec2-admin
   :parameter userId: The user ID.
   :statuscode 200: 
   :statuscode 413: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:delete:: /v2.0/users/{userId}/OS-KSADM/credentials/OS-KSEC2:ec2Credentials
   :title: Delete user credentials
   :synopsis: Deletes user credentials.

   

   :tag: ksec2-admin
   :parameter userId: The user ID.
   :statuscode 204: 
   :statuscode 413: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/users/{userId}/OS-KSADM/credentials/OS-KSEC2:ec2Credentials
   :title: Get user credentials
   :synopsis: Gets user credentials.

   

   :responseexample 200: v2/examples/getUserCredential_resp_200.json
   :responseexample 203: v2/examples/getUserCredential_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: ksec2-admin
   :parameter userId: The user ID.
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:post:: /v2.0/OS-KSADM
   :title: Create role
   :synopsis: Creates a role.

   

   :requestexample: v2/examples/createRole_req.json
   :responseexample 201: v2/examples/createRole_resp_201.json
   :accepts: application/json
   :produces: application/json
   :tag: ksadm-admin
   :statuscode 201: 
   :statuscode 413: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:post:: /v2.0/tenants
   :title: Create tenant
   :synopsis: Creates a specified tenant.

   

   :requestexample: v2/examples/createTenant_req.json
   :responseexample 201: v2/examples/createTenant_resp_201.json
   :accepts: application/json
   :produces: application/json
   :tag: ksadm-admin
   :statuscode 201: 
   :statuscode 400: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 413: 
   :statuscode 503: 


.. http:get:: /v2.0/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}
   :title: Get endpoint template
   :synopsis: Gets endpoint templates.

   

   :responseexample 200: v2/examples/getEndpointTemplate_resp_200.json
   :responseexample 203: v2/examples/getEndpointTemplate_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: kscatalog
   :parameter endpointTemplateId: The endpoint template ID.
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:put:: /v2.0/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}
   :title: Update endpoint template
   :synopsis: Updates endpoint template.

   

   :requestexample: v2/examples/updateEndpointTemplate_req.json
   :responseexample 200: v2/examples/updateEndpointTemplate_resp_200.json
   :accepts: application/json
   :produces: application/json
   :tag: kscatalog
   :parameter endpointTemplateId: The endpoint template ID.
   :statuscode 200: 
   :statuscode 413: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:delete:: /v2.0/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}
   :title: Delete endpoint template.
   :synopsis: Deletes an endpoint template.

   

   :tag: kscatalog
   :parameter endpointTemplateId: The endpoint template ID.
   :statuscode 204: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:post:: /v2.0/users/{userId}/OS-KSS3/credentials
   :title: Grant credential to user
   :synopsis: Grants a specified credential to a specified user.

   

   :requestexample: v2/examples/grantCredentialToUser_req.json
   :responseexample 201: v2/examples/grantCredentialToUser_resp_201.json
   :accepts: application/json
   :produces: application/json
   :tag: kss3-admin
   :parameter userId: The user ID.
   :statuscode 201: 
   :statuscode 413: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/users/{userId}/OS-KSS3/credentials
   :title: List credentials
   :synopsis: Lists credentials.

   

   :responseexample 200: v2/examples/listCredentials_resp_200.json
   :responseexample 203: v2/examples/listCredentials_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: kss3-admin
   :parameter userId: The user ID.
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/users/{userId}/roles
   :title: List global roles for user
   :synopsis: Lists global roles for a specified user.

   

   :responseexample 200: v2/examples/listUserRoles_resp_200.json
   :responseexample 203: v2/examples/listUserRoles_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: ksadm-admin
   :parameter userId: The user ID.
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:post:: /v2.0/tenants/{tenantId}
   :title: Update tenant
   :synopsis: Updates a specified tenant.

   

   :requestexample: v2/examples/updateTenant_req.json
   :responseexample 200: v2/examples/updateTenant_resp_200.json
   :accepts: application/json
   :produces: application/json
   :tag: ksadm-admin
   :parameter tenantId: The tenant ID.
   :statuscode 200: 
   :statuscode 413: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:delete:: /v2.0/tenants/{tenantId}
   :title: Delete tenant
   :synopsis: Deletes a specified tenant.

   

   :tag: ksadm-admin
   :parameter tenantId: The tenant ID.
   :statuscode 204: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:post:: /v2.0/tenants/{tenantId}/OS-KSCATALOG/endpoints
   :title: Create endpoint
   :synopsis: Creates endpoint to a tenant.

   

   :requestexample: v2/examples/createEndpoint_req.json
   :responseexample 201: v2/examples/createEndpoint_resp_201.json
   :accepts: application/json
   :produces: application/json
   :tag: kscatalog
   :parameter tenantId: The tenant ID.
   :statuscode 201: 
   :statuscode 413: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/tenants/{tenantId}/OS-KSCATALOG/endpoints
   :title: List endpoints
   :synopsis: Lists endpoints for a tenant.

   

   :responseexample 200: v2/examples/listEndpoints_resp_200.json
   :responseexample 203: v2/examples/listEndpoints_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: kscatalog
   :parameter tenantId: The tenant ID.
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/users/{userId}/OS-KSADM/credentials/OS-KSEC2:ec2Credentials/{type}
   :title: List credentials by type
   :synopsis: Lists credentials by type.

   

   :responseexample 200: v2/examples/listCredentialsByType_resp_200.json
   :responseexample 203: v2/examples/listCredentialsByType_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: ksec2-admin
   :parameter type: The credential type.
   :parameter userId: The user ID.
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/OS-KSCATALOG/endpointTemplates
   :title: List endpoint templates
   :synopsis: Lists endpoint templates.

   

   :responseexample 200: v2/examples/listEndpointTemplates_resp_200.json
   :responseexample 203: v2/examples/listEndpointTemplates_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: kscatalog
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:post:: /v2.0/OS-KSCATALOG/endpointTemplates
   :title: Create endpoint template
   :synopsis: Creates endpoint template.

   

   :requestexample: v2/examples/createEndpointTemplate_req.json
   :responseexample 201: v2/examples/createEndpointTemplate_resp_201.json
   :accepts: application/json
   :produces: application/json
   :tag: kscatalog
   :statuscode 201: 
   :statuscode 413: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/OS-KSADM/{roleId}
   :title: Show role information by ID
   :synopsis: Shows information for a specified role, by ID.

   

   :responseexample 200: v2/examples/showRoleByID_resp_200.json
   :responseexample 203: v2/examples/showRoleByID_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: ksadm-admin
   :parameter roleId: The role ID.
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:delete:: /v2.0/OS-KSADM/{roleId}
   :title: Delete role
   :synopsis: Deletes a specified role.

   

   :tag: ksadm-admin
   :parameter roleId: The role ID.
   :statuscode 204: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:put:: /v2.0/users/{userId}
   :title: Update user
   :synopsis: Updates a specified user.

   

   :requestexample: v2/examples/updateUser_req.json
   :responseexample 200: v2/examples/updateUser_resp_200.json
   :accepts: application/json
   :produces: application/json
   :tag: ksadm-admin
   :parameter userId: The user ID.
   :statuscode 200: 
   :statuscode 413: 
   :statuscode 415: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:delete:: /v2.0/users/{userId}
   :title: Delete user
   :synopsis: Deletes a specified user.

   

   :tag: ksadm-admin
   :parameter userId: The user ID.
   :statuscode 204: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:get:: /v2.0/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}
   :title: Get endpoint
   :synopsis: Gets endpoint for a tenant.

   

   :responseexample 200: v2/examples/getEndpoint_resp_200.json
   :responseexample 203: v2/examples/getEndpoint_resp_203.json
   :accepts: application/json
   :produces: application/json
   :tag: kscatalog
   :parameter tenantId: The tenant ID.
   :parameter endpointId: The endpoint ID.
   :statuscode 200: 
   :statuscode 203: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


.. http:delete:: /v2.0/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}
   :title: Delete endpoint
   :synopsis: Deletes an endpoint from a tenant.

   

   :tag: kscatalog
   :parameter tenantId: The tenant ID.
   :parameter endpointId: The endpoint ID.
   :statuscode 204: 
   :statuscode 413: 
   :statuscode 405: 
   :statuscode 404: 
   :statuscode 403: 
   :statuscode 401: 
   :statuscode 400: 
   :statuscode 503: 


